import { getBlockStartPoint, isKeyedSegment } from "./util.slice-blocks.js";
import { reverseSelection } from "./util.reverse-selection.js";
import { getSelectionText } from "./selector.is-at-the-start-of-block.js";
const getBlockTextBefore = ({
  context
}) => {
  if (!context.selection)
    return "";
  const point = (context.selection.backward ? reverseSelection(context.selection) : context.selection).anchor, key = isKeyedSegment(point.path[0]) ? point.path[0]._key : void 0, block = key ? context.value.find((block2) => block2._key === key) : void 0;
  if (!block)
    return "";
  const startOfBlock = getBlockStartPoint({
    node: block,
    path: [{
      _key: block._key
    }]
  });
  return getSelectionText({
    context: {
      ...context,
      value: context.value,
      selection: {
        anchor: startOfBlock,
        focus: point
      }
    }
  });
};
export {
  getBlockTextBefore
};
//# sourceMappingURL=selector.get-text-before.js.map
