{"version":3,"file":"SanityVision.esm.js","sources":["../../src/apiVersions.ts","../../src/components/DelayedSpinner.tsx","../../src/codemirror/extensions.ts","../../src/codemirror/useCodemirrorTheme.ts","../../src/codemirror/VisionCodeMirror.styled.tsx","../../src/codemirror/VisionCodeMirror.tsx","../../src/perspectives.ts","../../src/util/encodeQueryString.ts","../../src/util/getBlobUrl.ts","../../src/util/isPlainObject.ts","../../src/util/localStorage.ts","../../src/util/parseApiQueryString.ts","../../src/util/prefixApiVersion.ts","../../src/util/resizeObserver.ts","../../src/util/tryParseParams.ts","../../src/util/validateApiVersion.ts","../../src/components/ParamsEditor.tsx","../../src/components/PerspectivePopover.styled.tsx","../../src/components/PerspectivePopover.tsx","../../src/components/QueryErrorDialog.styled.tsx","../../src/components/QueryErrorDetails.tsx","../../src/components/QueryErrorDialog.tsx","../../src/components/ResultView.styled.tsx","../../src/components/ResultView.tsx","../../src/components/SaveResultButtons.tsx","../../src/components/VisionGui.styled.tsx","../../src/components/VisionGui.tsx","../../src/hooks/useDatasets.ts","../../src/containers/VisionContainer.tsx","../../src/containers/VisionErrorBoundary.tsx","../../src/SanityVision.tsx"],"sourcesContent":["export const API_VERSIONS = [\n  'v1',\n  'vX',\n  'v2021-03-25',\n  'v2021-10-21',\n  'v2022-03-07',\n  `v${new Date().toISOString().split('T')[0]}`,\n]\nexport const [DEFAULT_API_VERSION] = API_VERSIONS.slice(-1)\n","import {Spinner} from '@sanity/ui'\nimport {useEffect, useState} from 'react'\n\ninterface DelayedSpinnerProps {\n  delay?: number\n}\n\n// Waits for X ms before showing a spinner\nexport function DelayedSpinner(props: DelayedSpinnerProps) {\n  const [show, setShow] = useState(false)\n\n  useEffect(() => {\n    const timer = setTimeout(() => setShow(true), props.delay || 500)\n    return () => clearTimeout(timer)\n  }, [props.delay])\n\n  return show ? <Spinner muted size={4} /> : null\n}\n","import {closeBrackets} from '@codemirror/autocomplete'\nimport {defaultKeymap, history, historyKeymap} from '@codemirror/commands'\nimport {javascriptLanguage} from '@codemirror/lang-javascript'\nimport {\n  bracketMatching,\n  defaultHighlightStyle,\n  indentOnInput,\n  syntaxHighlighting,\n} from '@codemirror/language'\nimport {highlightSelectionMatches} from '@codemirror/search'\nimport {type Extension} from '@codemirror/state'\nimport {\n  drawSelection,\n  highlightActiveLine,\n  highlightActiveLineGutter,\n  highlightSpecialChars,\n  keymap,\n  lineNumbers,\n} from '@codemirror/view'\n\nexport const codemirrorExtensions: Extension[] = [\n  [javascriptLanguage],\n  lineNumbers(),\n  highlightActiveLine(),\n  highlightActiveLineGutter(),\n  highlightSelectionMatches(),\n  highlightSpecialChars(),\n  indentOnInput(),\n  bracketMatching(),\n  closeBrackets(),\n  history(),\n  drawSelection(),\n  syntaxHighlighting(defaultHighlightStyle, {fallback: true}),\n  keymap.of(\n    [\n      // Override the default keymap for Mod-Enter to not insert a new line, we have a custom event handler for executing queries\n      {key: 'Mod-Enter', run: () => true},\n\n      // Add the default keymap and history keymap\n      defaultKeymap,\n      historyKeymap,\n    ]\n      .flat()\n      .filter(Boolean),\n  ),\n]\n","import {HighlightStyle, syntaxHighlighting} from '@codemirror/language'\nimport {EditorView} from '@codemirror/view'\nimport {tags as t} from '@lezer/highlight'\nimport {hues} from '@sanity/color'\nimport {rem, type Theme} from '@sanity/ui'\nimport {useMemo} from 'react'\n\nexport function useCodemirrorTheme(theme: Theme) {\n  const cmTheme = useMemo(() => createTheme(theme), [theme])\n  const cmHighlight = useMemo(() => syntaxHighlighting(createHighlight(theme)), [theme])\n\n  return [cmTheme, cmHighlight]\n}\n\nfunction createTheme(theme: Theme) {\n  const {color, fonts} = theme.sanity\n  const card = color.card.enabled\n  const cursor = hues.blue[color.dark ? 400 : 500].hex\n  const selection = hues.gray[theme.sanity.color.dark ? 900 : 100].hex\n\n  return EditorView.theme(\n    {\n      '&': {\n        color: card.fg,\n        backgroundColor: card.bg,\n      },\n\n      '.cm-content': {\n        caretColor: cursor,\n      },\n\n      '.cm-editor': {\n        fontFamily: fonts.code.family,\n        fontSize: rem(fonts.code.sizes[1].fontSize),\n        lineHeight: 'inherit',\n      },\n\n      '.cm-cursor, .cm-dropCursor': {borderLeftColor: cursor},\n      '&.cm-focused .cm-selectionBackground, .cm-selectionBackground, .cm-content ::selection': {\n        backgroundColor: selection,\n      },\n\n      '.cm-panels': {backgroundColor: card.bg, color: card.fg},\n      '.cm-panels.cm-panels-top': {borderBottom: `2px solid ${card.border}`},\n      '.cm-panels.cm-panels-bottom': {borderTop: `2px solid ${card.border}`},\n    },\n    {dark: color.dark},\n  )\n}\n\nfunction createHighlight(theme: Theme) {\n  const c = theme.sanity.color.base\n  const s = theme.sanity.color.syntax\n  return HighlightStyle.define([\n    {tag: t.keyword, color: s.keyword},\n    {tag: [t.propertyName, t.name, t.deleted, t.character, t.macroName], color: s.property},\n    {tag: [t.function(t.variableName), t.labelName], color: s.function},\n    {tag: [t.color, t.constant(t.name), t.standard(t.name)], color: s.variable},\n    {tag: [t.definition(t.name), t.separator], color: s.constant},\n    {\n      tag: [\n        t.typeName,\n        t.className,\n        t.number,\n        t.changed,\n        t.annotation,\n        t.modifier,\n        t.self,\n        t.namespace,\n      ],\n      color: s.number,\n    },\n    {\n      tag: [t.operator, t.operatorKeyword, t.url, t.escape, t.regexp, t.link, t.special(t.string)],\n      color: s.operator,\n    },\n    {tag: [t.meta, t.comment], color: s.comment},\n    {tag: t.strong, fontWeight: 'bold'},\n    {tag: t.emphasis, fontStyle: 'italic'},\n    {tag: t.strikethrough, textDecoration: 'line-through'},\n    {tag: t.heading, fontWeight: 'bold', color: s.property},\n    {tag: [t.atom, t.bool, t.special(t.variableName)], color: s.boolean},\n    {tag: [t.processingInstruction, t.string, t.inserted], color: s.string},\n    {tag: t.invalid, color: c.fg},\n  ])\n}\n","import {rem} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const EditorRoot = styled.div`\n  width: 100%;\n  box-sizing: border-box;\n  height: 100%;\n  overflow: hidden;\n  overflow: clip;\n  position: relative;\n  display: flex;\n\n  & .cm-theme {\n    width: 100%;\n  }\n\n  & .cm-editor {\n    height: 100%;\n\n    font-size: 16px;\n    line-height: 21px;\n  }\n\n  & .cm-line {\n    padding-left: ${({theme}) => rem(theme.sanity.space[3])};\n  }\n\n  & .cm-content {\n    border-right-width: ${({theme}) => rem(theme.sanity.space[4])} !important;\n    padding-top: ${({theme}) => rem(theme.sanity.space[5])};\n  }\n`\n","import {useTheme} from '@sanity/ui'\nimport CodeMirror, {type ReactCodeMirrorProps} from '@uiw/react-codemirror'\n\nimport {codemirrorExtensions} from './extensions'\nimport {useCodemirrorTheme} from './useCodemirrorTheme'\nimport {EditorRoot} from './VisionCodeMirror.styled'\n\nexport function VisionCodeMirror(\n  props: Omit<ReactCodeMirrorProps, 'basicSetup' | 'theme' | 'extensions'>,\n) {\n  const sanityTheme = useTheme()\n  const theme = useCodemirrorTheme(sanityTheme)\n\n  return (\n    <EditorRoot>\n      <CodeMirror basicSetup={false} theme={theme} extensions={codemirrorExtensions} {...props} />\n    </EditorRoot>\n  )\n}\n","export const SUPPORTED_PERSPECTIVES = ['pinnedRelease', 'raw', 'published', 'drafts'] as const\n\nexport type SupportedPerspective = (typeof SUPPORTED_PERSPECTIVES)[number]\n\n/**\n * Virtual perspectives are recognised by Vision, but do not concretely reflect the names of real\n * perspectives. Virtual perspectives are transformed into real perspectives before being used to\n * interact with data.\n *\n * For example, the `pinnedRelease` virtual perspective is transformed to the real perspective\n * currently pinned in Studio.\n */\nexport const VIRTUAL_PERSPECTIVES = ['pinnedRelease'] as const\n\nexport type VirtualPerspective = (typeof VIRTUAL_PERSPECTIVES)[number]\n\nexport function isSupportedPerspective(p: string): p is SupportedPerspective {\n  return SUPPORTED_PERSPECTIVES.includes(p as SupportedPerspective)\n}\n\nexport function isVirtualPerspective(\n  maybeVirtualPerspective: unknown,\n): maybeVirtualPerspective is VirtualPerspective {\n  return (\n    typeof maybeVirtualPerspective === 'string' &&\n    VIRTUAL_PERSPECTIVES.includes(maybeVirtualPerspective as VirtualPerspective)\n  )\n}\n","export function encodeQueryString(\n  query: string,\n  params: Record<string, unknown> = {},\n  options: Record<string, string | string[]> = {},\n): string {\n  const searchParams = new URLSearchParams()\n  searchParams.set('query', query)\n\n  for (const [key, value] of Object.entries(params)) {\n    searchParams.set(`$${key}`, JSON.stringify(value))\n  }\n\n  for (const [key, value] of Object.entries(options)) {\n    if (value) searchParams.set(key, `${value}`)\n  }\n\n  return `?${searchParams}`\n}\n","import {json2csv} from 'json-2-csv'\n\nfunction getBlobUrl(content: string, mimeType: string): string {\n  return URL.createObjectURL(\n    new Blob([content], {\n      type: mimeType,\n    }),\n  )\n}\n\nfunction getMemoizedBlobUrlResolver(mimeType: string, stringEncoder: (input: any) => string) {\n  return (() => {\n    let prevResult = ''\n    let prevContent = ''\n    return (input: unknown) => {\n      const content = stringEncoder(input)\n      if (typeof content !== 'string' || content === '') {\n        return undefined\n      }\n\n      if (content === prevContent) {\n        return prevResult\n      }\n\n      prevContent = content\n      if (prevResult) {\n        URL.revokeObjectURL(prevResult)\n      }\n\n      prevResult = getBlobUrl(content, mimeType)\n      return prevResult\n    }\n  })()\n}\n\nexport const getJsonBlobUrl = getMemoizedBlobUrlResolver('application/json', (input) =>\n  JSON.stringify(input, null, 2),\n)\n\nexport const getCsvBlobUrl = getMemoizedBlobUrlResolver('text/csv', (input) => {\n  return json2csv(Array.isArray(input) ? input : [input]).trim()\n})\n","export function isPlainObject(obj: unknown): obj is Record<string, unknown> {\n  return (\n    !!obj && typeof obj === 'object' && Object.prototype.toString.call(obj) === '[object Object]'\n  )\n}\n","import {isPlainObject} from './isPlainObject'\n\nconst hasLocalStorage = supportsLocalStorage()\nconst keyPrefix = 'sanityVision:'\n\nexport interface LocalStorageish {\n  get: <T>(key: string, defaultVal: T) => T\n  set: <T>(key: string, value: T) => T\n  merge: <T>(props: T) => T\n}\n\nexport function clearLocalStorage() {\n  if (!hasLocalStorage) {\n    return\n  }\n\n  for (let i = 0; i < localStorage.length; i++) {\n    const key = localStorage.key(i)\n    if (key?.startsWith(keyPrefix)) {\n      localStorage.removeItem(key)\n    }\n  }\n}\n\nexport function getLocalStorage(namespace: string): LocalStorageish {\n  const storageKey = `${keyPrefix}${namespace}`\n  let loadedState: Record<string, unknown> | null = null\n\n  return {get, set, merge}\n\n  function get<T>(key: string, defaultVal: T): T {\n    const state = ensureState()\n    return typeof state[key] === 'undefined' ? defaultVal : (state[key] as T)\n  }\n\n  function set<T>(key: string, value: T): T {\n    const state = ensureState()\n    state[key] = value\n    localStorage.setItem(storageKey, JSON.stringify(loadedState))\n    return value\n  }\n\n  function merge<T>(props: T): T {\n    const state = {...ensureState(), ...props}\n    localStorage.setItem(storageKey, JSON.stringify(state))\n    return state\n  }\n\n  function ensureState(): Record<string, unknown> {\n    if (loadedState === null) {\n      loadedState = loadState()\n    }\n\n    return loadedState\n  }\n\n  function loadState() {\n    if (!hasLocalStorage) {\n      return {}\n    }\n\n    try {\n      const stored = JSON.parse(localStorage.getItem(storageKey) || '{}')\n      return isPlainObject(stored) ? stored : {}\n    } catch (err) {\n      return {}\n    }\n  }\n}\n\nfunction supportsLocalStorage() {\n  const mod = 'lsCheck'\n  try {\n    localStorage.setItem(mod, mod)\n    localStorage.removeItem(mod)\n    return true\n  } catch (err) {\n    return false\n  }\n}\n","export interface ParsedApiQueryString {\n  query: string\n  params: Record<string, unknown>\n  options: Record<string, string>\n}\n\nexport function parseApiQueryString(qs: URLSearchParams): ParsedApiQueryString {\n  const params: Record<string, unknown> = {}\n  const options: Record<string, string> = {}\n\n  for (const [key, value] of qs.entries()) {\n    if (key[0] === '$') {\n      params[key.slice(1)] = JSON.parse(value)\n      continue\n    }\n\n    if (key === 'perspective') {\n      options[key] = value\n      continue\n    }\n  }\n\n  return {query: qs.get('query') || '', params, options}\n}\n","export function prefixApiVersion(version: string): string {\n  if (version[0] !== 'v' && version !== 'other') {\n    return `v${version}`\n  }\n\n  return version\n}\n","import {ResizeObserver as ResizeObserverPolyfill} from '@juggle/resize-observer'\n\nexport const RO = typeof document === 'undefined' ? ResizeObserverPolyfill : window.ResizeObserver\n\nexport {RO as ResizeObserver}\n","import JSON5 from 'json5'\nimport {type TFunction} from 'sanity'\n\nexport function tryParseParams(\n  val: string,\n  t: TFunction<'vision', undefined>,\n): Record<string, unknown> | Error {\n  try {\n    const parsed = val ? JSON5.parse(val) : {}\n    return typeof parsed === 'object' && parsed && !Array.isArray(parsed) ? parsed : {}\n  } catch (err) {\n    // JSON5 always prefixes the error message with JSON5:, so we remove it\n    // to clean up the error tooltip\n    err.message = `${t('params.error.params-invalid-json')}:\\n\\n${err.message.replace(\n      'JSON5:',\n      '',\n    )}`\n    return err\n  }\n}\n","export function validateApiVersion(apiVersion: string): boolean {\n  const parseableApiVersion = apiVersion.replace(/^v/, '').trim().toUpperCase()\n\n  const isValidApiVersion =\n    parseableApiVersion.length > 0 &&\n    (parseableApiVersion === 'X' ||\n      parseableApiVersion === '1' ||\n      (/^\\d{4}-\\d{2}-\\d{2}$/.test(parseableApiVersion) && !isNaN(Date.parse(parseableApiVersion))))\n\n  return isValidApiVersion\n}\n","import {debounce} from 'lodash'\nimport {type ClipboardEvent, useCallback, useEffect, useMemo, useState} from 'react'\nimport {type TFunction, useTranslation} from 'sanity'\n\nimport {VisionCodeMirror} from '../codemirror/VisionCodeMirror'\nimport {visionLocaleNamespace} from '../i18n'\nimport {tryParseParams} from '../util/tryParseParams'\n\nconst defaultValue = `{\\n  \\n}`\n\nexport interface ParamsEditorChangeEvent {\n  parsed: Record<string, unknown>\n  raw: string\n  valid: boolean\n  error: string | undefined\n}\n\nexport interface ParamsEditorProps {\n  value: string\n  onChange: (changeEvt: ParamsEditorChangeEvent) => void\n  onPasteCapture: (event: ClipboardEvent<HTMLDivElement>) => void\n}\n\nexport interface ParamsEditorChange {\n  valid: boolean\n}\n\nexport function ParamsEditor(props: ParamsEditorProps) {\n  const {onChange, onPasteCapture} = props\n  const {t} = useTranslation(visionLocaleNamespace)\n  const {raw: value, error, parsed, valid} = eventFromValue(props.value, t)\n  const [isValid, setValid] = useState(valid)\n  const [init, setInit] = useState(false)\n\n  // Emit onChange on very first render\n  useEffect(() => {\n    if (!init) {\n      onChange({parsed, raw: value, valid: isValid, error})\n      setInit(true)\n    }\n  }, [error, init, isValid, onChange, parsed, value])\n\n  const handleChangeRaw = useCallback(\n    (newValue: string) => {\n      const event = eventFromValue(newValue, t)\n      setValid(event.valid)\n      onChange(event)\n    },\n    [onChange, t],\n  )\n\n  const handleChange = useMemo(() => debounce(handleChangeRaw, 333), [handleChangeRaw])\n  return (\n    <VisionCodeMirror\n      value={props.value || defaultValue}\n      onChange={handleChange}\n      onPasteCapture={onPasteCapture}\n    />\n  )\n}\n\nfunction eventFromValue(\n  value: string,\n  t: TFunction<typeof visionLocaleNamespace, undefined>,\n): ParamsEditorChangeEvent {\n  const parsedParams = tryParseParams(value, t)\n  const params = parsedParams instanceof Error ? {} : parsedParams\n  const validationError = parsedParams instanceof Error ? parsedParams.message : undefined\n  const isValid = !validationError\n\n  return {\n    parsed: params,\n    raw: value,\n    valid: isValid,\n    error: validationError,\n  }\n}\n","import {Box} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const PerspectivePopoverContent = styled(Box)`\n  /* This limits the width of the popover content */\n  max-width: 240px;\n`\n\nexport const PerspectivePopoverLink = styled.a`\n  cursor: pointer;\n  margin-right: auto;\n`\n","import {HelpCircleIcon} from '@sanity/icons'\nimport {\n  Badge,\n  Box,\n  Button,\n  Card,\n  type CardTone,\n  Inline,\n  Popover,\n  Stack,\n  Text,\n  useClickOutsideEvent,\n} from '@sanity/ui'\nimport {useCallback, useRef, useState} from 'react'\nimport {Translate, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {visionLocaleNamespace} from '../i18n'\nimport {PerspectivePopoverContent, PerspectivePopoverLink} from './PerspectivePopover.styled'\n\nconst Dot = styled.div<{tone: CardTone}>`\n  width: 4px;\n  height: 4px;\n  border-radius: 3px;\n  box-shadow: 0 0 0 1px var(--card-bg-color);\n  background-color: ${({tone}) => `var(--card-badge-${tone}-dot-color)`};\n`\n\nconst SHOW_DEFAULT_PERSPECTIVE_NOTIFICATION = false\n\nexport function PerspectivePopover() {\n  const [open, setOpen] = useState(false)\n  const buttonRef = useRef<HTMLButtonElement | null>(null)\n  const popoverRef = useRef<HTMLDivElement | null>(null)\n\n  const handleClick = useCallback(() => setOpen((o) => !o), [])\n\n  const {t} = useTranslation(visionLocaleNamespace)\n\n  useClickOutsideEvent(\n    () => setOpen(false),\n    () => [buttonRef.current, popoverRef.current],\n  )\n\n  return (\n    <Popover\n      content={\n        <PerspectivePopoverContent>\n          <Stack space={4}>\n            <Inline space={2}>\n              <Text weight=\"medium\">{t('settings.perspectives.title')}</Text>\n            </Inline>\n\n            <Card>\n              <Text muted>{t('settings.perspectives.description')}</Text>\n            </Card>\n            <Card>\n              <Stack space={2}>\n                <Box>\n                  <Badge tone=\"primary\">{t('label.new')}</Badge>\n                </Box>\n                <Text muted>\n                  <Translate\n                    t={t}\n                    i18nKey=\"settings.perspective.preview-drafts-renamed-to-drafts.description\"\n                  />\n                </Text>\n              </Stack>\n            </Card>\n            {SHOW_DEFAULT_PERSPECTIVE_NOTIFICATION ? (\n              <Card>\n                <Badge tone=\"caution\">{t('label.new')}</Badge>\n                <Card>\n                  <Text muted>\n                    <Translate t={t} i18nKey=\"settings.perspectives.new-default.description\" />\n                  </Text>\n                </Card>\n              </Card>\n            ) : null}\n\n            <Card>\n              <Text>\n                <PerspectivePopoverLink href=\"https://sanity.io/docs/perspectives\" target=\"_blank\">\n                  {t('settings.perspectives.action.docs-link')} &rarr;\n                </PerspectivePopoverLink>\n              </Text>\n            </Card>\n          </Stack>\n        </PerspectivePopoverContent>\n      }\n      placement=\"bottom-start\"\n      portal\n      padding={3}\n      ref={popoverRef}\n      open={open}\n    >\n      <Button\n        icon={HelpCircleIcon}\n        mode=\"bleed\"\n        padding={2}\n        paddingRight={1}\n        tone=\"primary\"\n        fontSize={1}\n        ref={buttonRef}\n        onClick={handleClick}\n        selected={open}\n      >\n        <Dot tone={SHOW_DEFAULT_PERSPECTIVE_NOTIFICATION ? 'caution' : 'primary'} />\n      </Button>\n    </Popover>\n  )\n}\n","import {Code} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const ErrorCode = styled(Code)`\n  color: ${({theme}) => theme.sanity.color.muted.critical.enabled.fg};\n`\n","import {Box} from '@sanity/ui'\nimport {useTranslation} from 'sanity'\n\nimport {visionLocaleNamespace} from '../i18n'\nimport {ErrorCode} from './QueryErrorDialog.styled'\n\ninterface ContentLakeQueryError {\n  details: {\n    query: string\n    start: number\n    end: number\n\n    lineNumber?: number\n    column?: number\n  }\n}\n\nexport function QueryErrorDetails({error}: {error: ContentLakeQueryError | Error}) {\n  const {t} = useTranslation(visionLocaleNamespace)\n\n  if (!('details' in error)) {\n    return null\n  }\n\n  const details = {...error.details, ...mapToLegacyDetails(error.details)}\n  if (!details.line) {\n    return null\n  }\n\n  return (\n    <div>\n      <ErrorCode size={1}>{`${details.line}\\n${dashLine(\n        details.column,\n        details.columnEnd,\n      )}`}</ErrorCode>\n      <Box marginTop={4}>\n        <ErrorCode size={1}>{`${t('query.error.line')}:   ${details.lineNumber}\\n${t(\n          'query.error.column',\n        )}: ${details.column}`}</ErrorCode>\n      </Box>\n    </div>\n  )\n}\n\nfunction mapToLegacyDetails(details: ContentLakeQueryError['details']) {\n  if (!details || typeof details.query !== 'string' || typeof details.start !== 'number') {\n    return {}\n  }\n\n  const {query, start, end} = details\n  const lineStart = query.slice(0, start).lastIndexOf('\\n') + 1\n  const lineNumber = (query.slice(0, lineStart).match(/\\n/g) || []).length\n  const line = query.slice(lineStart, query.indexOf('\\n', lineStart))\n  const column = start - lineStart\n  const columnEnd = typeof end === 'number' ? end - lineStart : undefined\n\n  return {line, lineNumber, column, columnEnd}\n}\n\nfunction dashLine(column: number, columnEnd: number | undefined): string {\n  const line = '-'.repeat(column)\n  const hats = `^`.repeat(columnEnd ? columnEnd - column : 1)\n  return `${line}${hats}`\n}\n","import {Stack} from '@sanity/ui'\n\nimport {QueryErrorDetails} from './QueryErrorDetails'\nimport {ErrorCode} from './QueryErrorDialog.styled'\n\nexport function QueryErrorDialog(props: {error: Error}) {\n  return (\n    <Stack space={5} marginTop={2}>\n      <ErrorCode size={1}>{props.error.message}</ErrorCode>\n      <QueryErrorDetails error={props.error} />\n    </Stack>\n  )\n}\n","import {rem, type Theme} from '@sanity/ui'\nimport {css, styled} from 'styled-components'\n\nexport const ResultViewWrapper = styled.div<{theme: Theme}>(({theme}) => {\n  const {color, fonts, space} = theme.sanity\n\n  return css`\n    & .json-inspector,\n    & .json-inspector .json-inspector__selection {\n      font-family: ${fonts.code.family};\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n      color: var(--card-code-fg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf {\n      padding-left: ${rem(space[4])};\n    }\n\n    & .json-inspector .json-inspector__leaf.json-inspector__leaf_root {\n      padding-top: ${rem(space[0])};\n      padding-left: 0;\n    }\n\n    & .json-inspector > .json-inspector__leaf_root > .json-inspector__line > .json-inspector__key {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__line {\n      display: block;\n      position: relative;\n      cursor: default;\n    }\n\n    & .json-inspector .json-inspector__line::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: -200px;\n      right: -50px;\n      bottom: 0;\n      z-index: -1;\n      pointer-events: none;\n    }\n\n    & .json-inspector .json-inspector__line:hover::after {\n      background: var(--card-code-bg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line {\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line::before {\n      content: '▸ ';\n      margin-left: calc(0px - ${rem(space[4])});\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n    }\n\n    &\n      .json-inspector\n      .json-inspector__leaf_expanded.json-inspector__leaf_composite\n      > .json-inspector__line::before {\n      content: '▾ ';\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n    }\n\n    & .json-inspector .json-inspector__radio,\n    & .json-inspector .json-inspector__flatpath {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__value {\n      margin-left: ${rem(space[4] / 2)};\n    }\n\n    &\n      .json-inspector\n      > .json-inspector__leaf_root\n      > .json-inspector__line\n      > .json-inspector__key\n      + .json-inspector__value {\n      margin: 0;\n    }\n\n    & .json-inspector .json-inspector__key {\n      color: ${color.syntax.property};\n    }\n\n    & .json-inspector .json-inspector__value_helper,\n    & .json-inspector .json-inspector__value_null {\n      color: ${color.syntax.constant};\n    }\n\n    & .json-inspector .json-inspector__not-found {\n      padding-top: ${rem(space[2])};\n    }\n\n    & .json-inspector .json-inspector__value_string {\n      color: ${color.syntax.string};\n      word-break: break-word;\n    }\n\n    & .json-inspector .json-inspector__value_boolean {\n      color: ${color.syntax.boolean};\n    }\n\n    & .json-inspector .json-inspector__value_number {\n      color: ${color.syntax.number};\n    }\n\n    & .json-inspector .json-inspector__show-original {\n      display: inline-block;\n      padding: 0 6px;\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__show-original:hover {\n      color: inherit;\n    }\n\n    & .json-inspector .json-inspector__show-original::before {\n      content: '↔';\n    }\n\n    & .json-inspector .json-inspector__show-original:hover::after {\n      content: ' expand';\n    }\n  `\n})\n","import {JsonInspector} from '@rexxars/react-json-inspector'\nimport {LinkIcon} from '@sanity/icons'\nimport {Code} from '@sanity/ui'\nimport LRU from 'quick-lru'\nimport {useDataset} from 'sanity'\nimport {IntentLink} from 'sanity/router'\n\nimport {ResultViewWrapper} from './ResultView.styled'\n\nconst lru = new LRU({maxSize: 50000})\n\nexport function ResultView(props: {data: unknown; datasetName: string}): React.JSX.Element {\n  const {data, datasetName} = props\n  const workspaceDataset = useDataset()\n\n  if (isRecord(data) || Array.isArray(data)) {\n    return (\n      <ResultViewWrapper>\n        <JsonInspector\n          data={data}\n          search={false}\n          isExpanded={isExpanded}\n          onClick={toggleExpanded}\n          interactiveLabel={workspaceDataset === datasetName ? DocumentEditLabel : undefined}\n        />\n      </ResultViewWrapper>\n    )\n  }\n\n  return <Code language=\"json\">{JSON.stringify(data)}</Code>\n}\n\nfunction DocumentEditLabel(props: {value: string; isKey: boolean; keypath: string}) {\n  if (props.isKey || (!props.keypath.endsWith('_id') && !props.keypath.endsWith('_ref'))) {\n    return null\n  }\n\n  return (\n    <IntentLink intent=\"edit\" params={{id: props.value}}>\n      <LinkIcon />\n    </IntentLink>\n  )\n}\n\nfunction isExpanded(keyPath: string, value: unknown): boolean {\n  const depthLimit = 4\n  const cached = lru.get(keyPath) as boolean | undefined\n\n  if (typeof cached === 'boolean') {\n    return cached\n  }\n\n  const segments = keyPath.split('.', depthLimit)\n  if (segments.length === depthLimit) {\n    return false\n  }\n\n  if (Array.isArray(value)) {\n    return true\n  }\n\n  return isRecord(value) && !segments.some((key) => isArrayKeyOverLimit(key))\n}\n\nfunction toggleExpanded(event: {path: string}): void {\n  const {path} = event\n  const current = lru.get(path)\n\n  if (current === undefined) {\n    // something is wrong\n    return\n  }\n\n  lru.set(path, !current)\n}\n\nfunction isRecord(value: unknown): value is Record<string, unknown> {\n  return value !== null && typeof value === 'object' && !Array.isArray(value)\n}\n\nconst numeric = /^\\d+$/\nfunction isArrayKeyOverLimit(segment: string, limit = 10) {\n  return numeric.test(segment) && parseInt(segment, 10) > limit\n}\n","import {DocumentSheetIcon} from '@sanity/icons'\nimport {Button, Tooltip} from '@sanity/ui'\nimport {type MouseEvent} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {visionLocaleNamespace} from '../i18n'\n\ninterface SaveButtonProps {\n  blobUrl: string | undefined\n}\n\nfunction preventSave(evt: MouseEvent<HTMLButtonElement>) {\n  return evt.preventDefault()\n}\n\nexport function SaveCsvButton({blobUrl}: SaveButtonProps) {\n  const {t} = useTranslation(visionLocaleNamespace)\n  const isDisabled = !blobUrl\n\n  const button = (\n    <Button\n      as=\"a\"\n      disabled={isDisabled}\n      download={isDisabled ? undefined : 'query-result.csv'}\n      href={blobUrl}\n      icon={DocumentSheetIcon}\n      mode=\"ghost\"\n      onClick={isDisabled ? preventSave : undefined}\n      // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n      text=\"CSV\" // String is a File extension\n      tone=\"default\"\n    />\n  )\n\n  return isDisabled ? (\n    <Tooltip content={t('result.save-result-as-csv.not-csv-encodable')} placement=\"top\">\n      {button}\n    </Tooltip>\n  ) : (\n    button\n  )\n}\n\nexport function SaveJsonButton({blobUrl}: SaveButtonProps) {\n  return (\n    <Button\n      as=\"a\"\n      download={'query-result.json'}\n      href={blobUrl}\n      icon={DocumentSheetIcon}\n      mode=\"ghost\"\n      // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n      text=\"JSON\" // String is a File extension\n      tone=\"default\"\n    />\n  )\n}\n","import {Box, Card, Flex, Label, rem, Text} from '@sanity/ui'\nimport {css, styled} from 'styled-components'\n\nexport const Root = styled(Flex)`\n  .sidebarPanes .Pane {\n    overflow-y: auto;\n    overflow-x: hidden;\n  }\n\n  & .Resizer {\n    background: var(--card-border-color);\n    opacity: 1;\n    z-index: 1;\n    box-sizing: border-box;\n    background-clip: padding-box;\n    border: solid transparent;\n  }\n\n  & .Resizer:hover {\n    border-color: var(--card-shadow-ambient-color);\n  }\n\n  & .Resizer.horizontal {\n    height: 11px;\n    margin: -5px 0;\n    border-width: 5px 0;\n    cursor: row-resize;\n    width: 100%;\n    z-index: 4;\n  }\n\n  & .Resizer.vertical {\n    width: 11px;\n    margin: 0 -5px;\n    border-width: 0 5px;\n    cursor: col-resize;\n    z-index: 2; /* To prevent the resizer from being hidden behind CodeMirror scroll area */\n  }\n\n  .Resizer.disabled {\n    cursor: not-allowed;\n  }\n\n  .Resizer.disabled:hover {\n    border-color: transparent;\n  }\n`\n\nRoot.displayName = 'Root'\n\nexport const Header = styled(Card)`\n  border-bottom: 1px solid var(--card-border-color);\n`\n\nexport const StyledLabel = styled(Label)`\n  flex: 1;\n`\n\nexport const SplitpaneContainer = styled(Box)`\n  position: relative;\n`\n\nexport const QueryCopyLink = styled.a`\n  cursor: pointer;\n  margin-right: auto;\n`\n\nexport const InputBackgroundContainer = styled(Box)`\n  position: absolute;\n  top: 1rem;\n  left: 0;\n  padding: 0;\n  margin: 0;\n  z-index: 10;\n  right: 0;\n\n  ${StyledLabel} {\n    user-select: none;\n  }\n`\n\nexport const InputBackgroundContainerLeft = styled(InputBackgroundContainer)`\n  // This is so its aligned with the gutters of CodeMirror\n  left: 33px;\n`\n\nexport const InputContainer = styled(Card)`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  flex-direction: column;\n`\n\nexport const ResultOuterContainer = styled(Flex)`\n  height: 100%;\n`\n\nexport const ResultInnerContainer = styled(Box)`\n  position: relative;\n`\n\nexport const ResultContainer = styled(Card)<{$isInvalid: boolean}>`\n  height: 100%;\n  width: 100%;\n  position: absolute;\n  max-width: 100%;\n\n  ${({$isInvalid}) =>\n    $isInvalid &&\n    css`\n      &:after {\n        background-color: var(--card-bg-color);\n        content: '';\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        width: 100%;\n      }\n    `}\n`\n\nexport const Result = styled(Box)`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  z-index: 20;\n`\n\nexport const ResultFooter = styled(Flex)`\n  border-top: 1px solid var(--card-border-color);\n`\n\nexport const TimingsCard = styled(Card)`\n  position: relative;\n`\n\nexport const TimingsContainer = styled(Box)`\n  width: 100%;\n  height: 100%;\n`\n\nexport const TimingsTextContainer = styled(Flex)`\n  height: 100%;\n  min-height: ${({theme}) =>\n    rem(\n      theme.sanity.space[3] * 2 +\n        theme.sanity.fonts.text.sizes[2].lineHeight -\n        theme.sanity.fonts.text.sizes[2].ascenderHeight -\n        theme.sanity.fonts.text.sizes[2].descenderHeight,\n    )};\n`\n\nexport const DownloadsCard = styled(Card)`\n  position: relative;\n`\n\nexport const SaveResultLabel = styled(Text)`\n  transform: initial;\n  &:before,\n  &:after {\n    content: none;\n  }\n  > span {\n    display: flex !important;\n    gap: ${({theme}) => rem(theme.sanity.space[3])};\n    align-items: center;\n  }\n`\n\nexport const ControlsContainer = styled(Box)`\n  border-top: 1px solid var(--card-border-color);\n`\n","/* eslint-disable complexity */\nimport {SplitPane} from '@rexxars/react-split-pane'\nimport {\n  type ClientPerspective,\n  type ListenEvent,\n  type MutationEvent,\n  type SanityClient,\n} from '@sanity/client'\nimport {CopyIcon, ErrorOutlineIcon, PlayIcon, StopIcon} from '@sanity/icons'\nimport {\n  Box,\n  Button,\n  Card,\n  Flex,\n  Grid,\n  Hotkeys,\n  Inline,\n  Select,\n  Stack,\n  Text,\n  TextInput,\n  type ToastContextValue,\n  Tooltip,\n} from '@sanity/ui'\nimport {isHotkey} from 'is-hotkey-esm'\nimport {debounce} from 'lodash'\nimport {\n  type ChangeEvent,\n  type ComponentType,\n  createRef,\n  Fragment,\n  PureComponent,\n  type RefObject,\n  useMemo,\n} from 'react'\nimport isEqual from 'react-fast-compare'\nimport {type PerspectiveContextValue, type TFunction, Translate} from 'sanity'\n\nimport {API_VERSIONS, DEFAULT_API_VERSION} from '../apiVersions'\nimport {VisionCodeMirror} from '../codemirror/VisionCodeMirror'\nimport {\n  isSupportedPerspective,\n  isVirtualPerspective,\n  SUPPORTED_PERSPECTIVES,\n  type SupportedPerspective,\n} from '../perspectives'\nimport {type VisionProps} from '../types'\nimport {encodeQueryString} from '../util/encodeQueryString'\nimport {getCsvBlobUrl, getJsonBlobUrl} from '../util/getBlobUrl'\nimport {getLocalStorage, type LocalStorageish} from '../util/localStorage'\nimport {parseApiQueryString, type ParsedApiQueryString} from '../util/parseApiQueryString'\nimport {prefixApiVersion} from '../util/prefixApiVersion'\nimport {ResizeObserver} from '../util/resizeObserver'\nimport {tryParseParams} from '../util/tryParseParams'\nimport {validateApiVersion} from '../util/validateApiVersion'\nimport {DelayedSpinner} from './DelayedSpinner'\nimport {ParamsEditor, type ParamsEditorChangeEvent} from './ParamsEditor'\nimport {PerspectivePopover} from './PerspectivePopover'\nimport {QueryErrorDialog} from './QueryErrorDialog'\nimport {ResultView} from './ResultView'\nimport {SaveCsvButton, SaveJsonButton} from './SaveResultButtons'\nimport {\n  ControlsContainer,\n  DownloadsCard,\n  Header,\n  InputBackgroundContainer,\n  InputBackgroundContainerLeft,\n  InputContainer,\n  QueryCopyLink,\n  Result,\n  ResultContainer,\n  ResultFooter,\n  ResultInnerContainer,\n  ResultOuterContainer,\n  Root,\n  SaveResultLabel,\n  SplitpaneContainer,\n  StyledLabel,\n  TimingsCard,\n  TimingsTextContainer,\n} from './VisionGui.styled'\n\nfunction nodeContains(node: Node, other: EventTarget | Node | null): boolean {\n  if (!node || !other) {\n    return false\n  }\n\n  // eslint-disable-next-line no-bitwise\n  return node === other || !!(node.compareDocumentPosition(other as Node) & 16)\n}\n\nconst sanityUrl =\n  /\\.(?:api|apicdn)\\.sanity\\.io\\/(vX|v1|v\\d{4}-\\d\\d-\\d\\d)\\/.*?(?:query|listen)\\/(.*?)\\?(.*)/\nconst isRunHotkey = (event: KeyboardEvent) =>\n  isHotkey('ctrl+enter', event) || isHotkey('mod+enter', event)\n\ninterface PaneSizeOptions {\n  defaultSize: number\n  size?: number\n  allowResize: boolean\n  minSize: number\n  maxSize: number\n}\n\nfunction narrowBreakpoint(): boolean {\n  return typeof window !== 'undefined' && window.innerWidth > 600\n}\n\nfunction calculatePaneSizeOptions(rootHeight: number): PaneSizeOptions {\n  return {\n    defaultSize: rootHeight / (narrowBreakpoint() ? 2 : 1),\n    size: rootHeight > 550 ? undefined : rootHeight * 0.4,\n    allowResize: rootHeight > 550,\n    minSize: Math.min(170, Math.max(170, rootHeight / 2)),\n    maxSize: rootHeight > 650 ? rootHeight * 0.7 : rootHeight * 0.6,\n  }\n}\n\ninterface Subscription {\n  unsubscribe: () => void\n}\n\ninterface VisionGuiProps extends VisionProps {\n  toast: ToastContextValue\n  datasets: string[]\n  t: TFunction<'vision', undefined>\n}\n\ninterface VisionGuiState {\n  // Selected options\n  dataset: string\n  apiVersion: string\n  customApiVersion: string | false\n  perspective: SupportedPerspective | undefined\n\n  // Selected options validation state\n  isValidApiVersion: boolean\n\n  // URL used to execute query/listener\n  url?: string | undefined\n\n  // Inputs\n  query: string\n  rawParams: string\n\n  // Parsed input\n  params: Record<string, unknown> | Error | undefined\n  paramsError?: string | undefined\n  hasValidParams: boolean\n\n  // Query/listen result\n  queryResult?: unknown | undefined\n  listenMutations: MutationEvent[]\n  error?: Error | undefined\n\n  // Operation timings\n  queryTime?: number | undefined\n  e2eTime?: number | undefined\n\n  // Operation state, used to trigger re-renders (spinners etc)\n  queryInProgress: boolean\n  listenInProgress: boolean\n\n  // UI drawing state\n  paneSizeOptions: PaneSizeOptions\n}\n\nexport class VisionGui extends PureComponent<VisionGuiProps, VisionGuiState> {\n  _visionRoot: RefObject<HTMLDivElement | null>\n  _queryEditorContainer: RefObject<HTMLDivElement | null>\n  _paramsEditorContainer: RefObject<HTMLDivElement | null>\n  _operationUrlElement: RefObject<HTMLInputElement | null>\n  _customApiVersionElement: RefObject<HTMLInputElement | null>\n  _resizeListener: ResizeObserver | undefined\n  _querySubscription: Subscription | undefined\n  _listenSubscription: Subscription | undefined\n  _client: SanityClient\n  _localStorage: LocalStorageish\n\n  constructor(props: VisionGuiProps) {\n    super(props)\n\n    const {client, datasets, config} = props\n    this._localStorage = getLocalStorage(client.config().projectId || 'default')\n\n    const defaultDataset = config.defaultDataset || client.config().dataset || datasets[0]\n    const defaultApiVersion = prefixApiVersion(`${config.defaultApiVersion}`)\n\n    let dataset = this._localStorage.get('dataset', defaultDataset)\n    let apiVersion = this._localStorage.get('apiVersion', defaultApiVersion)\n    let lastQuery = this._localStorage.get('query', '')\n    let lastParams = this._localStorage.get('params', '{\\n  \\n}')\n    const customApiVersion = API_VERSIONS.includes(apiVersion) ? false : apiVersion\n    const perspective = this._localStorage.get<SupportedPerspective | undefined>(\n      'perspective',\n      undefined,\n    )\n\n    if (!datasets.includes(dataset)) {\n      dataset = datasets.includes(defaultDataset) ? defaultDataset : datasets[0]\n    }\n\n    if (!API_VERSIONS.includes(apiVersion)) {\n      apiVersion = DEFAULT_API_VERSION\n    }\n\n    if (typeof lastQuery !== 'string') {\n      lastQuery = ''\n    }\n\n    if (typeof lastParams !== 'string') {\n      lastParams = '{\\n  \\n}'\n    }\n\n    this._visionRoot = createRef()\n    this._operationUrlElement = createRef()\n    this._queryEditorContainer = createRef()\n    this._paramsEditorContainer = createRef()\n    this._customApiVersionElement = createRef()\n\n    this._client = props.client.withConfig({\n      apiVersion: customApiVersion || apiVersion,\n      dataset,\n      perspective: getActivePerspective({\n        visionPerspective: perspective,\n        pinnedPerspective: this.props.pinnedPerspective,\n      }),\n      allowReconfigure: true,\n    })\n\n    // Initial root height without header\n    const bodyHeight =\n      typeof window !== 'undefined' && typeof document !== 'undefined'\n        ? document.body.getBoundingClientRect().height - 60\n        : 0\n\n    const params = lastParams ? tryParseParams(lastParams, this.props.t) : undefined\n\n    this.state = {\n      // Selected options\n      dataset,\n      apiVersion,\n      customApiVersion,\n      perspective,\n\n      // Selected options validation state\n      isValidApiVersion: customApiVersion ? validateApiVersion(customApiVersion) : false,\n\n      // Inputs\n      query: lastQuery,\n      rawParams: lastParams,\n\n      // Parsed input\n      params,\n      hasValidParams: !(params instanceof Error),\n\n      // Query/listen results\n      listenMutations: [],\n\n      // Operation state\n      queryInProgress: false,\n      listenInProgress: false,\n\n      // UI drawing state\n      paneSizeOptions: calculatePaneSizeOptions(bodyHeight),\n    }\n\n    this.handleChangeDataset = this.handleChangeDataset.bind(this)\n    this.handleChangeApiVersion = this.handleChangeApiVersion.bind(this)\n    this.handleCustomApiVersionChange = this.handleCustomApiVersionChange.bind(this)\n    this.handleChangePerspective = this.handleChangePerspective.bind(this)\n    this.handleListenExecution = this.handleListenExecution.bind(this)\n    this.handleListenerEvent = this.handleListenerEvent.bind(this)\n    this.handleQueryExecution = this.handleQueryExecution.bind(this)\n    this.handleQueryChange = debounce(this.handleQueryChange, 300).bind(this)\n    this.handleParamsChange = this.handleParamsChange.bind(this)\n    this.handleCopyUrl = this.handleCopyUrl.bind(this)\n    this.handlePaste = this.handlePaste.bind(this)\n    this.handleKeyDown = this.handleKeyDown.bind(this)\n    this.handleResize = this.handleResize.bind(this)\n    this.handleOnPasteCapture = this.handleOnPasteCapture.bind(this)\n    this.setPerspective = this.setPerspective.bind(this)\n  }\n\n  componentDidMount() {\n    window.document.addEventListener('paste', this.handlePaste)\n    window.document.addEventListener('keydown', this.handleKeyDown)\n\n    this.handleResizeListen()\n  }\n\n  componentWillUnmount() {\n    this.cancelQuery()\n    this.cancelListener()\n    this.cancelEventListener()\n    this.cancelResizeListener()\n  }\n\n  componentDidUpdate(prevProps: Readonly<VisionGuiProps>): void {\n    if (hasPinnedPerspectiveChanged(prevProps.pinnedPerspective, this.props.pinnedPerspective)) {\n      if (hasPinnedPerspective(this.props.pinnedPerspective)) {\n        this.setPerspective('pinnedRelease')\n      } else {\n        this.setPerspective(undefined)\n      }\n    }\n  }\n\n  handleResizeListen() {\n    if (!this._visionRoot.current) {\n      return\n    }\n\n    this._resizeListener = new ResizeObserver(this.handleResize)\n    this._resizeListener.observe(this._visionRoot.current)\n  }\n\n  handleResize(entries: ResizeObserverEntry[]) {\n    const entry = entries?.[0]\n\n    this.setState((prevState) => ({\n      ...prevState,\n      paneSizeOptions: calculatePaneSizeOptions(entry.contentRect.height),\n    }))\n  }\n\n  cancelResizeListener() {\n    if (this._resizeListener) {\n      this._resizeListener.disconnect()\n    }\n  }\n\n  handlePaste(evt: React.ClipboardEvent<HTMLDivElement> | ClipboardEvent, stopPropagation = false) {\n    if (!evt?.clipboardData) {\n      return\n    }\n\n    const data = evt.clipboardData.getData('text/plain')\n    const match = data.match(sanityUrl)\n    if (!match) {\n      return\n    }\n\n    const [, usedApiVersion, usedDataset, urlQuery] = match\n    let parts: ParsedApiQueryString\n\n    try {\n      const qs = new URLSearchParams(urlQuery)\n      parts = parseApiQueryString(qs)\n    } catch (err) {\n      console.warn('Error while trying to parse API URL: ', err.message) // eslint-disable-line no-console\n      return // Give up on error\n    }\n\n    let apiVersion: string | undefined\n    let customApiVersion: string | false | undefined\n\n    if (validateApiVersion(usedApiVersion)) {\n      if (API_VERSIONS.includes(usedApiVersion)) {\n        apiVersion = usedApiVersion\n        customApiVersion = false\n      } else {\n        customApiVersion = usedApiVersion\n      }\n    }\n\n    const perspective =\n      isSupportedPerspective(parts.options.perspective) &&\n      !isVirtualPerspective(parts.options.perspective)\n        ? parts.options.perspective\n        : undefined\n\n    if (\n      perspective &&\n      (!isSupportedPerspective(parts.options.perspective) ||\n        isVirtualPerspective(parts.options.perspective))\n    ) {\n      this.props.toast.push({\n        closable: true,\n        id: 'vision-paste-unsupported-perspective',\n        status: 'warning',\n        title: 'Perspective in pasted url is currently not supported. Falling back to \"raw\"',\n      })\n    }\n\n    evt.preventDefault()\n    if (stopPropagation) {\n      // Stops propagation for the pasteEvent that occurs in the CodeMirror element if it has a match\n      evt.stopPropagation()\n    }\n    this.setState(\n      (prevState) => ({\n        dataset: this.props.datasets.includes(usedDataset) ? usedDataset : prevState.dataset,\n        query: parts.query,\n        params: parts.params,\n        rawParams: JSON.stringify(parts.params, null, 2),\n        apiVersion: typeof apiVersion === 'undefined' ? prevState.apiVersion : apiVersion,\n        customApiVersion:\n          typeof customApiVersion === 'undefined' ? prevState.customApiVersion : customApiVersion,\n        perspective: typeof perspective === 'undefined' ? prevState.perspective : perspective,\n      }),\n      () => {\n        this._localStorage.merge({\n          query: this.state.query,\n          params: this.state.rawParams,\n          dataset: this.state.dataset,\n          apiVersion: customApiVersion || apiVersion,\n          perspective: this.state.perspective,\n        })\n        this._client.config({\n          dataset: this.state.dataset,\n          apiVersion: customApiVersion || apiVersion,\n          perspective: getActivePerspective({\n            visionPerspective: this.state.perspective,\n            pinnedPerspective: this.props.pinnedPerspective,\n          }),\n        })\n        this.handleQueryExecution()\n        this.props.toast.push({\n          closable: true,\n          id: 'vision-paste',\n          status: 'info',\n          title: 'Parsed URL to query',\n        })\n      },\n    )\n  }\n\n  handleOnPasteCapture(ev: React.ClipboardEvent<HTMLDivElement>) {\n    this.handlePaste(ev, true)\n  }\n\n  cancelQuery() {\n    if (!this._querySubscription) {\n      return\n    }\n    this._querySubscription.unsubscribe()\n    this._querySubscription = undefined\n  }\n\n  cancelListener() {\n    if (!this._listenSubscription) {\n      return\n    }\n\n    this._listenSubscription.unsubscribe()\n    this._listenSubscription = undefined\n  }\n\n  cancelEventListener() {\n    window.removeEventListener('keydown', this.handleKeyDown)\n  }\n\n  handleChangeDataset(evt: ChangeEvent<HTMLSelectElement>) {\n    const dataset = evt.target.value\n    this._localStorage.set('dataset', dataset)\n    this.setState({dataset})\n    this._client.config({dataset})\n    this.handleQueryExecution()\n  }\n\n  handleChangeApiVersion(evt: ChangeEvent<HTMLSelectElement>) {\n    const apiVersion = evt.target.value\n    if (apiVersion?.toLowerCase() === 'other') {\n      this.setState({customApiVersion: 'v'}, () => {\n        this._customApiVersionElement.current?.focus()\n      })\n      return\n    }\n\n    this.setState({apiVersion, customApiVersion: false}, () => {\n      this._localStorage.set('apiVersion', this.state.apiVersion)\n      this._client.config({\n        apiVersion: this.state.apiVersion,\n      })\n      this.handleQueryExecution()\n    })\n  }\n\n  handleCustomApiVersionChange(evt: ChangeEvent<HTMLInputElement>) {\n    const customApiVersion = evt.target.value || ''\n    const isValidApiVersion = validateApiVersion(customApiVersion)\n\n    this.setState(\n      (prevState) => ({\n        apiVersion: isValidApiVersion ? customApiVersion : prevState.apiVersion,\n        customApiVersion: customApiVersion || 'v',\n        isValidApiVersion,\n      }),\n      () => {\n        if (!this.state.isValidApiVersion || typeof this.state.customApiVersion !== 'string') {\n          return\n        }\n\n        this._localStorage.set('apiVersion', this.state.customApiVersion)\n        this._client.config({apiVersion: this.state.customApiVersion})\n      },\n    )\n  }\n\n  handleChangePerspective(evt: ChangeEvent<HTMLSelectElement>) {\n    const perspective = evt.target.value\n    this.setPerspective(perspective === 'default' ? undefined : perspective)\n  }\n\n  setPerspective(perspective: string | undefined): void {\n    if (perspective !== undefined && !isSupportedPerspective(perspective)) {\n      return\n    }\n\n    this.setState({perspective}, () => {\n      this._localStorage.set('perspective', this.state.perspective)\n      this._client.config({\n        perspective: getActivePerspective({\n          visionPerspective: this.state.perspective,\n          pinnedPerspective: this.props.pinnedPerspective,\n        }),\n      })\n      this.handleQueryExecution()\n    })\n  }\n\n  handleListenerEvent(evt: ListenEvent<any>) {\n    if (evt.type !== 'mutation') {\n      this.props.toast.push({\n        closable: true,\n        id: 'vision-listen',\n        status: 'success',\n        title: 'Listening for mutations…',\n      })\n      return\n    }\n\n    this.setState(({listenMutations}) => ({\n      listenMutations:\n        listenMutations.length === 50\n          ? [evt, ...listenMutations.slice(0, 49)]\n          : [evt, ...listenMutations],\n    }))\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    const {hasValidParams} = this.state\n    const isWithinRoot =\n      this._visionRoot.current && nodeContains(this._visionRoot.current, event.target)\n    if (isRunHotkey(event) && isWithinRoot && hasValidParams) {\n      this.handleQueryExecution()\n      event.preventDefault()\n      event.stopPropagation()\n    }\n  }\n\n  ensureSelectedApiVersion() {\n    const {apiVersion, customApiVersion} = this.state\n    const wantedApiVersion = customApiVersion || apiVersion\n    if (this._client.config().apiVersion !== wantedApiVersion) {\n      this._client.config({apiVersion: wantedApiVersion})\n    }\n  }\n\n  handleListenExecution() {\n    const {query, params, rawParams, listenInProgress} = this.state\n    if (listenInProgress) {\n      this.cancelListener()\n      this.setState({listenInProgress: false})\n      return\n    }\n\n    this.ensureSelectedApiVersion()\n\n    const paramsError = params instanceof Error ? params : undefined\n    const encodeParams = params instanceof Error ? {} : params || {}\n    const url = this._client.getDataUrl('listen', encodeQueryString(query, encodeParams, {}))\n\n    const shouldExecute = !paramsError && query.trim().length > 0\n\n    this._localStorage.set('query', query)\n    this._localStorage.set('params', rawParams)\n\n    this.cancelQuery()\n\n    this.setState({\n      url,\n      listenMutations: [],\n      queryInProgress: false,\n      queryResult: undefined,\n      listenInProgress: shouldExecute,\n      error: paramsError,\n      queryTime: undefined,\n      e2eTime: undefined,\n    })\n\n    if (!shouldExecute) {\n      return\n    }\n\n    this._listenSubscription = this._client\n      .listen(query, params, {events: ['mutation', 'welcome']})\n      .subscribe({\n        next: this.handleListenerEvent,\n        error: (error) =>\n          this.setState({\n            error,\n            query,\n            listenInProgress: false,\n          }),\n      })\n  }\n\n  handleQueryExecution() {\n    const {query, params, rawParams, queryInProgress} = this.state\n\n    if (queryInProgress) {\n      this.cancelQuery()\n      this.cancelListener()\n      this.setState({queryInProgress: false})\n      return true\n    }\n\n    const paramsError = params instanceof Error && params\n    this._localStorage.set('query', query)\n    this._localStorage.set('params', rawParams)\n\n    this.cancelListener()\n\n    this.setState({\n      queryInProgress: !paramsError && Boolean(query),\n      listenInProgress: false,\n      listenMutations: [],\n      error: paramsError || undefined,\n      queryResult: undefined,\n      queryTime: undefined,\n      e2eTime: undefined,\n    })\n\n    if (!query || paramsError) {\n      return true\n    }\n\n    this.ensureSelectedApiVersion()\n\n    const urlQueryOpts: Record<string, string | string[]> = {}\n    if (this.state.perspective) {\n      urlQueryOpts.perspective =\n        getActivePerspective({\n          visionPerspective: this.state.perspective,\n          pinnedPerspective: this.props.pinnedPerspective,\n        }) ?? []\n    }\n\n    const url = this._client.getUrl(\n      this._client.getDataUrl('query', encodeQueryString(query, params, urlQueryOpts)),\n    )\n    this.setState({url})\n\n    const queryStart = Date.now()\n\n    this._querySubscription = this._client.observable\n      .fetch(query, params, {filterResponse: false, tag: 'vision'})\n      .subscribe({\n        next: (res) => {\n          this.setState({\n            queryTime: res.ms,\n            e2eTime: Date.now() - queryStart,\n            queryResult: res.result,\n            queryInProgress: false,\n            error: undefined,\n          })\n        },\n        error: (error) => {\n          this.setState({\n            error,\n            query,\n            queryInProgress: false,\n          })\n        },\n      })\n\n    return true\n  }\n\n  handleQueryChange(query: string) {\n    this.setState({query})\n  }\n\n  handleParamsChange({raw, parsed, valid, error}: ParamsEditorChangeEvent) {\n    this.setState(\n      {\n        rawParams: raw,\n        params: parsed,\n        hasValidParams: valid,\n        paramsError: error,\n      },\n      () => this._localStorage.set('params', raw),\n    )\n  }\n\n  handleCopyUrl() {\n    const el = this._operationUrlElement.current\n    if (!el) {\n      return\n    }\n\n    try {\n      el.select()\n      document.execCommand('copy')\n      this.props.toast.push({\n        closable: true,\n        title: 'Copied to clipboard',\n        status: 'info',\n        id: 'vision-copy',\n      })\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('Unable to copy to clipboard :(')\n    }\n  }\n\n  render() {\n    const {datasets, t, pinnedPerspective} = this.props\n    const {\n      apiVersion,\n      customApiVersion,\n      dataset,\n      e2eTime,\n      error,\n      hasValidParams,\n      isValidApiVersion,\n      listenInProgress,\n      listenMutations,\n      paneSizeOptions,\n      paramsError,\n      perspective,\n      query,\n      queryInProgress,\n      queryResult,\n      queryTime,\n      rawParams,\n      url,\n    } = this.state\n    const hasResult = !error && !queryInProgress && typeof queryResult !== 'undefined'\n    const jsonUrl = hasResult ? getJsonBlobUrl(queryResult) : ''\n    const csvUrl = hasResult ? getCsvBlobUrl(queryResult) : ''\n\n    return (\n      <Root\n        direction=\"column\"\n        height=\"fill\"\n        ref={this._visionRoot}\n        sizing=\"border\"\n        overflow=\"hidden\"\n      >\n        <Header paddingX={3} paddingY={2}>\n          <Grid columns={[1, 4, 8, 12]}>\n            {/* Dataset selector */}\n            <Box padding={1} column={2}>\n              <Stack>\n                <Card paddingTop={2} paddingBottom={3}>\n                  <StyledLabel>{t('settings.dataset-label')}</StyledLabel>\n                </Card>\n                <Select value={dataset} onChange={this.handleChangeDataset}>\n                  {datasets.map((ds) => (\n                    <option key={ds}>{ds}</option>\n                  ))}\n                </Select>\n              </Stack>\n            </Box>\n\n            {/* API version selector */}\n            <Box padding={1} column={2}>\n              <Stack>\n                <Card paddingTop={2} paddingBottom={3}>\n                  <StyledLabel>{t('settings.api-version-label')}</StyledLabel>\n                </Card>\n                <Select\n                  value={customApiVersion === false ? apiVersion : 'other'}\n                  onChange={this.handleChangeApiVersion}\n                >\n                  {API_VERSIONS.map((version) => (\n                    <option key={version}>{version}</option>\n                  ))}\n                  <option key=\"other\" value=\"other\">\n                    {t('settings.other-api-version-label')}\n                  </option>\n                </Select>\n              </Stack>\n            </Box>\n\n            {/* Custom API version input */}\n            {customApiVersion !== false && (\n              <Box padding={1} column={2}>\n                <Stack>\n                  <Card paddingTop={2} paddingBottom={3}>\n                    <StyledLabel textOverflow=\"ellipsis\">\n                      {t('settings.custom-api-version-label')}\n                    </StyledLabel>\n                  </Card>\n\n                  <TextInput\n                    ref={this._customApiVersionElement}\n                    value={customApiVersion}\n                    onChange={this.handleCustomApiVersionChange}\n                    customValidity={\n                      isValidApiVersion ? undefined : t('settings.error.invalid-api-version')\n                    }\n                    maxLength={11}\n                  />\n                </Stack>\n              </Box>\n            )}\n\n            {/* Perspective selector */}\n            <Box padding={1} column={2}>\n              <Stack>\n                <Card paddingBottom={1}>\n                  <Inline space={1}>\n                    <Box>\n                      <StyledLabel>{t('settings.perspective-label')}</StyledLabel>\n                    </Box>\n\n                    <Box>\n                      <PerspectivePopover />\n                    </Box>\n                  </Inline>\n                </Card>\n                <Select value={perspective || 'default'} onChange={this.handleChangePerspective}>\n                  {SUPPORTED_PERSPECTIVES.map((perspectiveName) => {\n                    if (perspectiveName === 'pinnedRelease') {\n                      return (\n                        <Fragment key=\"pinnedRelease\">\n                          <PinnedReleasePerspectiveOption\n                            pinnedPerspective={pinnedPerspective}\n                            t={t}\n                          />\n                          <option key=\"default\" value=\"default\">\n                            {t('settings.perspectives.default')}\n                          </option>\n                          <hr />\n                        </Fragment>\n                      )\n                    }\n                    return <option key={perspectiveName}>{perspectiveName}</option>\n                  })}\n                </Select>\n              </Stack>\n            </Box>\n\n            {/* Query URL (for copying) */}\n            {typeof url === 'string' ? (\n              <Box padding={1} flex={1} column={customApiVersion === false ? 6 : 4}>\n                <Stack>\n                  <Card paddingTop={2} paddingBottom={3}>\n                    <StyledLabel>\n                      {t('query.url')}&nbsp;\n                      <QueryCopyLink onClick={this.handleCopyUrl}>\n                        [{t('action.copy-url-to-clipboard')}]\n                      </QueryCopyLink>\n                    </StyledLabel>\n                  </Card>\n                  <Flex flex={1} gap={1}>\n                    <Box flex={1}>\n                      <TextInput readOnly type=\"url\" ref={this._operationUrlElement} value={url} />\n                    </Box>\n                    <Tooltip content={t('action.copy-url-to-clipboard')}>\n                      <Button\n                        aria-label={t('action.copy-url-to-clipboard')}\n                        type=\"button\"\n                        mode=\"ghost\"\n                        icon={CopyIcon}\n                        onClick={this.handleCopyUrl}\n                      />\n                    </Tooltip>\n                  </Flex>\n                </Stack>\n              </Box>\n            ) : (\n              <Box flex={1} />\n            )}\n          </Grid>\n        </Header>\n        <SplitpaneContainer flex=\"auto\">\n          <SplitPane\n            // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n            split={narrowBreakpoint() ? 'vertical' : 'horizontal'}\n            minSize={280}\n            defaultSize={400}\n            maxSize={-400}\n          >\n            <Box height=\"stretch\" flex={1}>\n              {/*\n                  The way react-split-pane handles the sizes is kind of finicky and not clear. What the props above does is:\n                  - It sets the initial size of the panes to 1/2 of the total available height of the container\n                  - Sets the minimum size of a pane whatever is bigger of 1/2 of the total available height of the container, or 170px\n                  - The max size is set to either 60% or 70% of the available space, depending on if the container height is above 650px\n                  - Disables resizing when total height is below 500, since it becomes really cumbersome to work with the panes then\n                  - The \"primary\" prop (https://github.com/tomkp/react-split-pane#primary) tells the second pane to shrink or grow by the available space\n                  - Disables resize if the container height is less then 500px\n                  This should ensure that we mostly avoid a pane to take up all the room, and for the controls to not be eaten up by the pane\n                */}\n              <SplitPane\n                className=\"sidebarPanes\"\n                split=\"horizontal\"\n                defaultSize={\n                  narrowBreakpoint() ? paneSizeOptions.defaultSize : paneSizeOptions.minSize\n                }\n                size={paneSizeOptions.size}\n                allowResize={paneSizeOptions.allowResize}\n                minSize={narrowBreakpoint() ? paneSizeOptions.minSize : 100}\n                maxSize={paneSizeOptions.maxSize}\n                primary=\"first\"\n              >\n                <InputContainer display=\"flex\" ref={this._queryEditorContainer}>\n                  <Box flex={1}>\n                    <InputBackgroundContainerLeft>\n                      <Flex>\n                        <StyledLabel muted>{t('query.label')}</StyledLabel>\n                      </Flex>\n                    </InputBackgroundContainerLeft>\n                    <VisionCodeMirror\n                      value={query}\n                      onChange={this.handleQueryChange}\n                      onPasteCapture={this.handleOnPasteCapture}\n                    />\n                  </Box>\n                </InputContainer>\n                <InputContainer display=\"flex\" ref={this._paramsEditorContainer}>\n                  <Card flex={1} tone={hasValidParams ? 'default' : 'critical'}>\n                    <InputBackgroundContainerLeft>\n                      <Flex>\n                        <StyledLabel muted>{t('params.label')}</StyledLabel>\n                        {paramsError && (\n                          <Tooltip placement=\"top-end\" portal content={paramsError}>\n                            <Box padding={1} marginX={2}>\n                              <Text>\n                                <ErrorOutlineIcon />\n                              </Text>\n                            </Box>\n                          </Tooltip>\n                        )}\n                      </Flex>\n                    </InputBackgroundContainerLeft>\n                    <ParamsEditor\n                      value={rawParams}\n                      onChange={this.handleParamsChange}\n                      onPasteCapture={this.handleOnPasteCapture}\n                    />\n                  </Card>\n                  {/* Controls (listen/run) */}\n                  <ControlsContainer>\n                    <Card padding={3} paddingX={3}>\n                      <Tooltip\n                        content={\n                          <Card radius={4}>\n                            <Text size={1} muted>\n                              {t('params.error.params-invalid-json')}\n                            </Text>\n                          </Card>\n                        }\n                        placement=\"top\"\n                        disabled={hasValidParams}\n                        portal\n                      >\n                        <Flex justify=\"space-evenly\">\n                          <Box flex={1}>\n                            <Tooltip\n                              content={\n                                <Card radius={4}>\n                                  <Hotkeys keys={['Ctrl', 'Enter']} />\n                                </Card>\n                              }\n                              placement=\"top\"\n                              portal\n                            >\n                              <Button\n                                width=\"fill\"\n                                onClick={this.handleQueryExecution}\n                                type=\"button\"\n                                icon={queryInProgress ? StopIcon : PlayIcon}\n                                disabled={listenInProgress || !hasValidParams}\n                                tone={queryInProgress ? 'positive' : 'primary'}\n                                text={\n                                  queryInProgress\n                                    ? t('action.query-cancel')\n                                    : t('action.query-execute')\n                                }\n                              />\n                            </Tooltip>\n                          </Box>\n                          <Box flex={1} marginLeft={3}>\n                            <Button\n                              width=\"fill\"\n                              onClick={this.handleListenExecution}\n                              type=\"button\"\n                              icon={listenInProgress ? StopIcon : PlayIcon}\n                              text={\n                                listenInProgress\n                                  ? t('action.listen-cancel')\n                                  : t('action.listen-execute')\n                              }\n                              mode=\"ghost\"\n                              disabled={!hasValidParams}\n                              tone={listenInProgress ? 'positive' : 'default'}\n                            />\n                          </Box>\n                        </Flex>\n                      </Tooltip>\n                    </Card>\n                  </ControlsContainer>\n                </InputContainer>\n              </SplitPane>\n            </Box>\n            <ResultOuterContainer direction=\"column\">\n              <ResultInnerContainer flex={1}>\n                <ResultContainer\n                  flex={1}\n                  overflow=\"hidden\"\n                  tone={error ? 'critical' : 'default'}\n                  $isInvalid={Boolean(error)}\n                >\n                  <Result overflow=\"auto\">\n                    <InputBackgroundContainer>\n                      <Box marginLeft={3}>\n                        <StyledLabel muted>{t('result.label')}</StyledLabel>\n                      </Box>\n                    </InputBackgroundContainer>\n                    <Box padding={3} paddingTop={5}>\n                      {(queryInProgress || (listenInProgress && listenMutations.length === 0)) && (\n                        <Box marginTop={3}>\n                          <DelayedSpinner />\n                        </Box>\n                      )}\n                      {error && <QueryErrorDialog error={error} />}\n                      {hasResult && <ResultView data={queryResult} datasetName={dataset} />}\n                      {listenInProgress && listenMutations.length > 0 && (\n                        <ResultView data={listenMutations} datasetName={dataset} />\n                      )}\n                    </Box>\n                  </Result>\n                </ResultContainer>\n              </ResultInnerContainer>\n              {/* Execution time */}\n              <ResultFooter justify=\"space-between\" direction={['column', 'column', 'row']}>\n                <TimingsCard paddingX={4} paddingY={3} sizing=\"border\">\n                  <TimingsTextContainer align=\"center\">\n                    <Box>\n                      <Text muted>\n                        {t('result.execution-time-label')}:{' '}\n                        {typeof queryTime === 'number'\n                          ? `${queryTime}ms`\n                          : t('result.timing-not-applicable')}\n                      </Text>\n                    </Box>\n                    <Box marginLeft={4}>\n                      <Text muted>\n                        {t('result.end-to-end-time-label')}:{' '}\n                        {typeof e2eTime === 'number'\n                          ? `${e2eTime}ms`\n                          : t('result.timing-not-applicable')}\n                      </Text>\n                    </Box>\n                  </TimingsTextContainer>\n                </TimingsCard>\n\n                {hasResult && (\n                  <DownloadsCard paddingX={4} paddingY={3} sizing=\"border\">\n                    <SaveResultLabel muted>\n                      <Translate\n                        components={{\n                          SaveResultButtons: () => (\n                            <>\n                              <SaveJsonButton blobUrl={jsonUrl} />\n                              <SaveCsvButton blobUrl={csvUrl} />\n                            </>\n                          ),\n                        }}\n                        i18nKey=\"result.save-result-as-format\"\n                        t={t}\n                      />\n                    </SaveResultLabel>\n                  </DownloadsCard>\n                )}\n              </ResultFooter>\n            </ResultOuterContainer>\n          </SplitPane>\n        </SplitpaneContainer>\n      </Root>\n    )\n  }\n}\n\nfunction getActivePerspective({\n  visionPerspective,\n  pinnedPerspective,\n}: {\n  visionPerspective: ClientPerspective | SupportedPerspective | undefined\n  pinnedPerspective: PerspectiveContextValue\n}): ClientPerspective | undefined {\n  if (visionPerspective !== 'pinnedRelease') {\n    return visionPerspective\n  }\n\n  if (pinnedPerspective.perspectiveStack.length !== 0) {\n    return pinnedPerspective.perspectiveStack\n  }\n\n  if (typeof pinnedPerspective.selectedPerspectiveName !== 'undefined') {\n    return [pinnedPerspective.selectedPerspectiveName]\n  }\n\n  return undefined\n}\n\nconst PinnedReleasePerspectiveOption: ComponentType<{\n  pinnedPerspective: PerspectiveContextValue\n  t: TFunction\n}> = ({pinnedPerspective, t}) => {\n  const name =\n    typeof pinnedPerspective.selectedPerspective === 'object'\n      ? pinnedPerspective.selectedPerspective.metadata.title\n      : pinnedPerspective.selectedPerspectiveName\n\n  const label = hasPinnedPerspective(pinnedPerspective)\n    ? `(${t('settings.perspectives.pinned-release-label')})`\n    : t('settings.perspectives.pinned-release-label')\n\n  const text = useMemo(\n    () => [name, label].filter((value) => typeof value !== 'undefined').join(' '),\n    [label, name],\n  )\n\n  return (\n    <option value=\"pinnedRelease\" disabled={!hasPinnedPerspective(pinnedPerspective)}>\n      {text}\n    </option>\n  )\n}\n\nfunction hasPinnedPerspective({selectedPerspectiveName}: PerspectiveContextValue): boolean {\n  return typeof selectedPerspectiveName !== 'undefined'\n}\n\nfunction hasPinnedPerspectiveChanged(\n  previous: PerspectiveContextValue,\n  next: PerspectiveContextValue,\n): boolean {\n  const hasPerspectiveStackChanged = !isEqual(previous.perspectiveStack, next.perspectiveStack)\n\n  return (\n    previous.selectedPerspectiveName !== next.selectedPerspectiveName || hasPerspectiveStackChanged\n  )\n}\n","import {type SanityClient} from '@sanity/client'\nimport {useEffect, useState} from 'react'\n\nexport function useDatasets(client: SanityClient): string[] | Error | undefined {\n  const projectId = client.config().projectId\n  const [datasets, setDatasets] = useState<string[] | Error | undefined>()\n\n  useEffect(() => {\n    const datasets$ = client.observable.datasets.list().subscribe({\n      next: (result) => setDatasets(result.map((ds) => ds.name)),\n      error: (err) => setDatasets(err),\n    })\n\n    return () => datasets$.unsubscribe()\n  }, [client, projectId])\n\n  return datasets || undefined\n}\n","import {Flex, useToast} from '@sanity/ui'\nimport {useTranslation} from 'sanity'\n\nimport {DelayedSpinner} from '../components/DelayedSpinner'\nimport {VisionGui} from '../components/VisionGui'\nimport {useDatasets} from '../hooks/useDatasets'\nimport {visionLocaleNamespace} from '../i18n'\nimport {type VisionProps} from '../types'\n\nexport function VisionContainer(props: VisionProps) {\n  const toast = useToast()\n  const loadedDatasets = useDatasets(props.client)\n  const {t} = useTranslation(visionLocaleNamespace)\n\n  if (!loadedDatasets) {\n    return (\n      <Flex align=\"center\" height=\"fill\" justify=\"center\">\n        <DelayedSpinner />\n      </Flex>\n    )\n  }\n\n  const datasets =\n    loadedDatasets instanceof Error\n      ? // On error, use the clients configured dataset\n        [props.client.config().dataset || 'production']\n      : // Otherwise use the loaded list, obviously\n        loadedDatasets\n\n  return <VisionGui {...props} datasets={datasets} toast={toast} t={t} />\n}\n","/* eslint-disable @sanity/i18n/no-attribute-string-literals */\n/* eslint-disable i18next/no-literal-string */\nimport {Button, Card, Code, Container, Heading, Stack} from '@sanity/ui'\nimport {Component, type PropsWithChildren} from 'react'\n\nimport {clearLocalStorage} from '../util/localStorage'\n\n/**\n * @internal\n */\nexport type VisionErrorBoundaryProps = PropsWithChildren\n\n/**\n * @internal\n */\ninterface VisionErrorBoundaryState {\n  error: string | null\n  numRetries: number\n}\n\n/**\n * @internal\n */\nexport class VisionErrorBoundary extends Component<\n  VisionErrorBoundaryProps,\n  VisionErrorBoundaryState\n> {\n  constructor(props: VisionErrorBoundaryProps) {\n    super(props)\n    this.state = {error: null, numRetries: 0}\n  }\n\n  static getDerivedStateFromError(error: unknown) {\n    return {error: error instanceof Error ? error.message : `${error}`}\n  }\n\n  handleRetryRender = () =>\n    this.setState((prev) => ({error: null, numRetries: prev.numRetries + 1}))\n\n  handleRetryWithCacheClear = () => {\n    clearLocalStorage()\n    this.handleRetryRender()\n  }\n\n  render() {\n    if (!this.state.error) {\n      return this.props.children\n    }\n\n    const message = this.state.error\n    const withCacheClear = this.state.numRetries > 0\n\n    return (\n      <Card\n        height=\"fill\"\n        overflow=\"auto\"\n        paddingY={[4, 5, 6, 7]}\n        paddingX={4}\n        sizing=\"border\"\n        tone=\"critical\"\n      >\n        <Container width={3}>\n          <Stack space={4}>\n            <div>\n              <Button\n                onClick={withCacheClear ? this.handleRetryWithCacheClear : this.handleRetryRender}\n                text={withCacheClear ? 'Clear cache and retry' : 'Retry'}\n                tone=\"default\"\n              />\n            </div>\n\n            <Heading>An error occurred</Heading>\n\n            <Card border radius={2} overflow=\"auto\" padding={4} tone=\"inherit\">\n              <Stack space={4}>\n                {message && (\n                  <Code size={1}>\n                    <strong>Error: {message}</strong>\n                  </Code>\n                )}\n              </Stack>\n            </Card>\n          </Stack>\n        </Container>\n      </Card>\n    )\n  }\n}\n","import {type Tool, useClient, usePerspective} from 'sanity'\n\nimport {DEFAULT_API_VERSION} from './apiVersions'\nimport {VisionContainer} from './containers/VisionContainer'\nimport {VisionErrorBoundary} from './containers/VisionErrorBoundary'\nimport {type VisionConfig} from './types'\n\ninterface SanityVisionProps {\n  tool: Tool<VisionConfig>\n}\n\nfunction SanityVision(props: SanityVisionProps) {\n  const client = useClient({apiVersion: '1'})\n  const perspective = usePerspective()\n  const config: VisionConfig = {\n    defaultApiVersion: DEFAULT_API_VERSION,\n    ...props.tool.options,\n  }\n\n  return (\n    <VisionErrorBoundary>\n      <VisionContainer client={client} config={config} pinnedPerspective={perspective} />\n    </VisionErrorBoundary>\n  )\n}\n\nexport default SanityVision\n"],"names":["API_VERSIONS","Date","toISOString","split","DEFAULT_API_VERSION","slice","DelayedSpinner","props","$","_c","show","setShow","useState","t0","t1","delay","timer","setTimeout","clearTimeout","useEffect","t2","codemirrorExtensions","javascriptLanguage","lineNumbers","highlightActiveLine","highlightActiveLineGutter","highlightSelectionMatches","highlightSpecialChars","indentOnInput","bracketMatching","closeBrackets","history","drawSelection","syntaxHighlighting","defaultHighlightStyle","fallback","keymap","of","key","run","defaultKeymap","historyKeymap","flat","filter","Boolean","useCodemirrorTheme","theme","createTheme","cmTheme","t3","createHighlight","cmHighlight","t4","color","fonts","sanity","card","enabled","cursor","hues","blue","dark","hex","selection","gray","EditorView","fg","backgroundColor","bg","caretColor","fontFamily","code","family","fontSize","rem","sizes","lineHeight","borderLeftColor","borderBottom","border","borderTop","c","base","s","syntax","HighlightStyle","define","tag","t","keyword","propertyName","name","deleted","character","macroName","property","function","variableName","labelName","constant","standard","variable","definition","separator","typeName","className","number","changed","annotation","modifier","self","namespace","operator","operatorKeyword","url","escape","regexp","link","special","string","meta","comment","strong","fontWeight","emphasis","fontStyle","strikethrough","textDecoration","heading","atom","bool","boolean","processingInstruction","inserted","invalid","EditorRoot","styled","div","space","VisionCodeMirror","sanityTheme","useTheme","SUPPORTED_PERSPECTIVES","VIRTUAL_PERSPECTIVES","isSupportedPerspective","p","includes","isVirtualPerspective","maybeVirtualPerspective","encodeQueryString","query","params","options","searchParams","URLSearchParams","set","value","Object","entries","JSON","stringify","getBlobUrl","content","mimeType","URL","createObjectURL","Blob","type","getMemoizedBlobUrlResolver","stringEncoder","prevResult","prevContent","input","revokeObjectURL","getJsonBlobUrl","getCsvBlobUrl","json2csv","Array","isArray","trim","isPlainObject","obj","prototype","toString","call","hasLocalStorage","supportsLocalStorage","keyPrefix","clearLocalStorage","i","localStorage","length","startsWith","removeItem","getLocalStorage","storageKey","loadedState","get","merge","defaultVal","state","ensureState","setItem","loadState","stored","parse","getItem","mod","parseApiQueryString","qs","prefixApiVersion","version","RO","document","ResizeObserverPolyfill","window","ResizeObserver","tryParseParams","val","parsed","JSON5","err","message","replace","validateApiVersion","apiVersion","parseableApiVersion","toUpperCase","test","isNaN","defaultValue","ParamsEditor","onChange","onPasteCapture","useTranslation","visionLocaleNamespace","eventFromValue","raw","error","valid","isValid","setValid","init","setInit","newValue","event","handleChangeRaw","t5","debounce","handleChange","t6","t7","parsedParams","Error","validationError","undefined","PerspectivePopoverContent","Box","PerspectivePopoverLink","a","Dot","tone","PerspectivePopover","open","setOpen","buttonRef","useRef","popoverRef","Symbol","for","_temp","handleClick","current","useClickOutsideEvent","t8","t9","t10","t11","t12","t13","t14","t15","t16","HelpCircleIcon","t17","o","ErrorCode","Code","muted","critical","QueryErrorDetails","details","mapToLegacyDetails","line","dashLine","column","columnEnd","lineNumber","start","end","lineStart","lastIndexOf","match","indexOf","repeat","hats","QueryErrorDialog","ResultViewWrapper","css","lru","LRU","maxSize","ResultView","data","datasetName","workspaceDataset","useDataset","isRecord","DocumentEditLabel","isExpanded","toggleExpanded","isKey","keypath","endsWith","id","keyPath","cached","segments","depthLimit","some","isArrayKeyOverLimit","path","numeric","segment","limit","parseInt","preventSave","evt","preventDefault","SaveCsvButton","blobUrl","isDisabled","DocumentSheetIcon","button","SaveJsonButton","Root","Flex","displayName","Header","Card","StyledLabel","Label","SplitpaneContainer","QueryCopyLink","InputBackgroundContainer","InputBackgroundContainerLeft","InputContainer","ResultOuterContainer","ResultInnerContainer","ResultContainer","$isInvalid","Result","ResultFooter","TimingsCard","TimingsTextContainer","text","ascenderHeight","descenderHeight","DownloadsCard","SaveResultLabel","Text","ControlsContainer","nodeContains","node","other","compareDocumentPosition","sanityUrl","isRunHotkey","isHotkey","narrowBreakpoint","innerWidth","calculatePaneSizeOptions","rootHeight","defaultSize","size","allowResize","minSize","Math","min","max","VisionGui","PureComponent","constructor","client","datasets","config","_localStorage","projectId","defaultDataset","dataset","defaultApiVersion","lastQuery","lastParams","customApiVersion","perspective","_visionRoot","createRef","_operationUrlElement","_queryEditorContainer","_paramsEditorContainer","_customApiVersionElement","_client","withConfig","getActivePerspective","visionPerspective","pinnedPerspective","allowReconfigure","bodyHeight","body","getBoundingClientRect","height","isValidApiVersion","rawParams","hasValidParams","listenMutations","queryInProgress","listenInProgress","paneSizeOptions","handleChangeDataset","bind","handleChangeApiVersion","handleCustomApiVersionChange","handleChangePerspective","handleListenExecution","handleListenerEvent","handleQueryExecution","handleQueryChange","handleParamsChange","handleCopyUrl","handlePaste","handleKeyDown","handleResize","handleOnPasteCapture","setPerspective","componentDidMount","addEventListener","handleResizeListen","componentWillUnmount","cancelQuery","cancelListener","cancelEventListener","cancelResizeListener","componentDidUpdate","prevProps","hasPinnedPerspectiveChanged","hasPinnedPerspective","_resizeListener","observe","entry","setState","prevState","contentRect","disconnect","stopPropagation","clipboardData","getData","usedApiVersion","usedDataset","urlQuery","parts","warn","toast","push","closable","status","title","ev","_querySubscription","unsubscribe","_listenSubscription","removeEventListener","target","toLowerCase","focus","isWithinRoot","ensureSelectedApiVersion","wantedApiVersion","paramsError","encodeParams","getDataUrl","shouldExecute","queryResult","queryTime","e2eTime","listen","events","subscribe","next","urlQueryOpts","getUrl","queryStart","now","observable","fetch","filterResponse","res","ms","result","el","select","execCommand","console","render","hasResult","jsonUrl","csvUrl","map","ds","perspectiveName","Fragment","CopyIcon","StopIcon","PlayIcon","SaveResultButtons","perspectiveStack","selectedPerspectiveName","PinnedReleasePerspectiveOption","selectedPerspective","metadata","label","join","previous","hasPerspectiveStackChanged","isEqual","useDatasets","setDatasets","datasets$","list","VisionContainer","useToast","loadedDatasets","VisionErrorBoundary","Component","numRetries","getDerivedStateFromError","handleRetryRender","prev","handleRetryWithCacheClear","children","withCacheClear","SanityVision","useClient","usePerspective","tool"],"mappings":"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"}