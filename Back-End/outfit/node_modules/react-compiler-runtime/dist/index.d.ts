declare module 'react-compiler-runtime/index' {
  type MemoCache = Array<number | typeof $empty>;
  const $empty: unique symbol;
  export const c: any;
  enum GuardKind {
      PushGuardContext = 0,
      PopGuardContext = 1,
      PushExpectHook = 2,
      PopExpectHook = 3
  }
  export function $dispatcherGuard(kind: GuardKind): void;
  export function $reset($: MemoCache): void;
  export function $makeReadOnly(): void;
  export const renderCounterRegistry: Map<string, Set<{
      count: number;
  }>>;
  export function clearRenderCounterRegistry(): void;
  export function useRenderCounter(name: string): void;
  export function $structuralCheck(oldValue: any, newValue: any, variableName: string, fnName: string, kind: string, loc: string): void;
  export {};

}
declare module 'react-compiler-runtime' {
  import main = require('react-compiler-runtime/src/index');
  export = main;
}