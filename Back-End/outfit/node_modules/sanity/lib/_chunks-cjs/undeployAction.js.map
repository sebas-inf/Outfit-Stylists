{"version":3,"file":"undeployAction.js","sources":["../../src/_internal/cli/actions/deploy/undeployAction.ts"],"sourcesContent":["import {type CliCommandArguments, type CliCommandContext} from '@sanity/cli'\n\nimport {debug as debugIt} from '../../debug'\nimport {deleteUserApplication, getUserApplication} from './helpers'\n\nconst debug = debugIt.extend('undeploy')\n\nexport default async function undeployStudioAction(\n  _: CliCommandArguments<Record<string, unknown>>,\n  context: CliCommandContext,\n): Promise<void> {\n  const {apiClient, chalk, output, prompt, cliConfig} = context\n\n  const client = apiClient({\n    requireUser: true,\n    requireProject: true,\n  }).withConfig({apiVersion: 'v2024-08-01'})\n\n  // Check that the project has a studio hostname\n  let spinner = output.spinner('Checking project info').start()\n\n  const userApplication = await getUserApplication({\n    client,\n    appHost: cliConfig && 'studioHost' in cliConfig ? cliConfig.studioHost : undefined,\n  })\n\n  spinner.succeed()\n\n  if (!userApplication) {\n    output.print('Your project has not been assigned a studio hostname')\n    output.print('or you do not have studioHost set in sanity.cli.js or sanity.cli.ts.')\n    output.print('Nothing to undeploy.')\n    return\n  }\n\n  // Double-check\n  output.print('')\n\n  const url = `https://${chalk.yellow(userApplication.appHost)}.sanity.studio`\n  const shouldUndeploy = await prompt.single({\n    type: 'confirm',\n    default: false,\n    message: `This will undeploy ${url} and make it unavailable for your users.\n  The hostname will be available for anyone to claim.\n  Are you ${chalk.red('sure')} you want to undeploy?`.trim(),\n  })\n\n  if (!shouldUndeploy) {\n    return\n  }\n\n  spinner = output.spinner('Undeploying studio').start()\n  try {\n    await deleteUserApplication({client, applicationId: userApplication.id})\n    spinner.succeed()\n  } catch (err) {\n    spinner.fail()\n    debug('Error undeploying studio', err)\n    throw err\n  }\n\n  output.print(\n    `Studio undeploy scheduled. It might take a few minutes before ${url} is unavailable.`,\n  )\n}\n"],"names":["debug","debugIt","extend","undeployStudioAction","_","context","apiClient","chalk","output","prompt","cliConfig","client","requireUser","requireProject","withConfig","apiVersion","spinner","start","userApplication","getUserApplication","appHost","studioHost","undefined","succeed","print","url","yellow","single","type","default","message","red","trim","deleteUserApplication","applicationId","id","err","fail"],"mappings":";;AAKA,MAAMA,QAAQC,UAAAA,MAAQC,OAAO,UAAU;AAETC,eAAAA,qBAC5BC,GACAC,SACe;AACT,QAAA;AAAA,IAACC;AAAAA,IAAWC;AAAAA,IAAOC;AAAAA,IAAQC;AAAAA,IAAQC;AAAAA,EAAAA,IAAaL,SAEhDM,SAASL,UAAU;AAAA,IACvBM,aAAa;AAAA,IACbC,gBAAgB;AAAA,EACjB,CAAA,EAAEC,WAAW;AAAA,IAACC,YAAY;AAAA,EAAA,CAAc;AAGzC,MAAIC,UAAUR,OAAOQ,QAAQ,uBAAuB,EAAEC,MAAM;AAEtDC,QAAAA,kBAAkB,MAAMC,2BAAmB;AAAA,IAC/CR;AAAAA,IACAS,SAASV,aAAa,gBAAgBA,YAAYA,UAAUW,aAAaC;AAAAA,EAAAA,CAC1E;AAID,MAFAN,QAAQO,WAEJ,CAACL,iBAAiB;AACbM,WAAAA,MAAM,sDAAsD,GACnEhB,OAAOgB,MAAM,sEAAsE,GACnFhB,OAAOgB,MAAM,sBAAsB;AACnC;AAAA,EAAA;AAIFhB,SAAOgB,MAAM,EAAE;AAEf,QAAMC,MAAM,WAAWlB,MAAMmB,OAAOR,gBAAgBE,OAAO,CAAC;AACrC,MAAA,MAAMX,OAAOkB,OAAO;AAAA,IACzCC,MAAM;AAAA,IACNC,SAAS;AAAA,IACTC,SAAS,sBAAsBL,GAAG;AAAA;AAAA,YAE1BlB,MAAMwB,IAAI,MAAM,CAAC,yBAAyBC,KAAK;AAAA,EAAA,CACxD,GAMDhB;AAAAA,cAAUR,OAAOQ,QAAQ,oBAAoB,EAAEC,MAAM;AACjD,QAAA;AACF,YAAMgB,8BAAsB;AAAA,QAACtB;AAAAA,QAAQuB,eAAehB,gBAAgBiB;AAAAA,MAAAA,CAAG,GACvEnB,QAAQO,QAAQ;AAAA,aACTa,KAAK;AACZpB,YAAAA,QAAQqB,KAAK,GACbrC,MAAM,4BAA4BoC,GAAG,GAC/BA;AAAAA,IAAAA;AAGDZ,WAAAA,MACL,iEAAiEC,GAAG,kBACtE;AAAA,EAAA;AACF;;"}