{"version":3,"file":"PresentationToolGrantsCheck.js","sources":["../../src/presentation/features/PostMessageFeatures.tsx","../../src/presentation/lib/debounce.ts","../../src/presentation/overlays/SharedStateProvider.tsx","../../src/presentation/panels/Panel.tsx","../../src/presentation/panels/usePanelsStorage.ts","../../src/presentation/panels/util.ts","../../src/presentation/panels/Panels.tsx","../../src/presentation/components/ErrorCard.tsx","../../src/presentation/editor/PresentationPaneRouterProvider.tsx","../../src/presentation/editor/DocumentListPane.tsx","../../src/presentation/editor/DocumentPane.tsx","../../src/presentation/editor/DocumentPanel.tsx","../../src/presentation/editor/usePreviewState.ts","../../src/presentation/editor/ContentEditor.tsx","../../src/presentation/panels/usePanelId.ts","../../src/presentation/panels/PanelResizer.tsx","../../src/presentation/PresentationContent.tsx","../../src/presentation/PresentationNavigateProvider.tsx","../../src/presentation/useLocalState.ts","../../src/presentation/PresentationNavigator.tsx","../../src/presentation/PresentationParamsProvider.tsx","../../src/presentation/PresentationProvider.tsx","../../src/presentation/util/encodeStudioPerspective.ts","../../src/presentation/preview/IFrame.tsx","../../src/presentation/preview/OpenPreviewButton.tsx","../../src/presentation/preview/PreviewLocationInput.tsx","../../src/presentation/preview/SharePreviewMenu.tsx","../../src/presentation/preview/PreviewHeader.tsx","../../src/presentation/preview/Preview.tsx","../../src/presentation/util/warnOnce.ts","../../src/presentation/useDocumentsOnPage.ts","../../src/presentation/useMainDocument.ts","../../../../node_modules/.pnpm/@sanity+visual-editing-csm@2.0.4_@sanity+client@6.27.2_debug@4.4.0__@sanity+types@packages+@sanity+types/node_modules/@sanity/visual-editing-csm/dist/index.js","../../src/presentation/lib/parse.ts","../../src/presentation/useParams.ts","../../src/presentation/usePopups.ts","../../src/presentation/usePreviewUrl.ts","../../src/presentation/useStatus.ts","../../src/presentation/PresentationTool.tsx","../../src/presentation/useVercelBypassSecret.ts","../../src/presentation/PresentationToolGrantsCheck.tsx"],"sourcesContent":["import {type FC, memo, useEffect} from 'react'\n\nimport {type VisualEditingConnection} from '../types'\n\nexport interface PostMessagePreviewsProps {\n  comlink: VisualEditingConnection\n}\n\nconst PostMessageFeatures: FC<PostMessagePreviewsProps> = (props) => {\n  const {comlink} = props\n\n  useEffect(() => {\n    return comlink.on('visual-editing/features', () => ({\n      features: {\n        optimistic: true,\n      },\n    }))\n  }, [comlink])\n\n  return null\n}\n\nexport default memo(PostMessageFeatures)\n","export function debounce<F extends (...args: Parameters<F>) => ReturnType<F>>(\n  fn: F,\n  timeout: number,\n): F {\n  let timer: ReturnType<typeof setTimeout>\n  return ((...args: Parameters<F>) => {\n    clearTimeout(timer)\n    timer = setTimeout(() => {\n      fn.apply(fn, args)\n    }, timeout)\n  }) as F\n}\n","import {type Serializable, type SerializableObject} from '@sanity/presentation-comlink'\nimport {\n  type FunctionComponent,\n  type PropsWithChildren,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n} from 'react'\nimport {PresentationSharedStateContext} from 'sanity/_singletons'\n\nimport {type VisualEditingConnection} from '../types'\nimport {type PresentationSharedStateContextValue} from './types'\n\nexport const SharedStateProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink: VisualEditingConnection | null\n  }>\n> = function (props) {\n  const {comlink, children} = props\n\n  const sharedState = useRef<SerializableObject>({})\n\n  useEffect(() => {\n    return comlink?.on('visual-editing/shared-state', () => {\n      return {state: sharedState.current}\n    })\n  }, [comlink])\n\n  const setValue = useCallback(\n    (key: string, value: Serializable) => {\n      sharedState.current[key] = value\n      comlink?.post('presentation/shared-state', {key, value})\n    },\n    [comlink],\n  )\n\n  const removeValue = useCallback(\n    (key: string) => {\n      comlink?.post('presentation/shared-state', {key})\n      delete sharedState.current[key]\n    },\n    [comlink],\n  )\n\n  const context = useMemo<PresentationSharedStateContextValue>(\n    () => ({removeValue, setValue}),\n    [removeValue, setValue],\n  )\n\n  return (\n    <PresentationSharedStateContext.Provider value={context}>\n      {children}\n    </PresentationSharedStateContext.Provider>\n  )\n}\n","import {type FunctionComponent, type PropsWithChildren, useContext, useLayoutEffect} from 'react'\nimport {PresentationPanelsContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\ninterface PanelProps extends PropsWithChildren {\n  defaultSize?: number | null\n  id: string\n  minWidth?: number\n  maxWidth?: number\n  order?: number\n}\n\nconst Root = styled.div`\n  overflow: hidden;\n  flex-basis: 0;\n  flex-shrink: 1;\n`\n\nexport const Panel: FunctionComponent<PanelProps> = function ({\n  children,\n  defaultSize = null,\n  id,\n  minWidth,\n  maxWidth,\n  order = 0,\n}) {\n  const context = useContext(PresentationPanelsContext)\n\n  if (context === null) {\n    throw Error(`Panel components must be rendered within a PanelGroup container`)\n  }\n\n  const {getPanelStyle, registerElement, unregisterElement} = context\n\n  const style = getPanelStyle(id)\n\n  useLayoutEffect(() => {\n    registerElement(id, {\n      id,\n      type: 'panel',\n      defaultSize,\n      maxWidth: maxWidth ?? null,\n      minWidth: minWidth ?? 0,\n      order,\n    })\n\n    return () => {\n      unregisterElement(id)\n    }\n  }, [id, defaultSize, order, maxWidth, minWidth, registerElement, unregisterElement])\n\n  return <Root style={style}>{children}</Root>\n}\n","import {useMemo} from 'react'\n\nimport {debounce} from '../lib/debounce'\nimport {type PanelElement} from './types'\n\nconst itemKey = 'presentation/panels'\n\ntype StoredPanelsState = Record<string, number[]>\n\nconst getStoredItem = () => {\n  // @todo Validate\n  return JSON.parse(localStorage.getItem(itemKey) || '{}') as StoredPanelsState\n}\nconst setStoredItem = (data: StoredPanelsState) => {\n  localStorage.setItem(itemKey, JSON.stringify(data))\n}\n\nconst getKeyForPanels = (panels: PanelElement[]) => {\n  return panels.map((panel) => [panel.id, panel.order].join(':')).join(',')\n}\n\nexport function usePanelsStorage(): {\n  get: (panels: PanelElement[]) => number[] | undefined\n  set: (panels: PanelElement[], widths: number[]) => void\n  setDebounced: (panels: PanelElement[], widths: number[]) => void\n} {\n  return useMemo(() => {\n    const get = (panels: PanelElement[]) => {\n      const stored = getStoredItem()\n      const key = getKeyForPanels(panels)\n      return Array.isArray(stored[key]) && stored[key].some((val) => val === null)\n        ? undefined\n        : stored[key]\n    }\n\n    const set = (panels: PanelElement[], widths: number[]) => {\n      const stored = getStoredItem()\n      const key = getKeyForPanels(panels)\n      const data = {\n        ...stored,\n        [key]: widths,\n      }\n      setStoredItem(data)\n    }\n\n    const setDebounced = debounce(set, 100)\n    return {\n      get,\n      set,\n      setDebounced,\n    }\n  }, [])\n}\n","/* eslint-disable @typescript-eslint/no-shadow,no-eq-null */\nimport {\n  type ElementMap,\n  type InitialDragState,\n  type PanelElement,\n  type PanelsState,\n  type ResizerElement,\n} from './types'\n\nfunction getNextWidth(panel: PanelElement, nextWidth: number, containerWidth: number) {\n  const {maxWidth: maxWidthPx, minWidth: minWidthPx} = panel\n  const maxWidth = maxWidthPx == null ? 100 : (maxWidthPx / containerWidth) * 100\n  const minWidth = (minWidthPx / containerWidth) * 100\n  return Math.min(maxWidth, Math.max(minWidth, nextWidth))\n}\n\n// eslint-disable-next-line max-params\nexport function getNextWidths(\n  delta: number,\n  containerWidth: number,\n  panelBefore: PanelElement,\n  panelAfter: PanelElement,\n  panelsState: PanelsState,\n  initialDragState: InitialDragState,\n): number[] {\n  const {panels, widths: prevWidths} = panelsState\n  const {widths: initialWidths} = initialDragState\n\n  const widths = initialWidths || prevWidths\n  const nextWidths = [...widths]\n\n  {\n    const pivotPanel = delta < 0 ? panelAfter : panelBefore\n    const index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n    const width = widths[index]\n    const nextWidth = getNextWidth(pivotPanel, width + Math.abs(delta), containerWidth)\n    if (width === nextWidth) {\n      return widths\n    }\n    delta = delta < 0 ? width - nextWidth : nextWidth - width\n  }\n\n  let deltaApplied = 0\n  let pivotPanel = delta < 0 ? panelBefore : panelAfter\n  let index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const panel = panels[index]\n    const width = widths[index]\n\n    const deltaRemaining = Math.abs(delta) - Math.abs(deltaApplied)\n\n    const nextWidth = getNextWidth(panel, width - deltaRemaining, containerWidth)\n\n    if (width !== nextWidth) {\n      deltaApplied += width - nextWidth\n      nextWidths[index] = nextWidth\n\n      if (\n        deltaApplied.toPrecision(10).localeCompare(Math.abs(delta).toPrecision(10), undefined, {\n          numeric: true,\n        }) >= 0\n      ) {\n        break\n      }\n    }\n\n    if (delta < 0) {\n      if (--index < 0) {\n        break\n      }\n    } else if (++index >= panels.length) {\n      break\n    }\n  }\n\n  if (deltaApplied === 0) {\n    return widths\n  }\n\n  pivotPanel = delta < 0 ? panelAfter : panelBefore\n  index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n  nextWidths[index] = widths[index] + deltaApplied\n\n  return nextWidths\n}\n\nexport function getPanelWidth(panels: PanelElement[], id: string, widths: number[]): string {\n  if (panels.length === 1) return '100'\n\n  const index = panels.findIndex((panel) => panel.id === id)\n  const width = widths[index]\n\n  // eslint-disable-next-line no-eq-null\n  if (width == null) return '0'\n\n  return width.toPrecision(10)\n}\n\nexport function getOffset(\n  event: MouseEvent,\n  handleElement: HTMLDivElement,\n  initialOffset: number = 0,\n  initialHandleElementRect: DOMRect | null = null,\n): number {\n  const pointerOffset = event.clientX\n\n  const rect = initialHandleElementRect || handleElement.getBoundingClientRect()\n  const elementOffset = rect.left\n\n  return pointerOffset - elementOffset - initialOffset\n}\n\nexport function isPanel(element: PanelElement | ResizerElement): element is PanelElement {\n  return element.type === 'panel'\n}\n\nexport function isResizer(element: PanelElement | ResizerElement): element is ResizerElement {\n  return element.type === 'resizer'\n}\n\nexport function getSortedElements(elements: ElementMap): Array<PanelElement | ResizerElement> {\n  return Array.from(elements.values()).sort(({order: a}, {order: b}) => {\n    if (a == null && b == null) return 0\n    if (a == null) return -1\n    if (b == null) return 1\n    return a - b\n  })\n}\n\nexport function validateWidths(\n  panels: PanelElement[],\n  widthsToValidate: number[],\n  containerWidth: number,\n): number[] {\n  // Clamp widths proportionally to total 100\n  const total = widthsToValidate.reduce((total, width) => total + width, 0)\n  const widths = [...widthsToValidate].map((width) => (width / total) * 100)\n\n  let remainingWidth = 0\n\n  for (let index = 0; index < panels.length; index++) {\n    const panel = panels[index]\n    const width = widths[index]\n    const nextWidth = getNextWidth(panel, width, containerWidth)\n    if (width != nextWidth) {\n      remainingWidth += width - nextWidth\n      widths[index] = nextWidth\n    }\n  }\n\n  if (remainingWidth.toFixed(3) !== '0.000') {\n    for (let index = 0; index < panels.length; index++) {\n      const panel = panels[index]\n\n      let {maxWidth, minWidth} = panel\n\n      minWidth = (minWidth / containerWidth) * 100\n      if (maxWidth != null) {\n        maxWidth = (maxWidth / containerWidth) * 100\n      }\n\n      const width = Math.min(\n        // eslint-disable-next-line no-negated-condition\n        maxWidth != null ? maxWidth : 100,\n        Math.max(minWidth, widths[index] + remainingWidth),\n      )\n\n      if (width !== widths[index]) {\n        remainingWidth -= width - widths[index]\n        widths[index] = width\n\n        if (Math.abs(remainingWidth).toFixed(3) === '0.000') {\n          break\n        }\n      }\n    }\n  }\n\n  return widths\n}\n\nexport function getDefaultWidths(panels: PanelElement[]): number[] {\n  let panelsWithoutWidth = panels.length\n  let remainingWidthTotal = 100\n\n  const widthsWithNulls = panels.map((panel) => {\n    if (panel.defaultSize) {\n      remainingWidthTotal -= panel.defaultSize\n      panelsWithoutWidth -= 1\n      return panel.defaultSize\n    }\n    return null\n  })\n\n  const defaultWidth = remainingWidthTotal / panelsWithoutWidth\n  const widths = widthsWithNulls.map((width) => {\n    if (width === null) return defaultWidth\n    return width\n  })\n\n  return widths\n}\n","// Slightly modified version of react-resizable-panels\n// https://github.com/bvaughn/react-resizable-panels/tree/main/packages/react-resizable-panels\n\nimport {\n  type CSSProperties,\n  type FunctionComponent,\n  type PropsWithChildren,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {PresentationPanelsContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {\n  type ElementMap,\n  type InitialDragState,\n  type PanelElement,\n  type PanelsState,\n  type ResizerElement,\n} from './types'\nimport {usePanelsStorage} from './usePanelsStorage'\nimport {\n  getDefaultWidths,\n  getNextWidths,\n  getOffset,\n  getPanelWidth,\n  getSortedElements,\n  isPanel,\n  isResizer,\n  validateWidths,\n} from './util'\n\nconst PanelsWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  overflow: hidden;\n  width: 100%;\n`\n\nexport const Panels: FunctionComponent<PropsWithChildren> = function ({children}) {\n  const panelsEl = useRef<HTMLDivElement | null>(null)\n\n  const [elements, setElements] = useState<ElementMap>(new Map())\n\n  const panels = useMemo(() => getSortedElements(elements).filter(isPanel), [elements])\n\n  const [widths, setWidths] = useState<number[]>([])\n  const [activeResizer, setActiveResizer] = useState<string | null>(null)\n\n  const panelsRef = useRef<PanelsState>({\n    elements,\n    panels,\n    widths,\n  })\n\n  const getPanelStyle = useCallback(\n    (id: string): CSSProperties => {\n      return {\n        flexGrow: getPanelWidth(panels, id, widths),\n        pointerEvents: activeResizer === null ? undefined : 'none',\n      }\n    },\n    [activeResizer, panels, widths],\n  )\n\n  const registerElement = useCallback((id: string, data: PanelElement | ResizerElement) => {\n    setElements((prev) => {\n      if (prev.has(id)) return prev\n      const next = new Map(prev)\n      next.set(id, data)\n      return next\n    })\n  }, [])\n  const unregisterElement = useCallback((id: string) => {\n    setElements((prev) => {\n      if (!prev.has(id)) return prev\n      const next = new Map(prev)\n      next.delete(id)\n      return next\n    })\n  }, [])\n\n  const dragRef = useRef<InitialDragState>({\n    containerWidth: window.innerWidth,\n    dragOffset: 0,\n    panelAfter: null,\n    panelBefore: null,\n    resizerIndex: -1,\n    resizerRect: null,\n    startX: 0,\n    widths: [],\n  })\n\n  const startDragging = useCallback(\n    (id: string, event: MouseEvent) => {\n      const elementsArr = getSortedElements(elements)\n      const index = elementsArr.findIndex((el) => el.id === id)\n\n      const resizer = elements.get(id)\n      if (!resizer || !isResizer(resizer)) return\n      const resizeElement = resizer.el.current\n      if (!resizeElement) return\n\n      dragRef.current = {\n        resizerIndex: index,\n        panelBefore: elementsArr.reduce(\n          (acc, el, i) => (isPanel(el) && i < index ? el : acc),\n          null as PanelElement | null,\n        ),\n        panelAfter: elementsArr.reduce(\n          (acc, el, i) => (acc === null && isPanel(el) && i > index ? el : acc),\n          null as PanelElement | null,\n        ),\n        containerWidth: window.innerWidth,\n        startX: event.pageX,\n        dragOffset: getOffset(event, resizeElement),\n        resizerRect: resizeElement.getBoundingClientRect(),\n        widths: panelsRef.current.widths,\n      }\n\n      setActiveResizer(id)\n    },\n    [elements],\n  )\n\n  const stopDragging = useCallback(() => {\n    setActiveResizer(null)\n  }, [])\n\n  const drag = useCallback(\n    (id: string, event: MouseEvent) => {\n      event.preventDefault()\n      event.stopPropagation()\n\n      const {containerWidth, dragOffset, panelBefore, panelAfter, resizerRect} = dragRef.current\n\n      // eslint-disable-next-line no-eq-null\n      if (panelBefore == null || panelAfter == null) {\n        return\n      }\n\n      const resizer = elements.get(id)\n      if (!resizer || !isResizer(resizer)) return\n      const resizeElement = resizer.el.current\n      if (!resizeElement) return\n\n      const offset = getOffset(event, resizeElement, dragOffset, resizerRect)\n\n      if (offset === 0) {\n        return\n      }\n\n      const {widths: prevWidths} = panelsRef.current\n      const rect = panelsEl.current!.getBoundingClientRect()\n      const delta = (offset / rect.width) * 100\n\n      const nextWidths = getNextWidths(\n        delta,\n        containerWidth,\n        panelBefore,\n        panelAfter,\n        panelsRef.current,\n        dragRef.current,\n      )\n\n      const widthsChanged = prevWidths.some((prevWidth, i) => prevWidth !== nextWidths[i])\n\n      if (widthsChanged) {\n        setWidths(nextWidths)\n      }\n    },\n    [elements],\n  )\n\n  // For setting the panels state\n  useLayoutEffect(() => {\n    panelsRef.current.elements = elements\n    panelsRef.current.panels = panels\n    panelsRef.current.widths = widths\n  }, [elements, panels, widths])\n\n  const storage = usePanelsStorage()\n\n  // For setting default sizing when panels are updated\n  useLayoutEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const {widths} = panelsRef.current\n\n    if (widths.length === panels.length) {\n      return\n    }\n\n    const storedWidths = storage.get(panels)\n\n    if (storedWidths) {\n      const validatedStoredWidths = validateWidths(panels, storedWidths, window.innerWidth)\n      setWidths(validatedStoredWidths)\n      return\n    }\n\n    const defaultWidths = getDefaultWidths(panels)\n    setWidths(defaultWidths)\n  }, [storage, panels])\n\n  // For storing current widths in localStorage\n  useEffect(() => {\n    if (!widths.length) return\n    storage.setDebounced(panels, widths)\n  }, [storage, panels, widths])\n\n  useLayoutEffect(() => {\n    const resizeObserver = new ResizeObserver(() => {\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      const {panels, widths: prevWidths} = panelsRef.current\n\n      const nextWidths = validateWidths(panels, prevWidths, window.innerWidth)\n\n      const widthsChanged = prevWidths.some((prevWidth, i) => prevWidth !== nextWidths[i])\n      if (widthsChanged) {\n        setWidths(nextWidths)\n      }\n    })\n\n    resizeObserver.observe(panelsEl.current!)\n\n    return () => {\n      resizeObserver.disconnect()\n    }\n  }, [])\n\n  const context = useMemo(\n    () => ({\n      activeResizer,\n      drag,\n      getPanelStyle,\n      registerElement,\n      startDragging,\n      stopDragging,\n      unregisterElement,\n    }),\n    [\n      activeResizer,\n      drag,\n      getPanelStyle,\n      registerElement,\n      startDragging,\n      stopDragging,\n      unregisterElement,\n    ],\n  )\n\n  return (\n    <PresentationPanelsContext.Provider value={context}>\n      <PanelsWrapper ref={panelsEl}>{children}</PanelsWrapper>\n    </PresentationPanelsContext.Provider>\n  )\n}\n","/* eslint-disable no-nested-ternary */\nimport {Box, Card, type CardProps, Container, Flex, Inline, Stack, Text} from '@sanity/ui'\nimport {type ReactNode} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {Button} from '../../ui-components'\nimport {presentationLocaleNamespace} from '../i18n'\n\nexport function ErrorCard(\n  props: {\n    children?: ReactNode\n    message: string\n    onRetry?: () => void\n    onContinueAnyway?: () => void\n  } & CardProps,\n): React.JSX.Element {\n  const {children, message, onRetry, onContinueAnyway, ...restProps} = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n\n  const retryButton = (\n    <Button mode=\"ghost\" onClick={onRetry} text={t('error-card.retry-button.text')} />\n  )\n  const continueAnywayButton = (\n    <Button\n      mode=\"ghost\"\n      tone=\"critical\"\n      onClick={onContinueAnyway}\n      text={t('error-card.continue-button.text')}\n    />\n  )\n\n  return (\n    <Card height=\"fill\" {...restProps}>\n      <Flex align=\"center\" height=\"fill\" justify=\"center\">\n        <Container padding={4} sizing=\"border\" width={0}>\n          <Stack space={4}>\n            <Stack space={3}>\n              <Text size={1} weight=\"semibold\">\n                {t('error-card.title')}\n              </Text>\n              <Text muted size={1}>\n                {message}\n              </Text>\n            </Stack>\n\n            {children}\n\n            {onRetry && onContinueAnyway ? (\n              <Inline space={2}>\n                {retryButton}\n                {continueAnywayButton}\n              </Inline>\n            ) : onRetry ? (\n              <Box>{retryButton}</Box>\n            ) : onContinueAnyway ? (\n              <Box>{continueAnywayButton}</Box>\n            ) : null}\n          </Stack>\n        </Container>\n      </Flex>\n    </Card>\n  )\n}\n","/* eslint-disable no-console */\n\nimport {forwardRef, type PropsWithChildren, useCallback, useMemo} from 'react'\nimport {getPublishedId, useUnique} from 'sanity'\nimport {StateLink, useRouter} from 'sanity/router'\nimport {\n  type BackLinkProps,\n  PaneRouterContext,\n  type PaneRouterContextValue,\n  type ReferenceChildLinkProps,\n} from 'sanity/structure'\n\nimport {\n  type PresentationParamsContextValue,\n  type PresentationSearchParams,\n  type StructureDocumentPaneParams,\n} from '../types'\n\nfunction encodeQueryString(params: Record<string, unknown> = {}): string {\n  const parts = Object.entries(params)\n    .map(([key, value]) => `${key}=${value}`)\n    .join('&')\n\n  return parts.length ? `?${parts}` : ''\n}\n\nfunction resolveQueryStringFromParams(nextParams: Record<string, string | undefined>) {\n  const allowed = [\n    'comment',\n    'inspect',\n    'instruction',\n    'pathKey',\n    'rev',\n    'since',\n    'template',\n    'view',\n  ] satisfies Array<keyof PresentationParamsContextValue> as string[]\n\n  const safeNextParams = Object.entries(nextParams)\n    .filter(([key]) => allowed.includes(key))\n    .reduce((obj, [key, value]) => {\n      if (value == undefined) return obj\n      return {...obj, [key]: value}\n    }, {})\n\n  return encodeQueryString(safeNextParams)\n}\n\nconst BackLink = forwardRef(function BackLink(\n  props: BackLinkProps & {searchParams: PresentationSearchParams},\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const {searchParams, ...restProps} = props\n  return (\n    <StateLink\n      {...restProps}\n      ref={ref}\n      state={{\n        type: undefined,\n        _searchParams: Object.entries(searchParams),\n      }}\n      title={undefined}\n    />\n  )\n})\n\nconst ReferenceChildLink = forwardRef(function ReferenceChildLink(\n  props: ReferenceChildLinkProps & {searchParams: PresentationSearchParams},\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const {\n    documentId,\n    documentType,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    parentRefPath,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    template,\n    searchParams,\n    ...restProps\n  } = props\n\n  return (\n    <StateLink\n      {...restProps}\n      ref={ref}\n      state={{\n        id: documentId,\n        type: documentType,\n        _searchParams: Object.entries(searchParams),\n      }}\n      title={undefined}\n    />\n  )\n})\n\nexport function PresentationPaneRouterProvider(\n  props: PropsWithChildren<{\n    onStructureParams: (params: StructureDocumentPaneParams) => void\n    refs?: {_id: string; _type: string}[]\n    searchParams: PresentationSearchParams\n    structureParams: StructureDocumentPaneParams\n  }>,\n): React.JSX.Element {\n  const {children, onStructureParams, structureParams, searchParams, refs} = props\n\n  const {state: routerState, resolvePathFromState} = useRouter()\n\n  const routerSearchParams = useUnique(Object.fromEntries(routerState._searchParams || []))\n\n  const createPathWithParams: PaneRouterContextValue['createPathWithParams'] = useCallback(\n    (nextParams) => {\n      const path = resolvePathFromState(routerState)\n      const qs = resolveQueryStringFromParams({\n        ...routerSearchParams,\n        ...nextParams,\n      })\n      return `${path}${qs}`\n    },\n    [resolvePathFromState, routerSearchParams, routerState],\n  )\n\n  const context: PaneRouterContextValue = useMemo(() => {\n    return {\n      index: 0,\n      groupIndex: 0,\n      siblingIndex: 0,\n      payload: {},\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      params: structureParams as any,\n      hasGroupSiblings: false,\n      groupLength: 1,\n      routerPanesState: [],\n      ChildLink: (childLinkProps) => {\n        const {childId, ...restProps} = childLinkProps\n        const ref = refs?.find((r) => r._id === childId || getPublishedId(r._id) === childId)\n        if (ref) {\n          return (\n            <StateLink\n              {...restProps}\n              state={{\n                id: childId,\n                type: ref._type,\n                _searchParams: Object.entries(searchParams),\n              }}\n            />\n          )\n        }\n\n        return <div {...restProps} />\n      },\n      BackLink: (backLinkProps) => <BackLink {...backLinkProps} searchParams={searchParams} />,\n      ReferenceChildLink: (childLinkProps) => (\n        <ReferenceChildLink {...childLinkProps} searchParams={searchParams} />\n      ),\n      ParameterizedLink: () => {\n        throw new Error('ParameterizedLink not implemented')\n      },\n      closeCurrentAndAfter: () => {\n        console.warn('closeCurrentAndAfter')\n      },\n      handleEditReference: (options) => {\n        console.warn('handleEditReference', options)\n      },\n      replaceCurrent: (pane) => {\n        console.warn('replaceCurrent', pane)\n      },\n      closeCurrent: () => {\n        console.warn('closeCurrent')\n      },\n      duplicateCurrent: (pane) => {\n        console.warn('duplicateCurrent', pane)\n      },\n      setView: (viewId) => {\n        console.warn('setView', viewId)\n      },\n      setParams: (nextParams) => {\n        // eslint-disable-next-line no-warning-comments\n        // @todo set inspect param to undefined manually as param is missing from object when closing inspector\n        onStructureParams({\n          ...nextParams,\n          inspect: nextParams.inspect ?? undefined,\n        } as StructureDocumentPaneParams)\n      },\n      setPayload: (payload) => {\n        console.warn('setPayload', payload)\n      },\n      navigateIntent: (intentName, intentParams, options) => {\n        console.warn('navigateIntent', intentName, intentParams, options)\n      },\n      createPathWithParams,\n    }\n  }, [createPathWithParams, onStructureParams, refs, searchParams, structureParams])\n\n  return <PaneRouterContext.Provider value={context}>{children}</PaneRouterContext.Provider>\n}\n","import {Card, Code, Flex, Label, Stack} from '@sanity/ui'\nimport {type ErrorInfo, useCallback, useEffect, useMemo, useState} from 'react'\nimport {getPublishedId, useTranslation} from 'sanity'\nimport {\n  DocumentListPane as StructureDocumentListPane,\n  PaneLayout,\n  type PaneNode,\n  StructureToolProvider,\n} from 'sanity/structure'\nimport {styled} from 'styled-components'\n\nimport {ErrorBoundary} from '../../ui-components'\nimport {ErrorCard} from '../components/ErrorCard'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {\n  type MainDocumentState,\n  type PresentationSearchParams,\n  type StructureDocumentPaneParams,\n} from '../types'\nimport {usePresentationTool} from '../usePresentationTool'\nimport {PresentationPaneRouterProvider} from './PresentationPaneRouterProvider'\n\nconst RootLayout = styled(PaneLayout)`\n  height: 100%;\n`\n\nconst Root = styled(Flex)`\n  & > div {\n    min-width: none !important;\n    max-width: none !important;\n  }\n`\n\nconst WrappedCode = styled(Code)`\n  white-space: pre-wrap;\n`\n\nexport function DocumentListPane(props: {\n  mainDocumentState?: MainDocumentState\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  searchParams: PresentationSearchParams\n  refs: {_id: string; _type: string}[]\n}): React.JSX.Element {\n  const {mainDocumentState, onStructureParams, searchParams, refs} = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {devMode} = usePresentationTool()\n\n  const ids = useMemo(\n    () =>\n      refs\n        .filter((r) => getPublishedId(r._id) !== mainDocumentState?.document?._id)\n        .map((r) => getPublishedId(r._id)),\n    [mainDocumentState, refs],\n  )\n\n  const pane: Extract<PaneNode, {type: 'documentList'}> = useMemo(\n    () => ({\n      id: '$root',\n      options: {\n        filter: '_id in $ids',\n        params: {ids},\n        // defaultOrdering: [{field: '_updatedAt', direction: 'desc'}],\n      },\n      schemaTypeName: '',\n      title: t('document-list-pane.document-list.title'),\n      type: 'documentList',\n    }),\n    [ids, t],\n  )\n\n  const [errorParams, setErrorParams] = useState<{\n    info: ErrorInfo\n    error: Error\n  } | null>(null)\n\n  const handleRetry = useCallback(() => setErrorParams(null), [])\n\n  const [structureParams] = useState(() => ({}))\n\n  // Reset error state when `refs` value schanges\n  useEffect(() => setErrorParams(null), [refs])\n\n  if (errorParams) {\n    return (\n      <ErrorCard flex={1} message={t('document-list-pane.error.text')} onRetry={handleRetry}>\n        {devMode && (\n          // show runtime error message in dev mode\n          <Card overflow=\"auto\" padding={3} radius={2} tone=\"critical\">\n            <Stack space={3}>\n              <Label muted size={0}>\n                {t('presentation-error.label')}\n              </Label>\n              <WrappedCode size={1}>{errorParams.error.message}</WrappedCode>\n            </Stack>\n          </Card>\n        )}\n      </ErrorCard>\n    )\n  }\n\n  return (\n    <ErrorBoundary onCatch={setErrorParams}>\n      <RootLayout>\n        <StructureToolProvider>\n          <PresentationPaneRouterProvider\n            onStructureParams={onStructureParams}\n            structureParams={structureParams}\n            searchParams={searchParams}\n            refs={refs}\n          >\n            <Root direction=\"column\" flex={1}>\n              <StructureDocumentListPane\n                index={0}\n                itemId=\"$root\"\n                pane={pane}\n                // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n                paneKey=\"$root\"\n              />\n            </Root>\n          </PresentationPaneRouterProvider>\n        </StructureToolProvider>\n      </RootLayout>\n    </ErrorBoundary>\n  )\n}\n","import {Card, Code, Label, Stack} from '@sanity/ui'\nimport {type ErrorInfo, Suspense, useCallback, useEffect, useMemo, useState} from 'react'\nimport {type Path, useTranslation} from 'sanity'\nimport {decodeJsonParams} from 'sanity/router'\nimport {\n  DocumentPane as StructureDocumentPane,\n  type DocumentPaneNode,\n  PaneLayout,\n} from 'sanity/structure'\nimport {styled} from 'styled-components'\n\nimport {ErrorBoundary} from '../../ui-components'\nimport {ErrorCard} from '../components/ErrorCard'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {PresentationSpinner} from '../PresentationSpinner'\nimport {type PresentationSearchParams, type StructureDocumentPaneParams} from '../types'\nimport {usePresentationTool} from '../usePresentationTool'\nimport {PresentationPaneRouterProvider} from './PresentationPaneRouterProvider'\n\nconst WrappedCode = styled(Code)`\n  white-space: pre-wrap;\n`\n\nexport function DocumentPane(props: {\n  documentId: string\n  documentType: string\n  onFocusPath: (path: Path) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  structureParams: StructureDocumentPaneParams\n  searchParams: PresentationSearchParams\n}): React.JSX.Element {\n  const {documentId, documentType, onFocusPath, onStructureParams, searchParams, structureParams} =\n    props\n  const {template, templateParams} = structureParams\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {devMode} = usePresentationTool()\n\n  const paneDocumentNode: DocumentPaneNode = useMemo(\n    () => ({\n      id: documentId,\n      options: {\n        id: documentId,\n        type: documentType,\n        template,\n        templateParameters: decodeJsonParams(templateParams),\n      },\n      title: '',\n      type: 'document',\n    }),\n    [documentId, documentType, template, templateParams],\n  )\n\n  const [errorParams, setErrorParams] = useState<{\n    info: ErrorInfo\n    error: Error\n  } | null>(null)\n\n  const handleRetry = useCallback(() => setErrorParams(null), [])\n\n  // Reset error state when parameters change\n  useEffect(() => {\n    setErrorParams(null)\n  }, [documentId, documentType, structureParams])\n\n  if (errorParams) {\n    return (\n      <ErrorCard flex={1} message={t('document-pane.error.text')} onRetry={handleRetry}>\n        {devMode && (\n          // show runtime error message in dev mode\n          <Card overflow=\"auto\" padding={3} radius={2} tone=\"critical\">\n            <Stack space={3}>\n              <Label muted size={0}>\n                {t('presentation-error.label')}\n              </Label>\n              <WrappedCode size={1}>{errorParams.error.message}</WrappedCode>\n            </Stack>\n          </Card>\n        )}\n      </ErrorCard>\n    )\n  }\n\n  return (\n    <ErrorBoundary onCatch={setErrorParams}>\n      <PaneLayout style={{height: '100%'}}>\n        <PresentationPaneRouterProvider\n          searchParams={searchParams}\n          onStructureParams={onStructureParams}\n          structureParams={structureParams}\n        >\n          <Suspense fallback={<PresentationSpinner />}>\n            <StructureDocumentPane\n              // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n              paneKey=\"document\"\n              index={1}\n              itemId=\"document\"\n              pane={paneDocumentNode}\n              onFocusPath={onFocusPath}\n            />\n          </Suspense>\n        </PresentationPaneRouterProvider>\n      </PaneLayout>\n    </ErrorBoundary>\n  )\n}\n","import {type Path} from 'sanity'\nimport {StructureToolProvider} from 'sanity/structure'\n\nimport {type PresentationSearchParams, type StructureDocumentPaneParams} from '../types'\nimport {DocumentPane} from './DocumentPane'\n\nexport function DocumentPanel(props: {\n  documentId: string\n  documentType: string\n  onFocusPath: (path: Path) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  searchParams: PresentationSearchParams\n  structureParams: StructureDocumentPaneParams\n}): React.JSX.Element {\n  const {documentId, documentType, onFocusPath, onStructureParams, searchParams, structureParams} =\n    props\n  return (\n    <StructureToolProvider>\n      <DocumentPane\n        documentId={documentId}\n        documentType={documentType}\n        onFocusPath={onFocusPath}\n        onStructureParams={onStructureParams}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      />\n    </StructureToolProvider>\n  )\n}\n","import {type SchemaType} from '@sanity/types'\nimport {useEffect, useState} from 'react'\nimport {\n  getPreviewStateObservable,\n  type PreviewValue,\n  type SanityDocument,\n  useDocumentPreviewStore,\n} from 'sanity'\n\ninterface PreviewState {\n  isLoading?: boolean\n  draft?: PreviewValue | Partial<SanityDocument> | null\n  published?: PreviewValue | Partial<SanityDocument> | null\n}\n\nexport default function usePreviewState(documentId: string, schemaType?: SchemaType): PreviewState {\n  const documentPreviewStore = useDocumentPreviewStore()\n  const [preview, setPreview] = useState<PreviewState>({})\n\n  useEffect(() => {\n    if (!schemaType) {\n      return undefined\n    }\n    const subscription = getPreviewStateObservable(\n      documentPreviewStore,\n      schemaType,\n      documentId,\n      '',\n    ).subscribe((state) => {\n      setPreview(state)\n    })\n\n    return () => {\n      subscription?.unsubscribe()\n    }\n  }, [documentPreviewStore, schemaType, documentId])\n\n  return preview\n}\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {Box, Card, Flex, Text} from '@sanity/ui'\nimport {type HTMLProps, useCallback, useMemo} from 'react'\nimport {\n  getPreviewValueWithFallback,\n  type Path,\n  PreviewCard,\n  SanityDefaultPreview,\n  type SanityDocument,\n  Translate,\n  useSchema,\n  useTranslation,\n} from 'sanity'\nimport {StateLink} from 'sanity/router'\n\nimport {presentationLocaleNamespace} from '../i18n'\nimport {\n  type MainDocumentState,\n  type PresentationSearchParams,\n  type StructureDocumentPaneParams,\n} from '../types'\nimport {DocumentListPane} from './DocumentListPane'\nimport {DocumentPanel} from './DocumentPanel'\nimport usePreviewState from './usePreviewState'\n\nexport function ContentEditor(props: {\n  documentId?: string\n  documentType?: string\n  mainDocumentState?: MainDocumentState\n  onFocusPath: (path: Path) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  refs: {_id: string; _type: string}[]\n  structureParams: StructureDocumentPaneParams\n  searchParams: PresentationSearchParams\n}): React.JSX.Element {\n  const {\n    documentId,\n    documentType,\n    mainDocumentState,\n    onFocusPath,\n    onStructureParams,\n    refs,\n    searchParams,\n    structureParams,\n  } = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const schema = useSchema()\n\n  const MainDocumentLink = useCallback(\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    (props: HTMLProps<HTMLAnchorElement>) => {\n      return (\n        <StateLink\n          {...props}\n          state={{\n            id: mainDocumentState?.document?._id,\n            type: mainDocumentState?.document?._type,\n            _searchParams: Object.entries(searchParams),\n          }}\n        />\n      )\n    },\n    [mainDocumentState, searchParams],\n  )\n\n  const schemaType = useMemo(\n    () => schema.get(mainDocumentState?.document?._type || 'shoe')!,\n    [mainDocumentState, schema],\n  )\n\n  const previewState = usePreviewState(mainDocumentState?.document?._id || '', schemaType)\n\n  const preview = useMemo(() => {\n    if (!mainDocumentState?.document) return null\n\n    return (\n      <SanityDefaultPreview\n        {...getPreviewValueWithFallback({\n          value: mainDocumentState!.document! as SanityDocument,\n          published: previewState.published,\n          draft: previewState.draft,\n        })}\n        schemaType={schemaType}\n        status={\n          <Card padding={1} radius={2} shadow={1}>\n            <Text muted size={0} weight=\"medium\">\n              {t('main-document.label')}\n            </Text>\n          </Card>\n        }\n      />\n    )\n  }, [mainDocumentState, schemaType, t, previewState])\n\n  if (documentId && documentType) {\n    return (\n      <DocumentPanel\n        documentId={documentId}\n        documentType={documentType}\n        onFocusPath={onFocusPath}\n        onStructureParams={onStructureParams}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      />\n    )\n  }\n\n  return (\n    <Flex direction=\"column\" flex={1} height=\"fill\">\n      {mainDocumentState && (\n        <Card padding={3} tone={mainDocumentState.document ? 'inherit' : 'caution'}>\n          {mainDocumentState.document ? (\n            <PreviewCard\n              __unstable_focusRing\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              as={MainDocumentLink as any}\n              data-as=\"a\"\n              radius={2}\n              sizing=\"border\"\n              tone=\"inherit\"\n            >\n              {preview}\n            </PreviewCard>\n          ) : (\n            <Card padding={2} radius={2} tone=\"inherit\">\n              <Flex gap={3}>\n                <Box flex=\"none\">\n                  <Text size={1}>\n                    <WarningOutlineIcon />\n                  </Text>\n                </Box>\n                <Box flex={1}>\n                  <Text size={1}>\n                    <Translate\n                      t={t}\n                      i18nKey=\"main-document.missing.text\"\n                      components={{Code: 'code'}}\n                      values={{path: mainDocumentState.path}}\n                    />\n                  </Text>\n                </Box>\n              </Flex>\n            </Card>\n          )}\n        </Card>\n      )}\n\n      <DocumentListPane\n        mainDocumentState={mainDocumentState}\n        onStructureParams={onStructureParams}\n        searchParams={searchParams}\n        refs={refs}\n      />\n    </Flex>\n  )\n}\n","import {useState} from 'react'\nimport {v4 as uuid} from 'uuid'\n\nexport function usePanelId(id?: string): string {\n  const [panelId] = useState(() => id || uuid())\n  return panelId\n}\n","import {\n  type FunctionComponent,\n  type MouseEvent as ReactMouseEvent,\n  useCallback,\n  useContext,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from 'react'\nimport {PresentationPanelsContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {usePanelId} from './usePanelId'\n\nconst Resizer = styled.div`\n  position: relative;\n`\nconst ResizerInner = styled.div<{\n  $disabled: boolean\n}>`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: -5px;\n  width: 9px;\n  z-index: 10;\n  cursor: ${({$disabled}) => ($disabled ? 'auto' : 'ew-resize')};\n\n  /* Border */\n  & > span:nth-child(1) {\n    display: block;\n    border-left: 1px solid var(--card-border-color);\n    position: absolute;\n    top: 0;\n    left: 4px;\n    bottom: 0;\n    transition: opacity 200ms;\n  }\n\n  ${({$disabled}) =>\n    !$disabled &&\n    `\n    /* Hover effect */\n    & > span:nth-child(2) {\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 9px;\n      bottom: 0;\n      background-color: var(--card-border-color);\n      opacity: 0;\n      transition: opacity 150ms;\n    }\n\n    @media (hover: hover) {\n      &:hover > span:nth-child(2) {\n        opacity: 0.2;\n      }\n    }\n  `}\n`\n\nexport const PanelResizer: FunctionComponent<{\n  id?: string\n  order: number\n  disabled?: boolean\n}> = function ({id: propId, order, disabled = false}) {\n  const el = useRef<HTMLDivElement>(null)\n\n  const context = useContext(PresentationPanelsContext)\n\n  if (context === null) {\n    throw Error(`Panel components must be rendered within a PanelGroup container`)\n  }\n\n  const id = usePanelId(propId)\n\n  const {activeResizer, drag, startDragging, stopDragging, registerElement, unregisterElement} =\n    context\n\n  const isDragging = activeResizer === id\n\n  if (context === null) {\n    throw Error(`Panel components must be rendered within a PanelGroup container`)\n  }\n\n  const onMouseDown = useCallback(\n    (event: ReactMouseEvent) => {\n      startDragging(id, event.nativeEvent)\n    },\n    [id, startDragging],\n  )\n\n  const onDrag = useCallback(\n    (e: MouseEvent) => {\n      drag(id, e)\n    },\n    [id, drag],\n  )\n\n  const onDragStop = useCallback(() => {\n    el.current!.blur()\n    stopDragging()\n  }, [stopDragging])\n\n  useEffect(() => {\n    if (!isDragging || disabled) return\n\n    // Set styles to prevent text selection and force an ew-resize cursor whilst\n    // dragging. Return a reset callback so we can revert to any values that\n    // might have been present before dragging started.\n    function setDocumentStyles() {\n      const bodyStyle = document.body.style\n      const documentStyle = document.documentElement.style\n\n      const {cursor} = documentStyle\n      const {userSelect} = bodyStyle\n\n      documentStyle.cursor = 'ew-resize'\n      bodyStyle.userSelect = 'none'\n\n      return () => {\n        if (cursor) documentStyle.cursor = cursor\n        else documentStyle.removeProperty('cursor')\n\n        if (userSelect) bodyStyle.userSelect = userSelect\n        else bodyStyle.removeProperty('user-select')\n      }\n    }\n\n    const resetDocumentStyles = setDocumentStyles()\n    window.addEventListener('mousemove', onDrag)\n    window.addEventListener('mouseup', onDragStop)\n    window.addEventListener('contextmenu', onDragStop)\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      resetDocumentStyles()\n      window.removeEventListener('mousemove', onDrag)\n      window.removeEventListener('mouseup', onDragStop)\n      window.removeEventListener('contextmenu', onDragStop)\n    }\n  }, [disabled, isDragging, onDrag, onDragStop])\n\n  useLayoutEffect(() => {\n    registerElement(id, {id, order, type: 'resizer', el})\n\n    return () => {\n      unregisterElement(id)\n    }\n  }, [id, order, registerElement, unregisterElement])\n\n  return (\n    <Resizer onMouseDown={onMouseDown} ref={el}>\n      <ResizerInner $disabled={disabled}>\n        <span />\n        <span />\n      </ResizerInner>\n    </Resizer>\n  )\n}\n","import {\n  type Dispatch,\n  type FunctionComponent,\n  type PropsWithChildren,\n  type SetStateAction,\n} from 'react'\nimport {\n  type CommentIntentGetter,\n  CommentsIntentProvider,\n  type Path,\n  type SanityDocument,\n} from 'sanity'\n\nimport {ContentEditor} from './editor/ContentEditor'\nimport {DisplayedDocumentBroadcasterProvider} from './loader/DisplayedDocumentBroadcaster'\nimport {Panel} from './panels/Panel'\nimport {PanelResizer} from './panels/PanelResizer'\nimport {\n  type MainDocumentState,\n  type PresentationParamsContextValue,\n  type PresentationSearchParams,\n  type StructureDocumentPaneParams,\n} from './types'\n\nexport interface PresentationContentProps {\n  documentId: PresentationParamsContextValue['id']\n  documentsOnPage: {_id: string; _type: string}[]\n  documentType: PresentationParamsContextValue['type']\n  getCommentIntent: CommentIntentGetter\n  mainDocumentState: MainDocumentState | undefined\n  onFocusPath: (path: Path) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  searchParams: PresentationSearchParams\n  setDisplayedDocument: Dispatch<SetStateAction<Partial<SanityDocument> | null | undefined>>\n  structureParams: StructureDocumentPaneParams\n}\n\nconst PresentationContentWrapper: FunctionComponent<\n  PropsWithChildren<{\n    documentId?: string\n    getCommentIntent: CommentIntentGetter\n    setDisplayedDocument: Dispatch<SetStateAction<Partial<SanityDocument> | null | undefined>>\n  }>\n> = (props) => {\n  const {documentId, setDisplayedDocument, getCommentIntent} = props\n  return (\n    <>\n      <PanelResizer order={4} />\n      <Panel id=\"content\" minWidth={325} order={5}>\n        <DisplayedDocumentBroadcasterProvider\n          documentId={documentId}\n          setDisplayedDocument={setDisplayedDocument}\n        >\n          <CommentsIntentProvider getIntent={getCommentIntent}>\n            {props.children}\n          </CommentsIntentProvider>\n        </DisplayedDocumentBroadcasterProvider>\n      </Panel>\n    </>\n  )\n}\n\nexport const PresentationContent: FunctionComponent<PresentationContentProps> = (props) => {\n  const {\n    documentId,\n    documentsOnPage,\n    documentType,\n    getCommentIntent,\n    mainDocumentState,\n    onFocusPath,\n    onStructureParams,\n    searchParams,\n    setDisplayedDocument,\n    structureParams,\n  } = props\n\n  return (\n    <PresentationContentWrapper\n      documentId={documentId}\n      getCommentIntent={getCommentIntent}\n      setDisplayedDocument={setDisplayedDocument}\n    >\n      <ContentEditor\n        documentId={documentId}\n        documentType={documentType}\n        mainDocumentState={mainDocumentState}\n        onFocusPath={onFocusPath}\n        onStructureParams={onStructureParams}\n        refs={documentsOnPage}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      />\n    </PresentationContentWrapper>\n  )\n}\n","import {type FunctionComponent, type PropsWithChildren, useCallback} from 'react'\nimport {PresentationNavigateContext} from 'sanity/_singletons'\n\nimport {type PresentationNavigate, type PresentationNavigateContextValue} from './types'\n\nexport const PresentationNavigateProvider: FunctionComponent<\n  PropsWithChildren<{\n    navigate: PresentationNavigate\n  }>\n> = function (props) {\n  const {children, navigate: _navigate} = props\n\n  const navigate = useCallback<PresentationNavigateContextValue>(\n    (preview, document = undefined) => {\n      _navigate(document || {}, preview ? {preview} : {})\n    },\n    [_navigate],\n  )\n\n  return (\n    <PresentationNavigateContext.Provider value={navigate}>\n      {children}\n    </PresentationNavigateContext.Provider>\n  )\n}\n","import {type Dispatch, type SetStateAction, useEffect, useState} from 'react'\n\nexport function useLocalState<T>(key: string, defaultValue: T): [T, Dispatch<SetStateAction<T>>] {\n  const [value, setValue] = useState<T>(() =>\n    JSON.parse(localStorage.getItem(key) ?? JSON.stringify(defaultValue)),\n  )\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value))\n  }, [key, value])\n\n  return [value, setValue]\n}\n","import {memo, useCallback, useMemo} from 'react'\n\nimport {Panel} from './panels/Panel'\nimport {PanelResizer} from './panels/PanelResizer'\nimport {type NavigatorOptions} from './types'\nimport {useLocalState} from './useLocalState'\n\n/** @internal */\nexport interface UsePresentationNavigatorProps {\n  unstable_navigator?: NavigatorOptions\n}\n\n/** @internal */\nexport interface UsePresentationNavigatorState {\n  navigatorEnabled: boolean\n  toggleNavigator: (() => void) | undefined\n}\n\n/** @internal */\nexport function usePresentationNavigator(\n  props: UsePresentationNavigatorProps,\n): [UsePresentationNavigatorState, () => React.JSX.Element] {\n  const {unstable_navigator} = props\n\n  const navigatorProvided = !!unstable_navigator?.component\n  const [_navigatorEnabled, setNavigatorEnabled] = useLocalState<boolean>(\n    'presentation/navigator',\n    navigatorProvided,\n  )\n  const navigatorEnabled = navigatorProvided ? _navigatorEnabled : false\n  const toggleNavigator = useMemo(() => {\n    if (!navigatorProvided) return undefined\n\n    return () => setNavigatorEnabled((enabled) => !enabled)\n  }, [navigatorProvided, setNavigatorEnabled])\n\n  const Component = useCallback(\n    function PresentationNavigator() {\n      return <>{navigatorEnabled && <Navigator {...unstable_navigator!} />}</>\n    },\n    [navigatorEnabled, unstable_navigator],\n  )\n\n  return [{navigatorEnabled, toggleNavigator}, Component]\n}\n\nfunction NavigatorComponent(props: NavigatorOptions) {\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  const {minWidth, maxWidth, component: NavigatorComponent} = props\n  // eslint-disable-next-line no-eq-null\n  const navigatorDisabled = minWidth != null && maxWidth != null && minWidth === maxWidth\n  return (\n    <>\n      <Panel id=\"navigator\" minWidth={minWidth} maxWidth={maxWidth} order={1}>\n        <NavigatorComponent />\n      </Panel>\n      <PanelResizer order={2} disabled={navigatorDisabled} />\n    </>\n  )\n}\nconst Navigator = memo(NavigatorComponent)\n","import {type FunctionComponent, type PropsWithChildren, useMemo} from 'react'\nimport {PresentationParamsContext} from 'sanity/_singletons'\n\nimport {type PresentationParamsContextValue} from './types'\n\nexport const PresentationParamsProvider: FunctionComponent<\n  PropsWithChildren<{\n    params: PresentationParamsContextValue\n  }>\n> = function (props) {\n  const {children, params} = props\n\n  const context = useMemo<PresentationParamsContextValue>(() => params, [params])\n\n  return (\n    <PresentationParamsContext.Provider value={context}>\n      {children}\n    </PresentationParamsContext.Provider>\n  )\n}\n","import {type FunctionComponent, type PropsWithChildren, useMemo} from 'react'\nimport {PresentationContext} from 'sanity/_singletons'\n\nimport {\n  type PresentationContextValue,\n  type PresentationNavigate,\n  type PresentationParamsContextValue,\n  type PresentationSearchParams,\n  type StructureDocumentPaneParams,\n} from './types'\n\nexport const PresentationProvider: FunctionComponent<\n  PropsWithChildren<{\n    devMode: boolean\n    name: string\n    navigate: PresentationNavigate\n    params: PresentationParamsContextValue\n    searchParams: PresentationSearchParams\n    structureParams: StructureDocumentPaneParams\n  }>\n> = function (props) {\n  const {children, devMode, name, navigate, params, searchParams, structureParams} = props\n\n  const context = useMemo<PresentationContextValue>(\n    () => ({\n      devMode,\n      name,\n      navigate,\n      params,\n      searchParams,\n      structureParams,\n    }),\n    [devMode, name, navigate, params, searchParams, structureParams],\n  )\n\n  return <PresentationContext.Provider value={context}>{children}</PresentationContext.Provider>\n}\n","/**\n * When encoding the current studio perspective it's necessary to deal with it sometimes being an array, in a consistent way.\n */\nexport function encodeStudioPerspective(studioPerspective: string[] | string): string {\n  return Array.isArray(studioPerspective) ? studioPerspective.join(',') : studioPerspective\n}\n","import {Box} from '@sanity/ui'\nimport {motion, type VariantLabels, type Variants} from 'framer-motion'\nimport {forwardRef, type ReactEventHandler, useId} from 'react'\nimport {styled} from 'styled-components'\n\nconst IFrameElement = motion.create(styled.iframe`\n  box-shadow: 0 0 0 1px var(--card-border-color);\n  border: 0;\n  max-height: 100%;\n  width: 100%;\n  view-transition-class: presentation-tool-iframe;\n`)\n\nconst IFrameOverlay = styled(Box)`\n  position: absolute;\n  inset: 0;\n  background: transparent;\n`\n\ninterface IFrameProps {\n  animate: VariantLabels\n  initial: VariantLabels\n  onLoad: ReactEventHandler<HTMLIFrameElement>\n  preventClick: boolean\n  src: string\n  variants: Variants\n  style: React.CSSProperties\n}\n\nexport const IFrame = forwardRef<HTMLIFrameElement, IFrameProps>(function IFrame(props, ref) {\n  const {animate, initial, onLoad, preventClick, src, variants, style} = props\n  const id = useId()\n\n  return (\n    <>\n      <IFrameElement\n        style={{\n          ...style,\n          // useId() guarantees that the ID will be unique, even if we add support for multiple iframe instances,\n          // while `view-transition-class: presentation-tool-iframe` provides userland a way to customize the transition with CSS if they wish\n          viewTransitionName: `presentation-tool-iframe-${id.replace(/[^a-zA-Z0-9-_]/g, '_')}`,\n        }}\n        animate={animate}\n        initial={initial}\n        onLoad={onLoad}\n        ref={ref}\n        src={src}\n        variants={variants}\n      />\n      {preventClick && <IFrameOverlay />}\n    </>\n  )\n})\n","import {LaunchIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {Button, Tooltip} from '../../ui-components'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {type PreviewProps} from './Preview'\n\n/** @internal */\nexport function OpenPreviewButton(\n  props: Pick<PreviewProps, 'openPopup'> & {\n    previewLocationOrigin: string\n    previewLocationRoute: string\n  },\n): React.ReactNode {\n  const {openPopup, previewLocationOrigin, previewLocationRoute} = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n\n  const handleOpenPopup = useCallback(\n    (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n      event.preventDefault()\n      openPopup(event.currentTarget.href)\n    },\n    [openPopup],\n  )\n\n  return (\n    <Tooltip\n      animate\n      content={<Text size={1}>{t('share-url.menu-item.open.text')}</Text>}\n      fallbackPlacements={['bottom-start']}\n      placement=\"bottom\"\n      portal\n    >\n      <Button\n        as=\"a\"\n        aria-label={t('share-url.menu-item.open.text')}\n        icon={LaunchIcon}\n        mode=\"bleed\"\n        href={`${previewLocationOrigin}${previewLocationRoute}`}\n        rel=\"opener\"\n        target=\"_blank\"\n        tooltipProps={null}\n        // @ts-expect-error the `as=\"a\"` prop isn't enough to change the type of event.target from <div> to <a>\n        onClick={handleOpenPopup}\n      />\n    </Tooltip>\n  )\n}\n","import {ResetIcon} from '@sanity/icons'\nimport {TextInput, type TextInputClearButtonProps} from '@sanity/ui'\nimport {\n  type ChangeEvent,\n  type FunctionComponent,\n  type KeyboardEvent,\n  type ReactNode,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {useActiveWorkspace, useTranslation} from 'sanity'\n\nimport {presentationLocaleNamespace} from '../i18n'\n\nexport const PreviewLocationInput: FunctionComponent<{\n  fontSize?: number\n  onChange: (value: string) => void\n  origin: string\n  padding?: number\n  prefix?: ReactNode\n  suffix?: ReactNode\n  value: string\n}> = function (props) {\n  const {fontSize = 1, onChange, origin, padding = 3, prefix, suffix, value} = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {basePath = '/'} = useActiveWorkspace()?.activeWorkspace || {}\n\n  const inputRef = useRef<HTMLInputElement | null>(null)\n  const [sessionValue, setSessionValue] = useState<string | undefined>(undefined)\n  const [customValidity, setCustomValidity] = useState<string | undefined>(undefined)\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    setSessionValue(event.currentTarget.value)\n  }, [])\n\n  const handleKeyDown = useCallback(\n    (event: KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Enter') {\n        if (sessionValue === undefined) {\n          return\n        }\n\n        const absoluteValue =\n          sessionValue.startsWith('/') || sessionValue === ''\n            ? `${origin}${sessionValue}`\n            : sessionValue\n\n        if (!absoluteValue.startsWith(`${origin}/`) && absoluteValue !== origin) {\n          setCustomValidity(t('preview-location-input.error', {origin, context: 'missing-origin'}))\n          return\n        }\n        // `origin` is an empty string '' if the Studio is embedded, and that's when we need to protect against recursion\n        if (!origin && (absoluteValue.startsWith(`${basePath}/`) || absoluteValue === basePath)) {\n          setCustomValidity(\n            t('preview-location-input.error', {basePath, context: 'same-base-path'}),\n          )\n          return\n        }\n\n        const nextValue = absoluteValue === origin ? `${origin}/` : absoluteValue\n\n        setCustomValidity(undefined)\n        setSessionValue(undefined)\n\n        onChange(nextValue.slice(origin.length))\n\n        inputRef.current?.blur()\n      }\n\n      if (event.key === 'Escape') {\n        setCustomValidity(undefined)\n        setSessionValue(undefined)\n      }\n    },\n    [basePath, onChange, origin, sessionValue, t],\n  )\n\n  const handleBlur = useCallback(() => {\n    setCustomValidity(undefined)\n    setSessionValue(undefined)\n  }, [])\n\n  useEffect(() => {\n    setCustomValidity(undefined)\n    setSessionValue(undefined)\n  }, [origin, value])\n\n  const resetButton: TextInputClearButtonProps = useMemo(() => ({icon: ResetIcon}), [])\n\n  return (\n    <>\n      <TextInput\n        clearButton={customValidity ? resetButton : undefined}\n        customValidity={customValidity}\n        fontSize={fontSize}\n        onBlur={handleBlur}\n        onClear={() => {\n          setCustomValidity(undefined)\n          setSessionValue(origin + value)\n        }}\n        onChange={handleChange}\n        onKeyDownCapture={handleKeyDown}\n        padding={padding}\n        prefix={prefix}\n        style={{zIndex: 1}}\n        radius={2}\n        ref={inputRef}\n        space={padding}\n        suffix={suffix}\n        value={sessionValue === undefined ? `${origin}${value}` : sessionValue}\n      />\n    </>\n  )\n}\n","/* eslint-disable @typescript-eslint/no-shadow,no-negated-condition,no-nested-ternary */\nimport {type ClientPerspective, type SyncTag} from '@sanity/client'\nimport {CopyIcon, ShareIcon} from '@sanity/icons'\nimport {SanityMonogram} from '@sanity/logos'\nimport {fetchSharedAccessQuery} from '@sanity/preview-url-secret/constants'\nimport {\n  disablePreviewAccessSharing,\n  enablePreviewAccessSharing,\n} from '@sanity/preview-url-secret/toggle-preview-access-sharing'\nimport {setSecretSearchParams} from '@sanity/preview-url-secret/without-secret-search-params'\nimport {\n  Box,\n  Card,\n  Grid,\n  Menu,\n  MenuDivider,\n  Spinner,\n  Stack,\n  Switch,\n  Text,\n  useToast,\n} from '@sanity/ui'\nimport {AnimatePresence, motion} from 'framer-motion'\nimport {lazy, memo, Suspense, useCallback, useEffect, useMemo, useState} from 'react'\nimport {useClient, useCurrentUser, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, MenuButton, MenuItem, Tooltip} from '../../ui-components'\nimport {API_VERSION} from '../constants'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {encodeStudioPerspective} from '../util/encodeStudioPerspective'\nimport {type PreviewProps} from './Preview'\n\nconst QRCodeSVG = lazy(() => import('./QRCodeSVG'))\n\nexport interface SharePreviewMenuProps {\n  canToggleSharePreviewAccess: boolean\n  canUseSharedPreviewAccess: boolean\n  previewLocationRoute: string\n  initialUrl: PreviewProps['initialUrl']\n  perspective: ClientPerspective\n}\n\nconst QrCodeLogoSize = 24\nconst QrCodeLogoPadding = 16\nconst QrSize = 224\n\nconst StyledSanityMonogram = styled(SanityMonogram)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  height: ${QrCodeLogoSize}px;\n  width: ${QrCodeLogoSize}px;\n`\n\nconst MotionSpinner = motion.create(Spinner)\nconst MotionText = motion.create(Text)\nconst MotionMonogram = motion.create(StyledSanityMonogram)\n\nexport const SharePreviewMenu = memo(function SharePreviewMenuComponent(\n  props: SharePreviewMenuProps,\n) {\n  const {\n    canToggleSharePreviewAccess,\n    canUseSharedPreviewAccess,\n    initialUrl,\n    previewLocationRoute,\n    perspective,\n  } = props\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {push: pushToast} = useToast()\n  const client = useClient({apiVersion: API_VERSION})\n  const currentUser = useCurrentUser()\n  const [loading, setLoading] = useState(true)\n  const [enabling, setEnabling] = useState(false)\n  const [disabling, setDisabling] = useState(false)\n  const [secret, setSecret] = useState<string | null>(null)\n  const busy = enabling || disabling || loading\n  const url = useMemo(\n    () =>\n      secret\n        ? setSecretSearchParams(\n            initialUrl,\n            secret,\n            previewLocationRoute,\n            encodeStudioPerspective(perspective),\n          )\n        : null,\n    [initialUrl, perspective, previewLocationRoute, secret],\n  )\n\n  const [error, setError] = useState<unknown>(null)\n  if (error) {\n    throw error\n  }\n\n  const handleUnableToToggle = useCallback(() => {\n    pushToast({\n      closable: true,\n      status: 'warning',\n      title: t('share-preview-menu.error_toggle-sharing', {context: 'toggle-sharing'}),\n    })\n  }, [pushToast, t])\n\n  const handleDisableSharing = useCallback(async () => {\n    try {\n      setDisabling(true)\n      await disablePreviewAccessSharing(\n        client,\n        '@sanity/presentation',\n        typeof window === 'undefined' ? '' : location.href,\n        currentUser?.id,\n      )\n      setSecret(null)\n    } catch (error) {\n      setError(error)\n    } finally {\n      setDisabling(false)\n    }\n  }, [client, currentUser?.id])\n  const handleEnableSharing = useCallback(async () => {\n    try {\n      setEnabling(true)\n\n      const previewUrlSecret = await enablePreviewAccessSharing(\n        client,\n        '@sanity/presentation',\n        typeof window === 'undefined' ? '' : location.href,\n        currentUser?.id,\n      )\n      setSecret(previewUrlSecret.secret)\n    } catch (error) {\n      setError(error)\n    } finally {\n      setEnabling(false)\n    }\n  }, [client, currentUser?.id])\n\n  const handleCopyUrl = useCallback(() => {\n    try {\n      if (!url) {\n        throw new Error('No URL to copy')\n      }\n      navigator.clipboard.writeText(url.toString())\n      pushToast({\n        closable: true,\n        status: 'success',\n        title: t('share-url.clipboard.status', {context: 'success'}),\n      })\n    } catch (error) {\n      setError(error)\n    }\n  }, [pushToast, t, url])\n\n  useEffect(() => {\n    let controller = new AbortController()\n    let usedTags: SyncTag[] = []\n    async function fetchShareSecret(lastLiveEventId: string | null, signal: AbortSignal) {\n      const {result, syncTags} = await client.fetch<string | null>(\n        fetchSharedAccessQuery,\n        {},\n        {filterResponse: false, lastLiveEventId, tag: 'presentation.fetch-shared-access-secret'},\n      )\n      if (Array.isArray(syncTags)) {\n        usedTags = syncTags\n      }\n      if (!signal.aborted) {\n        setSecret(result)\n      }\n    }\n    const subscription = client.live.events().subscribe({\n      next: (event) => {\n        if (event.type === 'message') {\n          controller.abort()\n          controller = new AbortController()\n          if (event.tags.some((tag) => usedTags.includes(tag))) {\n            fetchShareSecret(event.id, controller.signal)\n          }\n        }\n      },\n      error: setError,\n    })\n\n    fetchShareSecret(null, controller.signal).finally(() => setLoading(false))\n\n    return () => {\n      subscription.unsubscribe()\n      controller.abort()\n    }\n  }, [client])\n\n  return (\n    <MenuButton\n      button={\n        <Button\n          aria-label={t('preview-frame.share-button.aria-label')}\n          icon={ShareIcon}\n          mode=\"bleed\"\n          tooltipProps={null}\n        />\n      }\n      id=\"share-menu\"\n      menu={\n        <Menu style={{maxWidth: 248}} padding={canUseSharedPreviewAccess ? undefined : 0}>\n          {canUseSharedPreviewAccess ? (\n            <>\n              <label style={{cursor: 'pointer'}}>\n                <Grid\n                  columns={2}\n                  rows={2}\n                  gapX={3}\n                  gapY={1}\n                  style={{\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    gridTemplateColumns: 'min-content 1fr',\n                    gridTemplateRows: 'min-content',\n                  }}\n                  paddingTop={3}\n                  paddingX={3}\n                >\n                  <Tooltip\n                    animate\n                    content={\n                      <Text size={1}>\n                        {t('share-preview-menu.toggle-button.tooltip', {\n                          context: url ? 'disable' : 'enable',\n                        })}\n                      </Text>\n                    }\n                    fallbackPlacements={['bottom-start']}\n                    placement=\"bottom\"\n                    portal\n                  >\n                    <Switch\n                      checked={enabling || (url !== null && !disabling)}\n                      readOnly={enabling || disabling}\n                      indeterminate={loading}\n                      onChange={\n                        !canToggleSharePreviewAccess\n                          ? handleUnableToToggle\n                          : url\n                            ? handleDisableSharing\n                            : handleEnableSharing\n                      }\n                    />\n                  </Tooltip>\n                  <Text size={1} weight=\"medium\">\n                    {t('share-preview-menu.toggle-button.label', {context: 'first-line'})}\n                  </Text>\n                  <span />\n                  <Text muted size={1}>\n                    {t('share-preview-menu.toggle-button.label', {context: 'second-line'})}\n                  </Text>\n                </Grid>\n              </label>\n              <Box padding={3} paddingTop={2}>\n                <Stack space={3}>\n                  <Card\n                    tone={busy || !url ? 'transparent' : undefined}\n                    style={{\n                      position: 'relative',\n                      aspectRatio: '1 / 1',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                    }}\n                  >\n                    <AnimatePresence>\n                      {busy ? (\n                        <MotionSpinner\n                          muted\n                          initial={{opacity: 0}}\n                          animate={{opacity: 1}}\n                          exit={{opacity: 0}}\n                        />\n                      ) : url ? (\n                        <>\n                          <Suspense fallback={<Spinner />}>\n                            <QRCodeSVG\n                              title={t('share-preview-menu.qr-code.title', {url: url.toString()})}\n                              value={url.toString()}\n                              size={QrSize}\n                              color=\"var(--card-fg-color)\"\n                              logoSize={QrCodeLogoSize + QrCodeLogoPadding}\n                            />\n                            <MotionMonogram\n                              initial={{opacity: -0.5}}\n                              animate={{opacity: 1.5}}\n                              exit={{opacity: 0}}\n                            />\n                          </Suspense>\n                        </>\n                      ) : (\n                        <MotionText\n                          muted\n                          size={1}\n                          style={{maxWidth: '100px', textWrap: 'pretty', textAlign: 'center'}}\n                          initial={{opacity: 0}}\n                          animate={{opacity: 1}}\n                          exit={{opacity: 0}}\n                        >\n                          {t('share-preview-menu.qr-code.placeholder')}\n                        </MotionText>\n                      )}\n                    </AnimatePresence>\n                  </Card>\n                  <Text muted size={1}>\n                    {t('share-preview-menu.qr-code.instructions')}\n                  </Text>\n                </Stack>\n              </Box>\n              <MenuDivider />\n              <MenuItem\n                disabled={!url || disabling}\n                icon={CopyIcon}\n                onClick={handleCopyUrl}\n                text={t('share-preview-menu.copy-url.text')}\n              />\n            </>\n          ) : (\n            <Card padding={2} tone=\"caution\" radius={3}>\n              <Text style={{textWrap: 'pretty'}}>\n                {t('share-preview-menu.error', {context: 'missing-grants'})}\n              </Text>\n            </Card>\n          )}\n        </Menu>\n      }\n      popover={{\n        constrainSize: true,\n        placement: 'bottom',\n        portal: true,\n      }}\n    />\n  )\n})\nSharePreviewMenu.displayName = 'Memo(SharePreviewMenu)'\n","import {DesktopIcon, MobileDeviceIcon, PanelLeftIcon, RefreshIcon} from '@sanity/icons'\nimport {withoutSecretSearchParams} from '@sanity/preview-url-secret/without-secret-search-params'\nimport {Box, Card, Flex, Hotkeys, Switch, Text} from '@sanity/ui'\nimport {type ReactNode, type RefObject, useCallback, useMemo} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {Button, Tooltip} from '../../ui-components'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {ACTION_IFRAME_RELOAD} from '../reducers/presentationReducer'\nimport {type HeaderOptions} from '../types'\nimport {OpenPreviewButton} from './OpenPreviewButton'\nimport {type PreviewProps} from './Preview'\nimport {PreviewLocationInput} from './PreviewLocationInput'\nimport {SharePreviewMenu} from './SharePreviewMenu'\n\n/** @public */\nexport interface PreviewHeaderProps extends PreviewProps {\n  iframeRef: RefObject<HTMLIFrameElement | null>\n  renderDefault: (props: PreviewHeaderProps) => React.JSX.Element\n}\n\nconst PreviewHeaderDefault = (props: Omit<PreviewHeaderProps, 'renderDefault'>) => {\n  const {\n    canSharePreviewAccess,\n    canToggleSharePreviewAccess,\n    canUseSharedPreviewAccess,\n    dispatch,\n    iframe,\n    iframeRef,\n    initialUrl,\n    navigatorEnabled,\n    onPathChange,\n    onRefresh,\n    openPopup,\n    overlaysConnection,\n    perspective,\n    previewUrl,\n    setViewport,\n    targetOrigin,\n    toggleNavigator,\n    toggleOverlay,\n    viewport,\n    visualEditing: {overlaysEnabled},\n  } = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n\n  const toggleViewportSize = useCallback(\n    () => setViewport(viewport === 'desktop' ? 'mobile' : 'desktop'),\n    [setViewport, viewport],\n  )\n\n  const previewLocationOrigin = useMemo(() => {\n    return targetOrigin === location.origin ? '' : targetOrigin\n  }, [targetOrigin])\n\n  const handleRefresh = () => {\n    onRefresh(() => {\n      if (!iframeRef.current) {\n        return\n      }\n      dispatch({type: ACTION_IFRAME_RELOAD})\n      // Funky way to reload an iframe without CORS issues\n      // eslint-disable-next-line no-self-assign\n      // ref.current.src = ref.current.src\n      Object.assign(iframeRef.current, {src: `${targetOrigin}${previewUrl || '/'}`})\n    })\n  }\n\n  const previewLocationRoute = useMemo(() => {\n    const previewURL = new URL(previewUrl || '/', targetOrigin)\n    const {pathname, search} = withoutSecretSearchParams(previewURL)\n\n    return `${pathname}${search}`\n  }, [previewUrl, targetOrigin])\n\n  return (\n    <Flex align=\"center\" gap={1} paddingX={1} style={{width: '100%'}}>\n      {toggleNavigator && (\n        <Button\n          aria-label={t('preview-frame.navigator.toggle-button.aria-label')}\n          icon={PanelLeftIcon}\n          mode=\"bleed\"\n          onClick={toggleNavigator}\n          selected={navigatorEnabled}\n          tooltipProps={{\n            content: <Text size={1}>{t('preview-frame.navigator.toggle-button.tooltip')}</Text>,\n            fallbackPlacements: ['bottom-start'],\n            placement: 'bottom',\n          }}\n        />\n      )}\n\n      <Tooltip\n        animate\n        content={\n          <Flex align=\"center\" style={{whiteSpace: 'nowrap'}}>\n            <Box padding={1}>\n              <Text size={1}>\n                {t('preview-frame.overlay.toggle-button.tooltip', {\n                  context: overlaysEnabled ? 'disable' : 'enable',\n                })}\n              </Text>\n            </Box>\n            <Box paddingY={1}>\n              <Hotkeys keys={['Alt']} style={{marginTop: -4, marginBottom: -4}} />\n            </Box>\n          </Flex>\n        }\n        fallbackPlacements={['bottom-start']}\n        placement=\"bottom\"\n        portal\n      >\n        <Card\n          as=\"label\"\n          flex=\"none\"\n          padding={3}\n          marginX={1}\n          style={{\n            lineHeight: 0,\n            borderRadius: 999,\n            userSelect: 'none',\n          }}\n          tone={overlaysEnabled ? 'transparent' : undefined}\n        >\n          <Flex align=\"center\" gap={3}>\n            <div style={{margin: -4}}>\n              <Switch\n                checked={overlaysEnabled}\n                onChange={toggleOverlay}\n                disabled={iframe.status === 'loading' || overlaysConnection !== 'connected'}\n              />\n            </div>\n            <Box>\n              <Text muted={!overlaysEnabled} size={1} weight=\"medium\">\n                {t('preview-frame.overlay.toggle-button.text')}\n              </Text>\n            </Box>\n          </Flex>\n        </Card>\n      </Tooltip>\n\n      <Box flex={1}>\n        <PreviewLocationInput\n          prefix={\n            <Box padding={1}>\n              <Tooltip\n                animate\n                content={\n                  <Text size={1}>\n                    {iframe.status === 'loaded'\n                      ? t('preview-frame.refresh-button.tooltip')\n                      : t('preview-frame.status', {context: iframe.status})}\n                  </Text>\n                }\n                fallbackPlacements={['bottom-end']}\n                placement=\"bottom\"\n                portal\n              >\n                <Button\n                  aria-label={t('preview-frame.refresh-button.aria-label')}\n                  icon={RefreshIcon}\n                  mode=\"bleed\"\n                  loading={iframe.status === 'reloading' || iframe.status === 'refreshing'}\n                  onClick={handleRefresh}\n                  tooltipProps={null}\n                />\n              </Tooltip>\n            </Box>\n          }\n          onChange={onPathChange}\n          origin={previewLocationOrigin}\n          suffix={\n            <Box padding={1}>\n              <OpenPreviewButton\n                openPopup={openPopup}\n                previewLocationOrigin={previewLocationOrigin}\n                previewLocationRoute={previewLocationRoute}\n              />\n            </Box>\n          }\n          value={previewLocationRoute}\n        />\n      </Box>\n\n      <Flex align=\"center\" flex=\"none\" gap={1}>\n        <Tooltip\n          animate\n          content={\n            <Text size={1}>\n              {t('preview-frame.viewport-button.tooltip', {\n                context: viewport === 'desktop' ? 'narrow' : 'full',\n              })}\n            </Text>\n          }\n          fallbackPlacements={['bottom-start']}\n          placement=\"bottom\"\n          portal\n        >\n          <Button\n            aria-label={t('preview-frame.viewport-button.aria-label')}\n            icon={viewport === 'desktop' ? MobileDeviceIcon : DesktopIcon}\n            mode=\"bleed\"\n            onClick={toggleViewportSize}\n            tooltipProps={null}\n          />\n        </Tooltip>\n      </Flex>\n\n      {canSharePreviewAccess && (\n        <Flex align=\"center\" flex=\"none\" gap={1}>\n          <SharePreviewMenu\n            canToggleSharePreviewAccess={canToggleSharePreviewAccess}\n            canUseSharedPreviewAccess={canUseSharedPreviewAccess}\n            previewLocationRoute={previewLocationRoute}\n            initialUrl={initialUrl}\n            perspective={perspective}\n          />\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\nfunction PreviewHeader(\n  props: Omit<PreviewHeaderProps, 'renderDefault'> & {options?: HeaderOptions},\n) {\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  const renderDefault = useCallback((props: Omit<PreviewHeaderProps, 'renderDefault'>) => {\n    return <PreviewHeaderDefault {...props} />\n  }, [])\n\n  const HeaderComponent = props.options?.component\n  const header = HeaderComponent ? (\n    <HeaderComponent {...props} renderDefault={renderDefault} />\n  ) : (\n    renderDefault(props)\n  )\n\n  return (\n    <Card flex=\"none\" padding={2} borderBottom style={{position: 'relative'}}>\n      <Flex align=\"center\" style={{minHeight: 0}}>\n        {header}\n      </Flex>\n    </Card>\n  )\n}\n\n/** @internal */\nexport function usePresentationPreviewHeader(\n  props: Omit<PreviewHeaderProps, 'renderDefault'> & {options?: HeaderOptions},\n): () => ReactNode {\n  const Component = useCallback(() => {\n    return <PreviewHeader {...props} />\n  }, [props])\n\n  return Component\n}\n","/* eslint-disable react/no-unused-prop-types,no-nested-ternary */\nimport {\n  urlSearchParamPreviewPerspective,\n  urlSearchParamVercelProtectionBypass,\n  urlSearchParamVercelSetBypassCookie,\n  type VercelSetBypassCookieValue,\n} from '@sanity/preview-url-secret/constants'\nimport {Card, Code, Flex, Label, Spinner, Stack, Text, usePrefersReducedMotion} from '@sanity/ui'\nimport {AnimatePresence, motion, MotionConfig} from 'framer-motion'\nimport {\n  forwardRef,\n  memo,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n  useSyncExternalStore,\n} from 'react'\nimport {flushSync} from 'react-dom'\nimport {useTranslation} from 'sanity'\n\nimport {Button, TooltipDelayGroupProvider} from '../../ui-components'\nimport {ErrorCard} from '../components/ErrorCard'\nimport {MAX_TIME_TO_OVERLAYS_CONNECTION} from '../constants'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {\n  ACTION_IFRAME_LOADED,\n  ACTION_IFRAME_RELOAD,\n  type DispatchPresentationAction,\n  type PresentationState,\n} from '../reducers/presentationReducer'\nimport {\n  type ConnectionStatus,\n  type HeaderOptions,\n  type PresentationPerspective,\n  type PresentationViewport,\n} from '../types'\nimport {usePresentationTool} from '../usePresentationTool'\nimport {encodeStudioPerspective} from '../util/encodeStudioPerspective'\nimport {IFrame} from './IFrame'\nimport {usePresentationPreviewHeader} from './PreviewHeader'\n\nconst MotionFlex = motion.create(Flex)\n\n/** @public */\nexport interface PreviewProps extends Pick<PresentationState, 'iframe' | 'visualEditing'> {\n  canSharePreviewAccess: boolean\n  canToggleSharePreviewAccess: boolean\n  canUseSharedPreviewAccess: boolean\n  dispatch: DispatchPresentationAction\n  header?: HeaderOptions\n  initialUrl: URL\n  loadersConnection: ConnectionStatus\n  navigatorEnabled: boolean\n  onPathChange: (nextPath: string) => void\n  onRefresh: (fallback: () => void) => void\n  openPopup: (url: string) => void\n  overlaysConnection: ConnectionStatus\n  perspective: PresentationPerspective\n  previewUrl?: string\n  setViewport: (mode: 'desktop' | 'mobile') => void\n  targetOrigin: string\n  toggleNavigator?: () => void\n  toggleOverlay: () => void\n  viewport: PresentationViewport\n  vercelProtectionBypass: string | null\n}\n\nexport const Preview = memo(\n  forwardRef<HTMLIFrameElement, PreviewProps>(function PreviewComponent(props, forwardedRef) {\n    const {\n      dispatch,\n      iframe,\n      header,\n      initialUrl,\n      loadersConnection,\n      overlaysConnection,\n      perspective,\n      viewport,\n      vercelProtectionBypass,\n    } = props\n\n    const [stablePerspective, setStablePerspective] = useState<typeof perspective | null>(null)\n    const urlPerspective = encodeStudioPerspective(\n      stablePerspective === null ? perspective : stablePerspective,\n    )\n    const previewUrl = useMemo(() => {\n      const url = new URL(initialUrl)\n      // Always set the perspective that's being used, even if preview mode isn't configured\n      if (!url.searchParams.get(urlSearchParamPreviewPerspective)) {\n        url.searchParams.set(urlSearchParamPreviewPerspective, urlPerspective)\n      }\n\n      if (vercelProtectionBypass || url.searchParams.get(urlSearchParamVercelProtectionBypass)) {\n        // samesitenone is required since the request is from an iframe\n        url.searchParams.set(\n          urlSearchParamVercelSetBypassCookie,\n          'samesitenone' satisfies VercelSetBypassCookieValue,\n        )\n      }\n      // If there's a vercel protection bypass secret in the context, set it if none exists already\n      if (vercelProtectionBypass && !url.searchParams.get(urlSearchParamVercelProtectionBypass)) {\n        url.searchParams.set(urlSearchParamVercelProtectionBypass, vercelProtectionBypass)\n      }\n\n      return url\n    }, [initialUrl, urlPerspective, vercelProtectionBypass])\n\n    useEffect(() => {\n      /**\n       * If the preview iframe is connected to the loader, we know that switching the perspective can be done without reloading the iframe.\n       */\n      if (loadersConnection === 'connected') {\n        /**\n         * Only set the stable perspective if it hasn't been set yet.\n         */\n        setStablePerspective((prev) => (prev === null ? perspective : prev))\n      }\n    }, [loadersConnection, perspective])\n\n    const {t} = useTranslation(presentationLocaleNamespace)\n    const {devMode} = usePresentationTool()\n    const prefersReducedMotion = usePrefersReducedMotion()\n    const ref = useRef<HTMLIFrameElement | null>(null)\n\n    const PreviewHeader = usePresentationPreviewHeader({\n      ...props,\n      iframeRef: ref,\n      options: header,\n    })\n\n    // Forward the iframe ref to the parent component\n    useImperativeHandle<HTMLIFrameElement | null, HTMLIFrameElement | null>(\n      forwardedRef,\n      () => ref.current,\n    )\n\n    const loading = iframe.status === 'loading' || iframe.status === 'reloading'\n    const [timedOut, setTimedOut] = useState(false)\n    const refreshing = iframe.status === 'refreshing'\n    const [somethingIsWrong, setSomethingIsWrong] = useState(false)\n    const iframeIsBusy = loading || refreshing || overlaysConnection === 'connecting'\n\n    const handleRetry = useCallback(() => {\n      if (!ref.current) {\n        return\n      }\n\n      ref.current.src = previewUrl.toString()\n\n      dispatch({type: ACTION_IFRAME_RELOAD})\n    }, [dispatch, previewUrl])\n    const handleContinueAnyway = useCallback(() => {\n      setContinueAnyway(true)\n    }, [])\n\n    const [continueAnyway, setContinueAnyway] = useState(false)\n    const [showOverlaysConnectionStatus, setShowOverlaysConnectionState] = useState(false)\n    useEffect(() => {\n      if (loading || refreshing) {\n        return undefined\n      }\n\n      if (overlaysConnection === 'connecting' || overlaysConnection === 'reconnecting') {\n        const timeout = setTimeout(() => {\n          setShowOverlaysConnectionState(true)\n        }, 5_000)\n        return () => clearTimeout(timeout)\n      }\n      return undefined\n    }, [overlaysConnection, loading, refreshing])\n\n    useEffect(() => {\n      if (loading || refreshing || !showOverlaysConnectionStatus) {\n        return undefined\n      }\n      if (overlaysConnection === 'connected') {\n        setSomethingIsWrong(false)\n        setShowOverlaysConnectionState(false)\n        setTimedOut(false)\n        setContinueAnyway(false)\n      }\n      if (overlaysConnection === 'connecting') {\n        const timeout = setTimeout(() => {\n          setTimedOut(true)\n          // eslint-disable-next-line no-console\n          console.error(\n            `Unable to connect to visual editing. Make sure you've setup '@sanity/visual-editing' correctly`,\n          )\n        }, MAX_TIME_TO_OVERLAYS_CONNECTION)\n        return () => clearTimeout(timeout)\n      }\n      if (overlaysConnection === 'reconnecting') {\n        const timeout = setTimeout(() => {\n          setTimedOut(true)\n          setSomethingIsWrong(true)\n        }, MAX_TIME_TO_OVERLAYS_CONNECTION)\n        return () => clearTimeout(timeout)\n      }\n      return undefined\n    }, [loading, overlaysConnection, refreshing, showOverlaysConnectionStatus])\n\n    const onIFrameLoad = useCallback(() => {\n      dispatch({type: ACTION_IFRAME_LOADED})\n    }, [dispatch])\n\n    /**\n     * Ensure that clicking outside of menus and dialogs will close as focus shifts to the iframe\n     */\n    useEffect(() => {\n      if (!ref.current) {\n        return undefined\n      }\n      const instance = ref.current\n      function handleBlur() {\n        if (instance !== document.activeElement) {\n          return\n        }\n\n        instance.dispatchEvent(new MouseEvent('mousedown', {bubbles: true, cancelable: true}))\n      }\n      window.addEventListener('blur', handleBlur)\n      return () => {\n        window.removeEventListener('blur', handleBlur)\n      }\n    }, [])\n\n    const preventIframeInteraction = useMemo(() => {\n      return (\n        (loading || (overlaysConnection === 'connecting' && iframe.status !== 'refreshing')) &&\n        !continueAnyway\n      )\n    }, [continueAnyway, iframe.status, loading, overlaysConnection])\n\n    const canUseViewTransition = useSyncExternalStore(\n      // eslint-disable-next-line no-empty-function\n      useCallback(() => () => {}, []),\n      () => CSS.supports(`(view-transition-name: test)`),\n    )\n    const iframeAnimations = useMemo(() => {\n      return [\n        preventIframeInteraction ? 'background' : 'active',\n        loading ? 'reloading' : 'idle',\n        // If CSS View Transitions are supported, then transition iframe viewport dimensions with that instead of Motion\n        canUseViewTransition ? '' : viewport,\n        showOverlaysConnectionStatus && !continueAnyway ? 'timedOut' : '',\n      ]\n    }, [\n      canUseViewTransition,\n      continueAnyway,\n      loading,\n      preventIframeInteraction,\n      showOverlaysConnectionStatus,\n      viewport,\n    ])\n\n    const [currentViewport, setCurrentViewport] = useState(viewport)\n    const [iframeStyle, setIframeStyle] = useState(iframeVariants[viewport])\n    useEffect(() => {\n      if (canUseViewTransition && viewport !== currentViewport) {\n        const update = () => {\n          setCurrentViewport(viewport)\n          setIframeStyle(iframeVariants[viewport])\n        }\n        if (\n          !prefersReducedMotion &&\n          'startViewTransition' in document &&\n          typeof document.startViewTransition === 'function'\n        ) {\n          document.startViewTransition(() => flushSync(() => update()))\n        } else {\n          update()\n        }\n      }\n    }, [canUseViewTransition, prefersReducedMotion, currentViewport, viewport])\n\n    return (\n      <MotionConfig transition={prefersReducedMotion ? {duration: 0} : undefined}>\n        <TooltipDelayGroupProvider>\n          <PreviewHeader />\n\n          {/* @TODO: Move this to <PreviewFrame /> */}\n          <Card flex={1} tone=\"transparent\">\n            <Flex\n              align=\"center\"\n              height=\"fill\"\n              justify=\"center\"\n              padding={(canUseViewTransition ? currentViewport : viewport) === 'desktop' ? 0 : 2}\n              sizing=\"border\"\n              style={{\n                position: 'relative',\n                cursor: iframeIsBusy ? 'wait' : undefined,\n              }}\n            >\n              <AnimatePresence>\n                {!somethingIsWrong &&\n                !loading &&\n                !refreshing &&\n                // viewport, // using CSS View Transitions instead of framer motion to drive this\n                showOverlaysConnectionStatus &&\n                !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={spinnerVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      inset: '0',\n                      position: 'absolute',\n                      backdropFilter: timedOut\n                        ? 'blur(16px) saturate(0.5) grayscale(0.5)'\n                        : 'blur(2px)',\n                      ['transition' as string]: 'backdrop-filter 0.2s ease-in-out',\n                      // @TODO Because of Safari we have to do this\n                      WebkitBackdropFilter: timedOut\n                        ? 'blur(16px) saturate(0.5) grayscale(0.5)'\n                        : 'blur(2px)',\n                      WebkitTransition: '-webkit-backdrop-filter 0.2s ease-in-out',\n                      zIndex: 1,\n                    }}\n                  >\n                    <Flex\n                      style={{...sizes[viewport]}}\n                      justify=\"center\"\n                      align=\"center\"\n                      direction=\"column\"\n                      gap={4}\n                    >\n                      {timedOut && (\n                        <Button\n                          disabled\n                          mode=\"ghost\"\n                          text={t('preview-frame.continue-button.text')}\n                          style={{opacity: 0}}\n                        />\n                      )}\n                      <Card\n                        radius={2}\n                        tone={timedOut ? 'caution' : 'inherit'}\n                        padding={4}\n                        shadow={1}\n                      >\n                        <Flex justify=\"center\" align=\"center\" direction=\"column\" gap={4}>\n                          <Spinner muted />\n                          <Text muted size={1}>\n                            {timedOut\n                              ? t('preview-frame.status', {context: 'timeout'})\n                              : t('preview-frame.status', {context: 'connecting'})}\n                          </Text>\n                        </Flex>\n                      </Card>\n                      {timedOut && (\n                        <Button\n                          // mode=\"ghost\"\n                          tone=\"critical\"\n                          onClick={handleContinueAnyway}\n                          text={t('preview-frame.continue-button.text')}\n                        />\n                      )}\n                    </Flex>\n                  </MotionFlex>\n                ) : (loading ||\n                    (overlaysConnection === 'connecting' && iframe.status !== 'refreshing')) &&\n                  !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={spinnerVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      inset: '0',\n                      position: 'absolute',\n                      // boxShadow: '0 0 0 1px var(--card-shadow-outline-color)',\n                    }}\n                  >\n                    <Flex\n                      style={{...sizes[viewport]}}\n                      justify=\"center\"\n                      align=\"center\"\n                      direction=\"column\"\n                      gap={4}\n                    >\n                      <Spinner muted />\n                      <Text muted size={1}>\n                        {t('preview-frame.status', {context: 'loading'})}\n                      </Text>\n                    </Flex>\n                  </MotionFlex>\n                ) : somethingIsWrong && !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={errorVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      background: 'var(--card-bg-color)',\n                      inset: '0',\n                      position: 'absolute',\n                    }}\n                  >\n                    <ErrorCard\n                      flex={1}\n                      message={t('preview-frame.connection.error.text')}\n                      onRetry={handleRetry}\n                      onContinueAnyway={handleContinueAnyway}\n                    >\n                      {devMode && (\n                        <>\n                          {overlaysConnection !== 'connected' && (\n                            <Card padding={3} radius={2} tone=\"critical\">\n                              <Stack space={3}>\n                                <Label muted size={0}>\n                                  {t('preview-frame.overlay.connection-status.label')}\n                                </Label>\n                                <Code size={1}>\n                                  {t('channel.status', {context: overlaysConnection})}\n                                </Code>\n                              </Stack>\n                            </Card>\n                          )}\n\n                          {loadersConnection !== 'connected' && (\n                            <Card padding={3} radius={2} tone=\"critical\">\n                              <Stack space={3}>\n                                <Label muted size={0}>\n                                  {t('preview-frame.loader.connection-status.label')}\n                                </Label>\n                                <Code size={1}>\n                                  {t('channel.status', {context: loadersConnection})}\n                                </Code>\n                              </Stack>\n                            </Card>\n                          )}\n                        </>\n                      )}\n                    </ErrorCard>\n                  </MotionFlex>\n                ) : null}\n              </AnimatePresence>\n              <IFrame\n                animate={iframeAnimations}\n                initial={['background']}\n                onLoad={onIFrameLoad}\n                preventClick={preventIframeInteraction}\n                ref={ref}\n                src={previewUrl.toString()}\n                style={iframeStyle}\n                variants={iframeVariants}\n              />\n            </Flex>\n          </Card>\n        </TooltipDelayGroupProvider>\n      </MotionConfig>\n    )\n  }),\n)\nPreview.displayName = 'Memo(ForwardRef(Preview))'\n\nconst sizes = {\n  desktop: {\n    width: '100%',\n    height: '100%',\n  },\n  mobile: {\n    width: 375,\n    height: 650,\n  },\n}\n\nconst spinnerVariants = {\n  initial: {opacity: 1},\n  animate: {opacity: [0, 0, 1]},\n  exit: {opacity: [1, 0, 0]},\n}\n\nconst errorVariants = {\n  initial: {opacity: 1},\n  animate: {opacity: [0, 0, 1]},\n  exit: {opacity: [1, 0, 0]},\n}\n\nconst iframeVariants = {\n  desktop: {\n    ...sizes.desktop,\n    boxShadow: '0 0 0 0px var(--card-border-color)',\n  },\n  mobile: {\n    ...sizes.mobile,\n    boxShadow: '0 0 0 1px var(--card-border-color)',\n  },\n  background: {\n    opacity: 0,\n    scale: 1,\n  },\n  idle: {\n    scale: 1,\n  },\n  reloading: {\n    scale: [1, 1, 1, 0.98],\n  },\n  active: {\n    opacity: [0, 0, 1],\n    scale: 1,\n  },\n  timedOut: {\n    opacity: [0, 0, 1],\n  },\n}\n","/** @internal */\nexport function defineWarnOnce() {\n  let warned = false\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return (...args: any[]): void => {\n    if (!warned) {\n      // eslint-disable-next-line no-console\n      console.warn(...args)\n      warned = true\n    }\n  }\n}\n","import {validateApiPerspective} from '@sanity/client'\nimport isEqual from 'fast-deep-equal'\nimport {type MutableRefObject, useCallback, useMemo, useRef, useState} from 'react'\n\nimport {type FrameState, type PresentationPerspective} from './types'\nimport {defineWarnOnce} from './util/warnOnce'\n\nexport type DocumentOnPage = {\n  _id: string\n  _type: string\n}\n\ntype DocumentCache = Record<string, DocumentOnPage>\ntype KeyedDocumentCache = Record<string, DocumentCache>\n\nconst warnOnceAboutCrossDatasetReference = defineWarnOnce()\n\n/**\n * @TODO should be refactored to an lru-cache that is keyed by the perspective, which could be an array (if it is, it should use consistent sorting),\n *       and the url path (optionally the origin too), so that swapping between perspectives and urls is fast.\n */\nexport function useDocumentsOnPage(\n  perspective: PresentationPerspective,\n  frameStateRef: MutableRefObject<FrameState>,\n): [\n  DocumentOnPage[],\n  (key: string, perspective: PresentationPerspective, state: DocumentOnPage[]) => void,\n] {\n  validateApiPerspective(perspective)\n\n  const [published, setPublished] = useState<KeyedDocumentCache>({})\n  const [previewDrafts, setPreviewDrafts] = useState<KeyedDocumentCache>({})\n\n  // Used to compare the frame url with its value when the cache was last updated\n  // If the url has changed, the entire cache is replaced\n  const urlRef = useRef<string | undefined>('')\n\n  const setDocumentsOnPage = useCallback(\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    (key: string, perspective: PresentationPerspective, sourceDocuments: DocumentOnPage[] = []) => {\n      const documents = sourceDocuments.filter((sourceDocument) => {\n        if ('_projectId' in sourceDocument && sourceDocument._projectId) {\n          // eslint-disable-next-line no-warning-comments\n          // @TODO Handle cross dataset references\n\n          warnOnceAboutCrossDatasetReference(\n            'Cross dataset references are not supported yet, ignoring source document',\n            sourceDocument,\n          )\n          return false\n        }\n        return sourceDocument\n      })\n\n      const setCache = perspective === 'published' ? setPublished : setPreviewDrafts\n\n      setCache((cache) => {\n        // Create the `next` documents, dedupe by `_id`\n        const next: Record<string, DocumentOnPage> = {}\n        for (const document of documents) {\n          next[document._id] = document\n        }\n\n        // If the frame url has changed, replace the entire cache with the next documents\n        if (urlRef.current !== frameStateRef.current.url) {\n          urlRef.current = frameStateRef.current.url\n          return {[key]: next}\n        }\n\n        // If the keyed cache has changed, return the entire cache and replace the keyed part\n        const prev = cache[key]\n        if (!isEqual(prev, next)) {\n          return {...cache, [key]: next}\n        }\n\n        // Otherwise return the entire cache as is\n        return cache\n      })\n    },\n    [frameStateRef],\n  )\n\n  const documentsOnPage = useMemo(() => {\n    const keyedCache = perspective === 'published' ? published : previewDrafts\n    const uniqueDocuments = Object.values(keyedCache).reduce((acc, cache) => {\n      Object.values(cache).forEach((doc) => {\n        acc[doc._id] = doc\n      })\n      return acc\n    }, {})\n\n    return Object.values(uniqueDocuments)\n  }, [perspective, previewDrafts, published])\n\n  return [documentsOnPage, setDocumentsOnPage]\n}\n","import {type ResponseQueryOptions} from '@sanity/client'\nimport {match, type Path} from 'path-to-regexp'\nimport {useEffect, useRef, useState} from 'react'\nimport {useClient} from 'sanity'\nimport {type RouterState, useRouter} from 'sanity/router'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {API_VERSION} from './constants'\nimport {\n  type DocumentResolver,\n  type DocumentResolverContext,\n  type MainDocument,\n  type MainDocumentState,\n  type PresentationNavigate,\n  type PreviewUrlOption,\n} from './types'\n\n// Helper function to \"unwrap\" a result when it is either explicitly provided or\n// returned as the result of a passed function\nfunction fnOrObj<T, U>(arg: T | ((ctx: U) => T), context: U): T {\n  return arg instanceof Function ? arg(context) : arg\n}\n\nfunction getQueryFromResult(\n  resolver: DocumentResolver,\n  context: DocumentResolverContext,\n): string | undefined {\n  if (resolver.resolve) {\n    const filter = resolver.resolve(context)?.filter\n    return filter\n      ? `// groq\n*[${filter}][0]{_id, _type}`\n      : undefined\n  }\n\n  if ('type' in resolver) {\n    return `// groq\n*[_type == \"${resolver.type}\"][0]{_id, _type}`\n  }\n\n  return `// groq\n*[${fnOrObj(resolver.filter, context)}][0]{_id, _type}`\n}\n\nfunction getParamsFromResult(\n  resolver: DocumentResolver,\n  context: DocumentResolverContext,\n): Record<string, string> {\n  if (resolver.resolve) {\n    return resolver.resolve(context)?.params ?? context.params\n  }\n\n  if ('type' in resolver) {\n    return {}\n  }\n\n  return fnOrObj(resolver.params, context) ?? context.params\n}\n\nexport function getRouteContext(route: Path, url: URL): DocumentResolverContext | undefined {\n  const routes = Array.isArray(route) ? route : [route]\n\n  for (route of routes) {\n    let origin: DocumentResolverContext['origin'] = undefined\n    let path = route\n\n    // Handle absolute URLs\n    if (typeof route === 'string') {\n      try {\n        const absolute = new URL(route)\n        origin = absolute.origin\n        path = absolute.pathname\n      } catch {\n        // Ignore, as we assume a relative path\n      }\n    }\n\n    // If an origin has been explicitly provided, check that it matches\n    if (origin && url.origin !== origin) continue\n\n    try {\n      const matcher = match<Record<string, string>>(path, {decode: decodeURIComponent})\n      const result = matcher(url.pathname)\n      if (result) {\n        // eslint-disable-next-line @typescript-eslint/no-shadow\n        const {params, path} = result\n        return {origin, params, path}\n      }\n    } catch (e) {\n      throw new Error(`\"${route}\" is not a valid route pattern`)\n    }\n  }\n  return undefined\n}\n\nexport function useMainDocument(props: {\n  navigate?: PresentationNavigate\n  navigationHistory: RouterState[]\n  path?: string\n  previewUrl?: PreviewUrlOption\n  resolvers?: DocumentResolver[]\n}): MainDocumentState | undefined {\n  const {navigate, navigationHistory, path, previewUrl, resolvers = []} = props\n  const {state: routerState} = useRouter()\n  const client = useClient({apiVersion: API_VERSION})\n  const relativeUrl =\n    path || routerState._searchParams?.find(([key]) => key === 'preview')?.[1] || ''\n\n  const [mainDocumentState, setMainDocumentState] = useState<MainDocumentState | undefined>(\n    undefined,\n  )\n  const mainDocumentIdRef = useRef<string | undefined>(undefined)\n\n  const handleResponse = useEffectEvent((doc: MainDocument | undefined, url: URL) => {\n    if (!doc || mainDocumentIdRef.current !== doc._id) {\n      setMainDocumentState({\n        document: doc,\n        path: url.pathname,\n      })\n      mainDocumentIdRef.current = doc?._id\n\n      // We only want to force a navigation to the main document if\n      // the path changed but the document ID did not. An explicit\n      // document navigation should take precedence over displaying\n      // the main document. We determine if an explicit document\n      // navigation has occured by comparing the IDs of the last two\n      // resultant navigation states.\n      if (navigationHistory.at(-1)?.id === navigationHistory.at(-2)?.id) {\n        navigate?.({\n          id: doc?._id,\n          type: doc?._type,\n        })\n      }\n    }\n  })\n\n  useEffect(() => {\n    const base =\n      // eslint-disable-next-line no-nested-ternary\n      typeof previewUrl === 'string'\n        ? previewUrl\n        : typeof previewUrl === 'object'\n          ? previewUrl?.origin || location.origin\n          : location.origin\n    const url = new URL(relativeUrl, base)\n\n    if (resolvers.length) {\n      let result:\n        | {\n            context: DocumentResolverContext\n            resolver: DocumentResolver\n          }\n        | undefined\n\n      for (const resolver of resolvers) {\n        const context = getRouteContext(resolver.route, url)\n        if (context) {\n          result = {context, resolver}\n          break\n        }\n      }\n\n      if (result) {\n        const query = getQueryFromResult(result.resolver, result.context)\n        const params = getParamsFromResult(result.resolver, result.context)\n\n        if (query) {\n          const controller = new AbortController()\n          const options: ResponseQueryOptions = {\n            perspective: 'previewDrafts',\n            signal: controller.signal,\n          }\n\n          client\n            .fetch<MainDocument | undefined>(query, params, options)\n            .then((doc) => handleResponse(doc, url))\n            .catch((e) => {\n              if (e instanceof Error && e.name === 'AbortError') return\n              setMainDocumentState({document: undefined, path: url.pathname})\n              mainDocumentIdRef.current = undefined\n            })\n          return () => {\n            controller.abort()\n          }\n        }\n      }\n    }\n    setMainDocumentState(undefined)\n    mainDocumentIdRef.current = undefined\n    return undefined\n  }, [client, handleResponse, previewUrl, relativeUrl, resolvers])\n\n  return mainDocumentState\n}\n","import { getPublishedId, studioPath } from \"@sanity/client/csm\";\nimport { pipe, string, minLength, optional, object, is, record, unknown, safeParse, parse } from \"valibot\";\nconst lengthyStr$1 = pipe(string(), minLength(1)), optionalLengthyStr = optional(lengthyStr$1), sanityNodeSchema = object({\n  baseUrl: lengthyStr$1,\n  dataset: optionalLengthyStr,\n  id: lengthyStr$1,\n  path: lengthyStr$1,\n  projectId: optionalLengthyStr,\n  tool: optionalLengthyStr,\n  type: optionalLengthyStr,\n  workspace: optionalLengthyStr\n});\nfunction isValidSanityNode(node) {\n  return is(sanityNodeSchema, node);\n}\nfunction isArray(value) {\n  return value !== null && Array.isArray(value);\n}\nfunction pathToUrlString(path) {\n  let str = \"\";\n  for (const segment of path) {\n    if (typeof segment == \"string\") {\n      str && (str += \".\"), str += segment;\n      continue;\n    }\n    if (typeof segment == \"number\") {\n      str && (str += \":\"), str += `${segment}`;\n      continue;\n    }\n    if (isArray(segment)) {\n      str && (str += \":\"), str += `${segment.join(\",\")}}`;\n      continue;\n    }\n    if (segment._key) {\n      str && (str += \":\"), str += `${segment._key}`;\n      continue;\n    }\n  }\n  return str;\n}\nfunction encodeSanityNodeData(node) {\n  const { id: _id, path, baseUrl, tool, workspace, type } = node;\n  return isValidSanityNode(node) ? [\n    [\"id\", getPublishedId(_id)],\n    [\"type\", type],\n    [\"path\", pathToUrlString(studioPath.fromString(path))],\n    [\"base\", encodeURIComponent(baseUrl)],\n    [\"workspace\", workspace],\n    [\"tool\", tool]\n  ].filter(([, value]) => !!value).map((part) => part.join(\"=\")).join(\";\") : void 0;\n}\nfunction createDataAttribute(props) {\n  function normalizePath(path) {\n    return path ? typeof path == \"string\" ? studioPath.fromString(path) : path : [];\n  }\n  function toString(props2) {\n    if (!props2.id) throw new Error(\"`id` is required to create a data attribute\");\n    if (!props2.type) throw new Error(\"`type` is required to create a data attribute\");\n    if (!props2.path || !props2.path.length)\n      throw new Error(\"`path` is required to create a data attribute\");\n    const attrs = {\n      baseUrl: props2.baseUrl || \"/\",\n      workspace: props2.workspace,\n      tool: props2.tool,\n      type: props2.type,\n      id: props2.id,\n      path: typeof props2.path == \"string\" ? props2.path : studioPath.toString(props2.path)\n    };\n    return encodeSanityNodeData(attrs);\n  }\n  const DataAttribute = (path) => toString({\n    ...props,\n    path: [...normalizePath(props.path), ...normalizePath(path)]\n  });\n  return DataAttribute.toString = function() {\n    return toString(props);\n  }, DataAttribute.combine = function(attrs) {\n    return createDataAttribute({\n      ...props,\n      ...attrs\n    });\n  }, DataAttribute.scope = function(path) {\n    return createDataAttribute({\n      ...props,\n      path: [...normalizePath(props.path), ...normalizePath(path)]\n    });\n  }, DataAttribute;\n}\nconst RE_SEGMENT_WITH_INDEX = /^([\\w-]+):(0|[1-9][0-9]*)$/, RE_SEGMENT_WITH_TUPLE = /^([\\w-]+):([0-9]+),([0-9]+)$/, RE_SEGMENT_WITH_KEY = /^([\\w-]+):([\\w-]+)$/;\nfunction urlStringToPath(str) {\n  const path = [];\n  for (const segment of str.split(\".\")) {\n    const withIndex = RE_SEGMENT_WITH_INDEX.exec(segment);\n    if (withIndex) {\n      path.push(withIndex[1], Number(withIndex[2]));\n      continue;\n    }\n    const withTuple = RE_SEGMENT_WITH_TUPLE.exec(segment);\n    if (withTuple) {\n      path.push(withTuple[1], [Number(withTuple[2]), Number(withTuple[3])]);\n      continue;\n    }\n    const withKey = RE_SEGMENT_WITH_KEY.exec(segment);\n    if (withKey) {\n      path.push(withKey[1], { _key: withKey[2] });\n      continue;\n    }\n    path.push(segment);\n  }\n  return path;\n}\nconst lengthyStr = pipe(string(), minLength(1)), sanityLegacyNodeSchema = object({\n  origin: lengthyStr,\n  href: lengthyStr,\n  data: optional(record(string(), unknown()))\n});\nfunction decodeSanityString(str) {\n  const data = str.split(\";\").reduce((acc, segment) => {\n    const [key, value] = segment.split(\"=\");\n    if (!key || segment.includes(\"=\") && !value) return acc;\n    switch (key) {\n      case \"id\":\n        acc.id = value;\n        break;\n      case \"type\":\n        acc.type = value;\n        break;\n      case \"path\":\n        acc.path = studioPath.toString(urlStringToPath(value));\n        break;\n      case \"base\":\n        acc.baseUrl = decodeURIComponent(value);\n        break;\n      case \"tool\":\n        acc.tool = value;\n        break;\n      case \"workspace\":\n        acc.workspace = value;\n        break;\n      case \"projectId\":\n        acc.projectId = value;\n        break;\n      case \"dataset\":\n        acc.dataset = value;\n        break;\n    }\n    return acc;\n  }, {});\n  if (isValidSanityNode(data))\n    return data;\n}\nfunction decodeSanityObject(data) {\n  const sanityNode = safeParse(sanityNodeSchema, data);\n  if (sanityNode.success)\n    return sanityNode.output;\n  const sanityLegacyNode = safeParse(sanityLegacyNodeSchema, data);\n  if (sanityLegacyNode.success)\n    try {\n      const url = new URL(\n        sanityLegacyNode.output.href,\n        typeof document > \"u\" ? \"https://example.com\" : location.origin\n      );\n      return url.searchParams.size > 0 ? parse(sanityNodeSchema, Object.fromEntries(url.searchParams.entries())) : sanityLegacyNode.output;\n    } catch (err) {\n      return console.error(\"Failed to parse sanity node\", err), sanityLegacyNode.output;\n    }\n}\nfunction decodeSanityNodeData(data) {\n  if (typeof data == \"object\" && data !== null)\n    return decodeSanityObject(data);\n  try {\n    const obj = JSON.parse(data);\n    return decodeSanityObject(obj);\n  } catch {\n    return decodeSanityString(data);\n  }\n}\nexport {\n  createDataAttribute,\n  decodeSanityNodeData,\n  encodeSanityNodeData,\n  pathToUrlString,\n  urlStringToPath\n};\n//# sourceMappingURL=index.js.map\n","import {studioPath} from '@sanity/client/csm'\nimport {urlStringToPath} from '@sanity/visual-editing-csm'\nimport type {PresentationStateParams} from '../types'\n\nexport function parseId(rawId: string | undefined): string | undefined {\n  if (rawId === undefined) {\n    return undefined\n  }\n\n  const segments = decodeURIComponent(rawId)?.split('.')\n\n  if (segments[0] === 'drafts') {\n    segments.shift()\n  }\n\n  return segments.join('.')\n}\n\nexport function parsePath(rawPath: string | undefined): string | undefined {\n  if (rawPath === undefined) {\n    return undefined\n  }\n\n  return studioPath.toString(urlStringToPath(decodeURIComponent(rawPath)))\n}\n\nexport function parseRouterState(state: PresentationStateParams): PresentationStateParams {\n  return {\n    id: parseId(state.id),\n    path: parsePath(state.path),\n    type: state.type,\n  }\n}\n","/* eslint-disable @typescript-eslint/no-shadow */\nimport {type MutableRefObject, useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {getPublishedId} from 'sanity'\nimport {type RouterContextValue, type RouterState, type SearchParam} from 'sanity/router'\n\nimport {parseRouterState} from './lib/parse'\nimport {\n  type CombinedSearchParams,\n  type FrameState,\n  type PresentationNavigate,\n  type PresentationParamsContextValue,\n  type PresentationSearchParams,\n  type PresentationStateParams,\n  type StructureDocumentPaneParams,\n} from './types'\n\nfunction pruneObject<T extends RouterState | PresentationParamsContextValue>(obj: T): T {\n  return Object.fromEntries(\n    Object.entries(obj).filter(\n      ([, value]) => value !== undefined && value !== '' && value !== null,\n    ),\n  ) as T\n}\n\nexport function useParams({\n  initialPreviewUrl,\n  routerNavigate,\n  routerState,\n  routerSearchParams,\n  frameStateRef,\n}: {\n  initialPreviewUrl: URL\n  routerNavigate: RouterContextValue['navigate']\n  routerState: RouterState & PresentationStateParams\n  routerSearchParams: {\n    [k: string]: string\n  }\n  frameStateRef: MutableRefObject<FrameState>\n}): {\n  navigate: PresentationNavigate\n  navigationHistory: RouterState[]\n  params: PresentationParamsContextValue\n  searchParams: PresentationSearchParams\n  structureParams: StructureDocumentPaneParams\n} {\n  const params = useMemo<PresentationParamsContextValue>(() => {\n    const {id, path, type} = parseRouterState(routerState)\n\n    return {\n      id,\n      type,\n      path,\n      preview:\n        routerSearchParams.preview || `${initialPreviewUrl.pathname}${initialPreviewUrl.search}`,\n      perspective: routerSearchParams.perspective,\n      viewport: routerSearchParams.viewport,\n      inspect: routerSearchParams.inspect,\n      rev: routerSearchParams.rev,\n      since: routerSearchParams.since,\n      template: routerSearchParams.template,\n      templateParams: routerSearchParams.templateParams,\n      view: routerSearchParams.view,\n      // assist\n      pathKey: routerSearchParams.pathKey,\n      instruction: routerSearchParams.instruction,\n      // comments\n      comment: routerSearchParams.comment,\n      changesInspectorTab: routerSearchParams.changesInspectorTab as 'history' | 'review',\n    }\n  }, [routerState, routerSearchParams, initialPreviewUrl])\n\n  const structureParams = useMemo<StructureDocumentPaneParams>(() => {\n    const pruned = pruneObject({\n      inspect: params.inspect,\n      path: params.path,\n      rev: params.rev,\n      since: params.since,\n      template: params.template,\n      templateParams: params.templateParams,\n      view: params.view,\n      // assist\n      pathKey: params.pathKey,\n      instruction: params.instruction,\n      // comments\n      comment: params.comment,\n      changesInspectorTab: params.changesInspectorTab,\n    })\n    return pruned\n  }, [\n    params.changesInspectorTab,\n    params.comment,\n    params.inspect,\n    params.instruction,\n    params.path,\n    params.pathKey,\n    params.rev,\n    params.since,\n    params.template,\n    params.templateParams,\n    params.view,\n  ])\n\n  const searchParams = useMemo<PresentationSearchParams>(() => {\n    const pruned = pruneObject({\n      perspective: params.perspective,\n      preview: params.preview,\n      viewport: params.viewport,\n    })\n    return pruned\n  }, [params.perspective, params.preview, params.viewport])\n\n  const routerStateRef = useRef(routerState)\n\n  useEffect(() => {\n    routerStateRef.current = routerState\n  }, [routerState])\n\n  const [navigationHistory, setNavigationHistory] = useState<RouterState[]>([routerState])\n\n  const navigate = useCallback<PresentationNavigate>(\n    (nextState, nextSearchState = {}, forceReplace) => {\n      // Force navigation to use published IDs only\n      if (nextState.id) nextState.id = getPublishedId(nextState.id)\n\n      // Extract type, id and path as 'routerState'\n      const {_searchParams: routerSearchParams, ...routerState} = routerStateRef.current\n\n      // Convert array of search params to an object\n      const routerSearchState = (routerSearchParams || []).reduce((acc, [key, value]) => {\n        acc[key as keyof CombinedSearchParams] = value as undefined | 'history' | 'review'\n        return acc\n      }, {} as CombinedSearchParams)\n\n      // Merge routerState and incoming state\n      const state: RouterState = pruneObject({\n        ...routerState,\n        ...nextState,\n      })\n\n      // Merge routerSearchState and incoming searchState\n      const searchState = pruneObject({\n        ...routerSearchState,\n        ...nextSearchState,\n      })\n\n      // If the document has changed, clear the template and templateParams\n      if (routerState.id !== state.id) {\n        delete searchState.template\n        delete searchState.templateParams\n      }\n\n      state._searchParams = Object.entries(searchState).reduce(\n        (acc, [key, value]) => [...acc, [key, value] as SearchParam],\n        [] as SearchParam[],\n      )\n\n      const replace = forceReplace ?? searchState.preview === frameStateRef.current.url\n\n      setNavigationHistory((prev) => [...prev, state])\n      routerNavigate(state, {replace})\n    },\n    [routerNavigate, frameStateRef],\n  )\n\n  return {\n    navigate,\n    navigationHistory,\n    params,\n    searchParams,\n    structureParams,\n  }\n}\n","import {type Controller} from '@sanity/comlink'\nimport {useCallback, useEffect, useState} from 'react'\n\nimport {POPUP_CHECK_INTERVAL} from './constants'\n\n/**\n * A hook for managing popup Window contexts\n *\n * This hook handles:\n * - Opening new popup Windows, and adding them as targets to the controller\n * - Tracking existing popup windows, and cleaning up closed popups\n *\n * @param controller - Comlink controller instance that manages communication\n * between Window contexts\n *\n * @returns An object containing:\n * - popups: A Set of currently open popup Window objects\n * - open: Function to open a new popup Window with the specified URL\n *\n */\nexport const usePopups = (\n  controller?: Controller,\n): {\n  popups: Set<Window>\n  open: (url: string) => void\n} => {\n  // State to keep track of open popup windows\n  const [popups, setPopups] = useState<Set<Window>>(() => new Set())\n\n  // Function to open a new popup window\n  const open = useCallback((url: string) => {\n    const source = window.open(url, '_blank')\n    if (source) {\n      setPopups((prev) => new Set(prev).add(source))\n    }\n  }, [])\n\n  // Handles syncing the existing popups with the controller\n  useEffect(() => {\n    const unsubs: Array<() => void> = []\n    if (popups.size && controller) {\n      // loop popups and add targets\n      for (const source of popups) {\n        if (source && 'closed' in source && !source.closed) {\n          unsubs.push(controller.addTarget(source))\n        }\n      }\n    }\n    return () => {\n      unsubs.forEach((unsub) => unsub())\n    }\n  }, [controller, popups])\n\n  // Checks for closed popups and removes them from the tracked Set\n  useEffect(() => {\n    if (popups.size) {\n      const interval = setInterval(() => {\n        const closed = new Set<Window>()\n        for (const source of popups) {\n          if (source && 'closed' in source && source.closed) {\n            closed.add(source)\n          }\n        }\n        if (closed.size) {\n          setPopups((prev) => {\n            const next = new Set(prev)\n            for (const source of closed) {\n              next.delete(source)\n            }\n            return next\n          })\n        }\n      }, POPUP_CHECK_INTERVAL)\n\n      return () => {\n        clearInterval(interval)\n      }\n    }\n    return undefined\n  }, [popups])\n\n  return {popups, open}\n}\n","import {createPreviewSecret} from '@sanity/preview-url-secret/create-secret'\nimport {definePreviewUrl} from '@sanity/preview-url-secret/define-preview-url'\nimport {startTransition, useEffect, useMemo, useRef, useState} from 'react'\nimport {type SanityClient, useActiveWorkspace, useClient, useCurrentUser} from 'sanity'\nimport {suspend} from 'suspend-react'\n\nimport {API_VERSION} from './constants'\nimport {type PresentationPerspective, type PreviewUrlOption} from './types'\nimport {encodeStudioPerspective} from './util/encodeStudioPerspective'\n\nexport function usePreviewUrl(\n  previewUrl: PreviewUrlOption,\n  toolName: string,\n  studioPreviewPerspective: PresentationPerspective,\n  previewSearchParam: string | null,\n  canCreateUrlPreviewSecrets: boolean,\n): URL {\n  const client = useClient({apiVersion: API_VERSION})\n  const workspace = useActiveWorkspace()\n  const basePath = workspace?.activeWorkspace?.basePath || '/'\n  const workspaceName = workspace?.activeWorkspace?.name || 'default'\n  const deps = useSuspendCacheKeys(toolName, basePath, workspaceName, previewSearchParam)\n  const previewUrlSecret = usePreviewUrlSecret(\n    (canCreateUrlPreviewSecrets && typeof previewUrl === 'object') ||\n      typeof previewUrl === 'function',\n    deps,\n  )\n\n  return suspend(async () => {\n    if (typeof previewUrl === 'string') {\n      const resolvedUrl = new URL(previewUrl, location.origin)\n      let resultUrl = resolvedUrl\n      try {\n        if (previewSearchParam) {\n          const restoredUrl = new URL(previewSearchParam, resolvedUrl)\n          if (restoredUrl.origin === resolvedUrl.origin) {\n            resultUrl = restoredUrl\n          }\n        }\n      } catch {\n        // ignore\n      }\n      // Prevent infinite recursion\n      if (\n        location.origin === resultUrl.origin &&\n        (resultUrl.pathname.startsWith(`${basePath}/`) || resultUrl.pathname === basePath)\n      ) {\n        return resolvedUrl\n      }\n      return resultUrl\n    }\n    const resolvePreviewUrl =\n      typeof previewUrl === 'object' ? definePreviewUrl<SanityClient>(previewUrl) : previewUrl\n    const resolvedUrl = await resolvePreviewUrl({\n      client,\n      previewUrlSecret: previewUrlSecret!,\n      studioPreviewPerspective: encodeStudioPerspective(studioPreviewPerspective),\n      previewSearchParam,\n      studioBasePath: basePath,\n    })\n    return new URL(resolvedUrl, location.origin)\n  }, [...deps, previewUrlSecret]) satisfies URL\n}\n\n// https://github.com/pmndrs/suspend-react?tab=readme-ov-file#making-cache-keys-unique\nconst resolveUUID = Symbol('sanity/presentation/resolveUUID')\n\nfunction useSuspendCacheKeys(\n  toolName: string,\n  basePath: string,\n  workspaceName: string,\n  previewSearchParam: string | null,\n) {\n  // Allow busting the cache when the Presentation Tool is reloaded, without causing it to suspend on every render that changes the `preview` parameter\n  const [cachedPreviewSearchParam, setCachedPreviewSearchParam] = useState(\n    () => previewSearchParam || '',\n  )\n  const timeoutRef = useRef(0)\n  useEffect(() => {\n    if (cachedPreviewSearchParam && previewSearchParam) {\n      // Handle resets, like when the Presentation Tool is clicked in the navbar\n      window.clearTimeout(timeoutRef.current)\n      return () => {\n        timeoutRef.current = window.setTimeout(() => {\n          setCachedPreviewSearchParam('')\n        }, 100)\n      }\n    }\n    return undefined\n  }, [cachedPreviewSearchParam, previewSearchParam])\n\n  const currentUser = useCurrentUser()\n  return useMemo(\n    () => [\n      // Cache based on a few specific conditions\n      'sanity/presentation',\n      basePath,\n      workspaceName,\n      toolName,\n      currentUser?.id,\n      resolveUUID,\n      cachedPreviewSearchParam,\n    ],\n    [basePath, currentUser?.id, toolName, workspaceName, cachedPreviewSearchParam],\n  )\n}\n\nfunction usePreviewUrlSecret(enabled: boolean, deps: (string | symbol | undefined)[]) {\n  const client = useClient({apiVersion: API_VERSION})\n  const currentUser = useCurrentUser()\n  const [secretLastExpiredAt, setSecretLastExpiredAt] = useState<string>('')\n\n  const previewUrlSecret = enabled\n    ? suspend(async () => {\n        return await createPreviewSecret(\n          client,\n          '@sanity/presentation',\n          typeof window === 'undefined' ? '' : location.href,\n          currentUser?.id,\n        )\n      }, [...deps, secretLastExpiredAt])\n    : null\n\n  useEffect(() => {\n    if (!previewUrlSecret) return undefined\n    const timeout = setTimeout(() => {\n      startTransition(() => setSecretLastExpiredAt(previewUrlSecret.expiresAt.toString()))\n    }, previewUrlSecret.expiresAt.getTime() - Date.now())\n    return () => clearTimeout(timeout)\n  }, [previewUrlSecret])\n\n  return previewUrlSecret?.secret || null\n}\n","import {type StatusEvent} from '@sanity/comlink'\nimport {useCallback, useMemo, useState} from 'react'\n\nimport {type ConnectionStatus} from './types'\n\n/**\n * A hook that manages and returns the connection status of multiple channels\n *\n * returns an array containing the\n * current status and a function to update the status based on incoming events\n *\n * The status can be one of the following:\n * - 'connected': If any channel is connected\n * - 'connecting': If the first connection is being established\n * - 'reconnecting': If a reconnection is in progress\n * - 'idle': If no connections have been made yet\n *\n * The function to update the status takes a `StatusEvent` object which includes\n * the channel and the status\n */\nexport function useStatus(): [ConnectionStatus, (event: StatusEvent) => void] {\n  // State to keep track of the status of each channel\n  const [statusMap, setStatusMap] = useState(\n    new Map<string, {status: ConnectionStatus; hasConnected: boolean}>(),\n  )\n\n  // Memoized computation of the overall status based on the status of individual channels\n  const memoStatus = useMemo(() => {\n    const values = Array.from(statusMap.values())\n    // If any channel is connected, return the `connected` status\n    if (values.find(({status}) => status === 'connected')) {\n      return 'connected'\n    }\n    // If the initial connection is being established, return `connecting` status\n    const handshaking = values.filter(({status}) => status === 'connecting')\n    if (handshaking.length) {\n      return handshaking.some(({hasConnected}) => !hasConnected) ? 'connecting' : 'reconnecting'\n    }\n    // If nothing has happened yet, return `idle` status\n    return 'idle'\n  }, [statusMap])\n\n  // Callback to update the status map based on the received event\n  const setStatusFromEvent = useCallback((event: StatusEvent) => {\n    setStatusMap((prev) => {\n      const next = new Map(prev)\n      if (event.status === 'disconnected') {\n        // Remove the channel from the map if a disconnect event is received\n        next.delete(event.connection)\n      } else {\n        // Update the status and connection flag for the channel\n        const hasConnected =\n          next.get(event.connection)?.hasConnected || event.status === 'connected'\n        const status = event.status === 'handshaking' ? 'connecting' : event.status\n        next.set(event.connection, {status, hasConnected})\n      }\n      return next\n    })\n  }, [])\n\n  // Return the overall status and the function to update the status\n  return [memoStatus, setStatusFromEvent]\n}\n","/* eslint-disable max-statements,@typescript-eslint/no-shadow */\nimport {studioPath} from '@sanity/client/csm'\nimport {\n  type Controller,\n  createConnectionMachine,\n  createController,\n  type Message,\n} from '@sanity/comlink'\nimport {\n  createCompatibilityActors,\n  type PreviewKitNodeMsg,\n  type VisualEditingControllerMsg,\n  type VisualEditingNodeMsg,\n} from '@sanity/presentation-comlink'\nimport {\n  urlSearchParamVercelProtectionBypass,\n  urlSearchParamVercelSetBypassCookie,\n} from '@sanity/preview-url-secret/constants'\nimport {BoundaryElementProvider, Flex} from '@sanity/ui'\nimport {lazy, Suspense, useCallback, useEffect, useMemo, useReducer, useRef, useState} from 'react'\nimport {\n  type CommentIntentGetter,\n  COMMENTS_INSPECTOR_NAME,\n  type Path,\n  type SanityDocument,\n  type Tool,\n  useDataset,\n  usePerspective,\n  useProjectId,\n  useUnique,\n  useWorkspace,\n} from 'sanity'\nimport {type RouterContextValue, useRouter} from 'sanity/router'\nimport {styled} from 'styled-components'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {DEFAULT_TOOL_NAME, EDIT_INTENT_MODE} from './constants'\nimport PostMessageFeatures from './features/PostMessageFeatures'\nimport {debounce} from './lib/debounce'\nimport {SharedStateProvider} from './overlays/SharedStateProvider'\nimport {Panel} from './panels/Panel'\nimport {Panels} from './panels/Panels'\nimport {PresentationContent} from './PresentationContent'\nimport {PresentationNavigateProvider} from './PresentationNavigateProvider'\nimport {usePresentationNavigator} from './PresentationNavigator'\nimport {PresentationParamsProvider} from './PresentationParamsProvider'\nimport {PresentationProvider} from './PresentationProvider'\nimport {Preview} from './preview/Preview'\nimport {\n  ACTION_IFRAME_LOADED,\n  ACTION_IFRAME_REFRESH,\n  ACTION_VISUAL_EDITING_OVERLAYS_TOGGLE,\n  presentationReducer,\n  presentationReducerInit,\n} from './reducers/presentationReducer'\nimport {\n  type FrameState,\n  type PresentationNavigate,\n  type PresentationPerspective,\n  type PresentationPluginOptions,\n  type PresentationStateParams,\n  type PresentationViewport,\n  type StructureDocumentPaneParams,\n  type VisualEditingConnection,\n} from './types'\nimport {useDocumentsOnPage} from './useDocumentsOnPage'\nimport {useMainDocument} from './useMainDocument'\nimport {useParams} from './useParams'\nimport {usePopups} from './usePopups'\nimport {usePreviewUrl} from './usePreviewUrl'\nimport {useStatus} from './useStatus'\n\nconst LiveQueries = lazy(() => import('./loader/LiveQueries'))\nconst PostMessageDocuments = lazy(() => import('./overlays/PostMessageDocuments'))\nconst PostMessageRefreshMutations = lazy(() => import('./editor/PostMessageRefreshMutations'))\nconst PostMessagePerspective = lazy(() => import('./PostMessagePerspective'))\nconst PostMessagePreviewSnapshots = lazy(() => import('./editor/PostMessagePreviewSnapshots'))\nconst PostMessageSchema = lazy(() => import('./overlays/schema/PostMessageSchema'))\nconst PostMessageTelemetry = lazy(() => import('./PostMessageTelemetry'))\n\nconst Container = styled(Flex)`\n  overflow-x: auto;\n`\n\nexport default function PresentationTool(props: {\n  tool: Tool<PresentationPluginOptions>\n  canCreateUrlPreviewSecrets: boolean\n  canToggleSharePreviewAccess: boolean\n  canUseSharedPreviewAccess: boolean\n  vercelProtectionBypass: string | null\n}): React.JSX.Element {\n  const {\n    canCreateUrlPreviewSecrets,\n    canToggleSharePreviewAccess,\n    canUseSharedPreviewAccess,\n    tool,\n    vercelProtectionBypass,\n  } = props\n  const components = tool.options?.components\n  const _previewUrl = tool.options?.previewUrl\n  const name = tool.name || DEFAULT_TOOL_NAME\n  const {unstable_navigator, unstable_header} = components || {}\n\n  const {navigate: routerNavigate, state: routerState} = useRouter() as RouterContextValue & {\n    state: PresentationStateParams\n  }\n  const routerSearchParams = useUnique(Object.fromEntries(routerState._searchParams || []))\n  const {\n    perspectiveStack,\n    selectedPerspectiveName = 'previewDrafts',\n    selectedReleaseId,\n  } = usePerspective()\n  const perspective = (\n    selectedReleaseId ? perspectiveStack : selectedPerspectiveName\n  ) as PresentationPerspective\n\n  const initialPreviewUrl = usePreviewUrl(\n    _previewUrl || '/',\n    name,\n    perspective,\n    routerSearchParams.preview || null,\n    canCreateUrlPreviewSecrets,\n  )\n  const canSharePreviewAccess = useMemo<boolean>(() => {\n    if (\n      _previewUrl &&\n      typeof _previewUrl === 'object' &&\n      'draftMode' in _previewUrl &&\n      _previewUrl.draftMode\n    ) {\n      // eslint-disable-next-line no-console\n      console.warn('previewUrl.draftMode is deprecated, use previewUrl.previewMode instead')\n      return _previewUrl.draftMode.shareAccess !== false\n    }\n    if (\n      _previewUrl &&\n      typeof _previewUrl === 'object' &&\n      'previewMode' in _previewUrl &&\n      _previewUrl.previewMode\n    ) {\n      return _previewUrl.previewMode.shareAccess !== false\n    }\n    return false\n  }, [_previewUrl])\n\n  const [devMode] = useState(() => {\n    const option = tool.options?.devMode\n\n    if (typeof option === 'function') return option()\n    if (typeof option === 'boolean') return option\n\n    return typeof window !== 'undefined' && window.location.hostname === 'localhost'\n  })\n\n  const targetOrigin = useMemo(() => {\n    return initialPreviewUrl.origin\n  }, [initialPreviewUrl.origin])\n\n  const iframeRef = useRef<HTMLIFrameElement>(null)\n\n  const [controller, setController] = useState<Controller>()\n  const [visualEditingComlink, setVisualEditingComlink] = useState<VisualEditingConnection | null>(\n    null,\n  )\n\n  const frameStateRef = useRef<FrameState>({\n    title: undefined,\n    url: undefined,\n  })\n\n  const {\n    navigate: _navigate,\n    navigationHistory,\n    params,\n    searchParams,\n    structureParams,\n  } = useParams({\n    initialPreviewUrl,\n    routerNavigate,\n    routerState,\n    routerSearchParams,\n    frameStateRef,\n  })\n\n  // Most navigation events should be debounced, so use this unless explicitly needed\n  const navigate = useMemo(() => debounce<PresentationNavigate>(_navigate, 50), [_navigate])\n\n  const [state, dispatch] = useReducer(presentationReducer, {}, presentationReducerInit)\n\n  const viewport = useMemo(() => (params.viewport ? 'mobile' : 'desktop'), [params.viewport])\n\n  const [documentsOnPage, setDocumentsOnPage] = useDocumentsOnPage(perspective, frameStateRef)\n\n  const projectId = useProjectId()\n  const dataset = useDataset()\n\n  const mainDocumentState = useMainDocument({\n    // Prevent flash of content by using immediate navigation\n    navigate: _navigate,\n    navigationHistory,\n    path: params.preview,\n    previewUrl: tool.options?.previewUrl,\n    resolvers: tool.options?.resolve?.mainDocuments,\n  })\n\n  const [overlaysConnection, setOverlaysConnection] = useStatus()\n  const [loadersConnection, setLoadersConnection] = useStatus()\n  const [previewKitConnection, setPreviewKitConnection] = useStatus()\n\n  const {open: handleOpenPopup} = usePopups(controller)\n\n  const isLoading = state.iframe.status === 'loading'\n\n  useEffect(() => {\n    const target = iframeRef.current?.contentWindow\n\n    if (!target || isLoading) return undefined\n\n    const controller = createController({targetOrigin})\n    controller.addTarget(target)\n    setController(controller)\n\n    return () => {\n      controller.destroy()\n      setController(undefined)\n    }\n  }, [targetOrigin, isLoading])\n\n  const handleNavigate = useEffectEvent<typeof navigate>(\n    (nextState, nextSearchState, forceReplace) =>\n      navigate(nextState, nextSearchState, forceReplace),\n  )\n  useEffect(() => {\n    if (!controller) return undefined\n\n    const comlink = controller.createChannel<VisualEditingControllerMsg, VisualEditingNodeMsg>(\n      {\n        name: 'presentation',\n        heartbeat: true,\n        connectTo: 'visual-editing',\n      },\n      createConnectionMachine<VisualEditingControllerMsg, VisualEditingNodeMsg>().provide({\n        actors: createCompatibilityActors<VisualEditingControllerMsg>(),\n      }),\n    )\n\n    comlink.on('visual-editing/focus', (data) => {\n      if (!('id' in data)) return\n      handleNavigate({\n        type: data.type,\n        id: data.id,\n        path: data.path,\n      })\n    })\n\n    comlink.on('visual-editing/navigate', (data) => {\n      const {title, url} = data\n      if (frameStateRef.current.url !== url) {\n        try {\n          // Handle bypass params being forwarded to the final URL\n          const [urlWithoutSearch, search] = url.split('?')\n          const searchParams = new URLSearchParams(search)\n          searchParams.delete(urlSearchParamVercelProtectionBypass)\n          searchParams.delete(urlSearchParamVercelSetBypassCookie)\n          handleNavigate(\n            {},\n            {preview: `${urlWithoutSearch}${searchParams.size > 0 ? '?' : ''}${searchParams}`},\n          )\n        } catch {\n          handleNavigate({}, {preview: url})\n        }\n      }\n      frameStateRef.current = {title, url}\n    })\n\n    comlink.on('visual-editing/meta', (data) => {\n      frameStateRef.current.title = data.title\n    })\n\n    comlink.on('visual-editing/toggle', (data) => {\n      dispatch({\n        type: ACTION_VISUAL_EDITING_OVERLAYS_TOGGLE,\n        enabled: data.enabled,\n      })\n    })\n\n    comlink.on('visual-editing/documents', (data) => {\n      setDocumentsOnPage(\n        'visual-editing',\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        data.perspective as unknown as any,\n        data.documents,\n      )\n    })\n\n    // @todo This won't work for multiple window contexts?\n    comlink.on('visual-editing/refreshing', (data) => {\n      if (data.source === 'manual') {\n        clearTimeout(refreshRef.current)\n      } else if (data.source === 'mutation') {\n        dispatch({type: ACTION_IFRAME_REFRESH})\n      }\n    })\n\n    comlink.on('visual-editing/refreshed', () => {\n      dispatch({type: ACTION_IFRAME_LOADED})\n    })\n\n    comlink.onStatus(setOverlaysConnection)\n\n    const stop = comlink.start()\n    setVisualEditingComlink(comlink)\n    return () => {\n      stop()\n      setVisualEditingComlink(null)\n    }\n  }, [controller, handleNavigate, setDocumentsOnPage, setOverlaysConnection, targetOrigin])\n\n  useEffect(() => {\n    if (!controller) return undefined\n    const comlink = controller.createChannel<Message, PreviewKitNodeMsg>(\n      {\n        name: 'presentation',\n        connectTo: 'preview-kit',\n        heartbeat: true,\n      },\n      createConnectionMachine<Message, PreviewKitNodeMsg>().provide({\n        actors: createCompatibilityActors(),\n      }),\n    )\n\n    comlink.onStatus(setPreviewKitConnection)\n\n    comlink.on('preview-kit/documents', (data) => {\n      if (data.projectId === projectId && data.dataset === dataset) {\n        setDocumentsOnPage(\n          'preview-kit',\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          data.perspective as unknown as any,\n          data.documents,\n        )\n      }\n    })\n\n    return comlink.start()\n  }, [controller, dataset, projectId, setDocumentsOnPage, setPreviewKitConnection, targetOrigin])\n\n  const handleFocusPath = useCallback(\n    (nextPath: Path) => {\n      // Don’t need to explicitly set the id here because it was either already set via postMessage or is the same if navigating in the document pane\n      navigate({path: studioPath.toString(nextPath)}, {}, true)\n    },\n    [navigate],\n  )\n\n  const handlePreviewPath = useCallback(\n    (nextPath: string) => {\n      const url = new URL(nextPath, initialPreviewUrl.origin)\n      const preview = url.pathname + url.search\n      if (url.origin === initialPreviewUrl.origin && preview !== params.preview) {\n        navigate({}, {preview})\n      }\n    },\n    [initialPreviewUrl, params, navigate],\n  )\n\n  const handleStructureParams = useCallback(\n    (structureParams: StructureDocumentPaneParams) => {\n      navigate({}, structureParams)\n    },\n    [navigate],\n  )\n\n  // Dispatch a focus or blur message when the id or path change\n  useEffect(() => {\n    if (params.id && params.path) {\n      visualEditingComlink?.post('presentation/focus', {id: params.id, path: params.path})\n    } else {\n      visualEditingComlink?.post('presentation/blur')\n    }\n  }, [params.id, params.path, visualEditingComlink])\n\n  // Dispatch a navigation message when the preview param changes\n  useEffect(() => {\n    if (\n      frameStateRef.current.url &&\n      params.preview &&\n      frameStateRef.current.url !== params.preview\n    ) {\n      frameStateRef.current.url = params.preview\n      if (overlaysConnection !== 'connected' && iframeRef.current) {\n        iframeRef.current.src = `${targetOrigin}${params.preview}`\n      } else {\n        visualEditingComlink?.post('presentation/navigate', {\n          url: params.preview,\n          type: 'replace',\n        })\n      }\n    }\n  }, [overlaysConnection, targetOrigin, params.preview, visualEditingComlink])\n\n  const toggleOverlay = useCallback(\n    () => visualEditingComlink?.post('presentation/toggle-overlay'),\n    [visualEditingComlink],\n  )\n\n  const [displayedDocument, setDisplayedDocument] = useState<\n    Partial<SanityDocument> | null | undefined\n  >(null)\n\n  useEffect(() => {\n    const handleKeyUp = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        toggleOverlay()\n      }\n    }\n    const handleKeydown = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        toggleOverlay()\n      }\n\n      if (isHotkey(['mod', '\\\\'], e)) {\n        toggleOverlay()\n      }\n    }\n    window.addEventListener('keydown', handleKeydown)\n    window.addEventListener('keyup', handleKeyUp)\n    return () => {\n      window.removeEventListener('keydown', handleKeydown)\n      window.removeEventListener('keyup', handleKeyUp)\n    }\n  }, [toggleOverlay])\n\n  const [boundaryElement, setBoundaryElement] = useState<HTMLDivElement | null>(null)\n\n  const [{navigatorEnabled, toggleNavigator}, PresentationNavigator] = usePresentationNavigator({\n    unstable_navigator,\n  })\n\n  const refreshRef = useRef<number>(undefined)\n  const handleRefresh = useCallback(\n    (fallback: () => void) => {\n      dispatch({type: ACTION_IFRAME_REFRESH})\n      if (visualEditingComlink) {\n        // We only wait 300ms for the iframe to ack the refresh request before running the fallback logic\n        refreshRef.current = window.setTimeout(fallback, 300)\n        visualEditingComlink.post('presentation/refresh', {\n          source: 'manual',\n          livePreviewEnabled:\n            previewKitConnection === 'connected' || loadersConnection === 'connected',\n        })\n        return\n      }\n      fallback()\n    },\n    [loadersConnection, previewKitConnection, visualEditingComlink],\n  )\n\n  const workspace = useWorkspace()\n\n  const getCommentIntent = useCallback<CommentIntentGetter>(\n    ({id, type, path}) => {\n      if (frameStateRef.current.url) {\n        return {\n          title: frameStateRef.current.title || frameStateRef.current.url,\n          name: 'edit',\n          params: {\n            id,\n            path,\n            type,\n            inspect: COMMENTS_INSPECTOR_NAME,\n            workspace: workspace.name,\n            mode: EDIT_INTENT_MODE,\n            preview: params.preview,\n          },\n        }\n      }\n      return undefined\n    },\n    [params.preview, workspace.name],\n  )\n\n  const setViewport = useCallback(\n    (next: PresentationViewport) => {\n      // Omit the viewport URL search param if the next viewport state is the\n      // default: 'desktop'\n      const viewport = next === 'desktop' ? undefined : 'mobile'\n      navigate({}, {viewport}, true)\n    },\n    [navigate],\n  )\n\n  return (\n    <>\n      <PresentationProvider\n        devMode={devMode}\n        name={name}\n        navigate={navigate}\n        params={params}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      >\n        <PresentationNavigateProvider navigate={navigate}>\n          <PresentationParamsProvider params={params}>\n            <SharedStateProvider comlink={visualEditingComlink}>\n              <Container height=\"fill\">\n                <Panels>\n                  <PresentationNavigator />\n                  <Panel\n                    id=\"preview\"\n                    minWidth={325}\n                    defaultSize={navigatorEnabled ? 50 : 75}\n                    order={3}\n                  >\n                    <Flex direction=\"column\" flex={1} height=\"fill\" ref={setBoundaryElement}>\n                      <BoundaryElementProvider element={boundaryElement}>\n                        <Preview\n                          // Make sure the iframe is unmounted if the targetOrigin has changed\n                          key={targetOrigin}\n                          canSharePreviewAccess={canSharePreviewAccess}\n                          canToggleSharePreviewAccess={canToggleSharePreviewAccess}\n                          canUseSharedPreviewAccess={canUseSharedPreviewAccess}\n                          dispatch={dispatch}\n                          header={unstable_header}\n                          iframe={state.iframe}\n                          initialUrl={initialPreviewUrl}\n                          loadersConnection={loadersConnection}\n                          navigatorEnabled={navigatorEnabled}\n                          onPathChange={handlePreviewPath}\n                          onRefresh={handleRefresh}\n                          openPopup={handleOpenPopup}\n                          overlaysConnection={overlaysConnection}\n                          previewUrl={params.preview}\n                          perspective={perspective}\n                          ref={iframeRef}\n                          setViewport={setViewport}\n                          targetOrigin={targetOrigin}\n                          toggleNavigator={toggleNavigator}\n                          toggleOverlay={toggleOverlay}\n                          viewport={viewport}\n                          visualEditing={state.visualEditing}\n                          vercelProtectionBypass={vercelProtectionBypass}\n                        />\n                      </BoundaryElementProvider>\n                    </Flex>\n                  </Panel>\n                  <PresentationContent\n                    documentId={params.id}\n                    documentsOnPage={documentsOnPage}\n                    documentType={params.type}\n                    getCommentIntent={getCommentIntent}\n                    mainDocumentState={mainDocumentState}\n                    onFocusPath={handleFocusPath}\n                    onStructureParams={handleStructureParams}\n                    searchParams={searchParams}\n                    setDisplayedDocument={setDisplayedDocument}\n                    structureParams={structureParams}\n                  />\n                </Panels>\n              </Container>\n            </SharedStateProvider>\n          </PresentationParamsProvider>\n        </PresentationNavigateProvider>\n      </PresentationProvider>\n      <Suspense>\n        {controller && (\n          <LiveQueries\n            controller={controller}\n            perspective={perspective}\n            liveDocument={displayedDocument}\n            onDocumentsOnPage={setDocumentsOnPage}\n            onLoadersConnection={setLoadersConnection}\n          />\n        )}\n        {visualEditingComlink && params.id && params.type && (\n          <PostMessageRefreshMutations\n            comlink={visualEditingComlink}\n            id={params.id}\n            type={params.type}\n            loadersConnection={loadersConnection}\n            previewKitConnection={previewKitConnection}\n          />\n        )}\n        {visualEditingComlink && (\n          <PostMessageSchema comlink={visualEditingComlink} perspective={perspective} />\n        )}\n        {visualEditingComlink && documentsOnPage.length > 0 && (\n          <PostMessagePreviewSnapshots\n            comlink={visualEditingComlink}\n            perspective={perspective}\n            refs={documentsOnPage}\n          />\n        )}\n        {visualEditingComlink && (\n          <PostMessageDocuments comlink={visualEditingComlink} perspective={perspective} />\n        )}\n        {visualEditingComlink && <PostMessageFeatures comlink={visualEditingComlink} />}\n        {visualEditingComlink && (\n          <PostMessagePerspective comlink={visualEditingComlink} perspective={perspective} />\n        )}\n        {visualEditingComlink && <PostMessageTelemetry comlink={visualEditingComlink} />}\n      </Suspense>\n    </>\n  )\n}\n\nfunction isAltKey(event: KeyboardEvent): boolean {\n  return event.key === 'Alt'\n}\n\nconst IS_MAC =\n  typeof window != 'undefined' && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform)\nconst MODIFIERS: Record<string, 'altKey' | 'ctrlKey' | 'metaKey' | 'shiftKey'> = {\n  alt: 'altKey',\n  ctrl: 'ctrlKey',\n  mod: IS_MAC ? 'metaKey' : 'ctrlKey',\n  shift: 'shiftKey',\n}\nfunction isHotkey(keys: string[], event: KeyboardEvent): boolean {\n  return keys.every((key) => {\n    if (MODIFIERS[key]) {\n      return event[MODIFIERS[key]]\n    }\n    return event.key === key.toUpperCase()\n  })\n}\n","import {subcribeToVercelProtectionBypass} from '@sanity/preview-url-secret/toggle-vercel-protection-bypass'\nimport {useEffect, useReducer, useState} from 'react'\nimport {useClient} from 'sanity'\n\nimport {API_VERSION} from './constants'\n\ntype VercelProtectionBypassReadyState = 'loading' | 'ready'\n\nexport function useVercelBypassSecret(): [\n  vercelProtectionBypassSecret: string | null,\n  vercelProtectionBypassReadyState: VercelProtectionBypassReadyState,\n] {\n  const client = useClient({apiVersion: API_VERSION})\n  const [vercelProtectionBypassReadyState, ready] = useReducer(\n    () => 'ready' as 'ready' | 'loading',\n    'loading',\n  )\n  const [vercelProtectionBypassSecret, setVercelProtectionBypassSecret] = useState<string | null>(\n    null,\n  )\n\n  useEffect(() => {\n    const unsubscribe = subcribeToVercelProtectionBypass(client, (secret) => {\n      setVercelProtectionBypassSecret(secret)\n      ready()\n    })\n    return () => unsubscribe()\n  }, [client])\n\n  return [vercelProtectionBypassSecret, vercelProtectionBypassReadyState]\n}\n","import {\n  schemaIdSingleton,\n  schemaType,\n  schemaTypeSingleton,\n} from '@sanity/preview-url-secret/constants'\nimport {useToast} from '@sanity/ui'\nimport {uuid} from '@sanity/uuid'\nimport {useEffect, useState} from 'react'\nimport {type PermissionCheckResult, type Tool, useGrantsStore, useTranslation} from 'sanity'\n\nimport {presentationLocaleNamespace} from './i18n'\nimport {PresentationSpinner} from './PresentationSpinner'\nimport PresentationTool from './PresentationTool'\nimport {type PresentationPluginOptions} from './types'\nimport {useVercelBypassSecret} from './useVercelBypassSecret'\n\nexport default function PresentationToolGrantsCheck(props: {\n  tool: Tool<PresentationPluginOptions>\n}): React.JSX.Element {\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {previewUrl} = props.tool.options ?? {}\n  const {push: pushToast} = useToast()\n  const willGeneratePreviewUrlSecret =\n    typeof previewUrl === 'object' || typeof previewUrl === 'function'\n  const grantsStore = useGrantsStore()\n  const [previewAccessSharingCreatePermission, setCreateAccessSharingPermission] =\n    useState<PermissionCheckResult | null>(null)\n  const [previewAccessSharingUpdatePermission, setUpdateAccessSharingPermission] =\n    useState<PermissionCheckResult | null>(null)\n  const [previewAccessSharingReadPermission, setReadAccessSharingPermission] =\n    useState<PermissionCheckResult | null>(null)\n  const [previewUrlSecretPermission, setPreviewUrlSecretPermission] =\n    useState<PermissionCheckResult | null>(null)\n\n  useEffect(() => {\n    if (!willGeneratePreviewUrlSecret) return undefined\n\n    const previewCreateAccessSharingPermissionSubscription = grantsStore\n      .checkDocumentPermission('create', {_id: schemaIdSingleton, _type: schemaTypeSingleton})\n      .subscribe(setCreateAccessSharingPermission)\n    const previewUpdateAccessSharingPermissionSubscription = grantsStore\n      .checkDocumentPermission('update', {_id: schemaIdSingleton, _type: schemaTypeSingleton})\n      .subscribe(setUpdateAccessSharingPermission)\n    const previewReadAccessSharingPermissionSubscription = grantsStore\n      .checkDocumentPermission('read', {_id: schemaIdSingleton, _type: schemaTypeSingleton})\n      .subscribe(setReadAccessSharingPermission)\n    const previewUrlSecretPermissionSubscription = grantsStore\n      .checkDocumentPermission('create', {_id: `drafts.${uuid()}`, _type: schemaType})\n      .subscribe(setPreviewUrlSecretPermission)\n\n    return () => {\n      previewCreateAccessSharingPermissionSubscription.unsubscribe()\n      previewUpdateAccessSharingPermissionSubscription.unsubscribe()\n      previewReadAccessSharingPermissionSubscription.unsubscribe()\n      previewUrlSecretPermissionSubscription.unsubscribe()\n    }\n  }, [grantsStore, willGeneratePreviewUrlSecret])\n\n  const canCreateUrlPreviewSecrets = previewUrlSecretPermission?.granted\n\n  useEffect(() => {\n    if (!willGeneratePreviewUrlSecret || canCreateUrlPreviewSecrets !== false) return undefined\n    const raf = requestAnimationFrame(() =>\n      pushToast({\n        closable: true,\n        status: 'error',\n        duration: 30_000,\n        title: t('preview-url-secret.missing-grants'),\n      }),\n    )\n    return () => cancelAnimationFrame(raf)\n  }, [canCreateUrlPreviewSecrets, pushToast, t, willGeneratePreviewUrlSecret])\n\n  const [vercelProtectionBypass, vercelProtectionBypassReadyState] = useVercelBypassSecret()\n\n  if (\n    vercelProtectionBypassReadyState === 'loading' ||\n    (willGeneratePreviewUrlSecret &&\n      (!previewAccessSharingCreatePermission ||\n        typeof previewAccessSharingCreatePermission.granted === 'undefined' ||\n        !previewAccessSharingUpdatePermission ||\n        typeof previewAccessSharingUpdatePermission.granted === 'undefined' ||\n        !previewUrlSecretPermission ||\n        !previewAccessSharingReadPermission ||\n        typeof previewAccessSharingReadPermission.granted === 'undefined' ||\n        typeof previewUrlSecretPermission.granted === 'undefined'))\n  ) {\n    return <PresentationSpinner />\n  }\n\n  return (\n    <PresentationTool\n      {...props}\n      vercelProtectionBypass={vercelProtectionBypass}\n      canCreateUrlPreviewSecrets={canCreateUrlPreviewSecrets === true}\n      canToggleSharePreviewAccess={\n        previewAccessSharingCreatePermission?.granted === true &&\n        previewAccessSharingUpdatePermission?.granted === true\n      }\n      canUseSharedPreviewAccess={previewAccessSharingReadPermission?.granted === true}\n    />\n  )\n}\n"],"names":["PostMessageFeatures","props","$","_c","comlink","t0","t1","on","_temp","useEffect","memo","features","optimistic","debounce","fn","timeout","timer","args","clearTimeout","setTimeout","apply","SharedStateProvider","children","Symbol","for","sharedState","useRef","t2","state","current","t3","key","value","post","setValue","t4","key_0","removeValue","t5","t6","context","t7","jsx","PresentationSharedStateContext","Root","styled","div","Panel","defaultSize","id","minWidth","maxWidth","order","undefined","useContext","PresentationPanelsContext","Error","getPanelStyle","registerElement","unregisterElement","style","type","useLayoutEffect","itemKey","getStoredItem","JSON","parse","localStorage","getItem","setStoredItem","data","setItem","stringify","getKeyForPanels","panels","map","panel","join","usePanelsStorage","get","_temp2","set","_temp3","setDebounced","panels_0","widths","stored_0","stored","Array","isArray","some","val","getNextWidth","nextWidth","containerWidth","maxWidthPx","minWidthPx","Math","min","max","getNextWidths","delta","panelBefore","panelAfter","panelsState","initialDragState","prevWidths","initialWidths","nextWidths","pivotPanel","index","findIndex","width","abs","deltaApplied","deltaRemaining","toPrecision","localeCompare","numeric","length","getPanelWidth","getOffset","event","handleElement","initialOffset","initialHandleElementRect","pointerOffset","clientX","elementOffset","getBoundingClientRect","left","isPanel","element","isResizer","getSortedElements","elements","from","values","sort","a","b","validateWidths","widthsToValidate","total","reduce","remainingWidth","toFixed","getDefaultWidths","panelsWithoutWidth","remainingWidthTotal","widthsWithNulls","defaultWidth","PanelsWrapper","Panels","panelsEl","Map","setElements","useState","filter","setWidths","activeResizer","setActiveResizer","panelsRef","flexGrow","pointerEvents","id_0","prev","has","next","t8","id_1","prev_0","next_0","delete","t9","window","innerWidth","dragOffset","resizerIndex","resizerRect","startX","dragRef","t10","id_2","elementsArr","el","resizer","resizeElement","acc","el_0","i","acc_0","el_1","i_0","pageX","startDragging","t11","stopDragging","t12","id_3","event_0","preventDefault","stopPropagation","resizer_0","resizeElement_0","offset","rect","prevWidth","i_1","drag","t13","t14","storage","t15","t16","widths_0","storedWidths","validatedStoredWidths","defaultWidths","t17","t18","t19","t20","resizeObserver","ResizeObserver","prevWidths_0","nextWidths_0","prevWidth_0","i_2","observe","disconnect","t21","t22","t23","t24","ErrorCard","message","onContinueAnyway","onRetry","restProps","t","useTranslation","presentationLocaleNamespace","Button","retryButton","continueAnywayButton","Text","jsxs","Stack","Inline","Box","Flex","Container","Card","encodeQueryString","params","parts","Object","entries","resolveQueryStringFromParams","nextParams","allowed","safeNextParams","includes","obj","BackLink","forwardRef","ref","searchParams","_searchParams","StateLink","ReferenceChildLink","documentId","documentType","parentRefPath","template","PresentationPaneRouterProvider","onStructureParams","structureParams","refs","routerState","resolvePathFromState","useRouter","fromEntries","routerSearchParams","useUnique","path","qs","createPathWithParams","childLinkProps","childId","find","r","_id","getPublishedId","_type","backLinkProps","childLinkProps_0","nextParams_0","inspect","groupIndex","siblingIndex","payload","hasGroupSiblings","groupLength","routerPanesState","ChildLink","ParameterizedLink","closeCurrentAndAfter","handleEditReference","replaceCurrent","_temp4","closeCurrent","_temp5","duplicateCurrent","_temp6","setView","_temp7","setParams","setPayload","_temp8","navigateIntent","_temp9","PaneRouterContext","intentName","intentParams","options_0","console","warn","options","viewId","pane_0","pane","RootLayout","PaneLayout","WrappedCode","Code","DocumentListPane","mainDocumentState","devMode","usePresentationTool","document","ids","schemaTypeName","title","errorParams","setErrorParams","handleRetry","Label","error","StructureDocumentListPane","ErrorBoundary","StructureToolProvider","r_0","DocumentPane","onFocusPath","templateParams","decodeJsonParams","templateParameters","paneDocumentNode","height","PresentationSpinner","Suspense","StructureDocumentPane","DocumentPanel","usePreviewState","schemaType","documentPreviewStore","useDocumentPreviewStore","preview","setPreview","subscription","getPreviewStateObservable","subscribe","unsubscribe","ContentEditor","schema","useSchema","props_0","MainDocumentLink","previewState","bb0","draft","published","getPreviewValueWithFallback","SanityDefaultPreview","PreviewCard","WarningOutlineIcon","Translate","usePanelId","uuid","panelId","Resizer","ResizerInner","$disabled","PanelResizer","propId","disabled","isDragging","nativeEvent","onMouseDown","e","onDrag","blur","onDragStop","resetDocumentStyles","bodyStyle","body","documentStyle","documentElement","cursor","userSelect","removeProperty","addEventListener","removeEventListener","PresentationContentWrapper","setDisplayedDocument","getCommentIntent","CommentsIntentProvider","DisplayedDocumentBroadcasterProvider","PresentationContent","documentsOnPage","PresentationNavigateProvider","navigate","_navigate","PresentationNavigateContext","useLocalState","defaultValue","usePresentationNavigator","unstable_navigator","navigatorProvided","component","_navigatorEnabled","setNavigatorEnabled","navigatorEnabled","toggleNavigator","Component","enabled","NavigatorComponent","navigatorDisabled","Navigator","PresentationParamsProvider","PresentationParamsContext","PresentationProvider","name","PresentationContext","encodeStudioPerspective","studioPerspective","IFrameElement","motion","create","iframe","IFrameOverlay","IFrame","animate","initial","onLoad","preventClick","src","variants","useId","replace","viewTransitionName","OpenPreviewButton","openPopup","previewLocationOrigin","previewLocationRoute","currentTarget","href","handleOpenPopup","LaunchIcon","Tooltip","PreviewLocationInput","fontSize","onChange","origin","padding","prefix","suffix","basePath","useActiveWorkspace","activeWorkspace","inputRef","sessionValue","setSessionValue","customValidity","setCustomValidity","handleChange","absoluteValue","startsWith","nextValue","slice","handleKeyDown","handleBlur","icon","ResetIcon","zIndex","TextInput","QRCodeSVG","lazy","QrCodeLogoSize","QrCodeLogoPadding","QrSize","StyledSanityMonogram","SanityMonogram","MotionSpinner","Spinner","MotionText","MotionMonogram","SharePreviewMenu","canToggleSharePreviewAccess","canUseSharedPreviewAccess","initialUrl","perspective","push","pushToast","useToast","client","useClient","apiVersion","API_VERSION","currentUser","useCurrentUser","loading","setLoading","enabling","setEnabling","disabling","setDisabling","secret","setSecret","busy","url","useMemo","setSecretSearchParams","setError","handleUnableToToggle","useCallback","closable","status","handleDisableSharing","disablePreviewAccessSharing","location","handleEnableSharing","previewUrlSecret","enablePreviewAccessSharing","handleCopyUrl","navigator","clipboard","writeText","toString","controller","AbortController","usedTags","fetchShareSecret","lastLiveEventId","signal","result","syncTags","fetch","fetchSharedAccessQuery","filterResponse","tag","aborted","live","events","abort","tags","finally","MenuButton","ShareIcon","Menu","Fragment","Grid","justifyContent","alignItems","gridTemplateColumns","gridTemplateRows","Switch","position","aspectRatio","display","AnimatePresence","opacity","textWrap","textAlign","MenuDivider","MenuItem","CopyIcon","constrainSize","placement","portal","displayName","PreviewHeaderDefault","canSharePreviewAccess","dispatch","iframeRef","onPathChange","onRefresh","overlaysConnection","previewUrl","setViewport","targetOrigin","toggleOverlay","viewport","visualEditing","overlaysEnabled","toggleViewportSize","ACTION_IFRAME_RELOAD","assign","handleRefresh","previewURL","URL","pathname","search","withoutSecretSearchParams","PanelLeftIcon","content","fallbackPlacements","whiteSpace","Hotkeys","marginTop","marginBottom","lineHeight","borderRadius","margin","t25","t26","t27","t28","t29","t30","RefreshIcon","t31","t32","t33","t34","t35","t36","t37","t38","t39","MobileDeviceIcon","DesktopIcon","t40","t41","t42","t43","PreviewHeader","renderDefault","HeaderComponent","header","minHeight","usePresentationPreviewHeader","MotionFlex","Preview","forwardedRef","loadersConnection","vercelProtectionBypass","stablePerspective","setStablePerspective","urlPerspective","urlSearchParamPreviewPerspective","urlSearchParamVercelProtectionBypass","urlSearchParamVercelSetBypassCookie","prefersReducedMotion","usePrefersReducedMotion","timedOut","setTimedOut","refreshing","somethingIsWrong","setSomethingIsWrong","iframeIsBusy","handleContinueAnyway","setContinueAnyway","continueAnyway","showOverlaysConnectionStatus","setShowOverlaysConnectionState","MAX_TIME_TO_OVERLAYS_CONNECTION","onIFrameLoad","ACTION_IFRAME_LOADED","instance","activeElement","dispatchEvent","MouseEvent","bubbles","cancelable","preventIframeInteraction","canUseViewTransition","useSyncExternalStore","CSS","supports","iframeAnimations","currentViewport","setCurrentViewport","iframeStyle","setIframeStyle","iframeVariants","update","startViewTransition","flushSync","MotionConfig","duration","TooltipDelayGroupProvider","spinnerVariants","inset","backdropFilter","WebkitBackdropFilter","WebkitTransition","sizes","errorVariants","background","desktop","mobile","exit","boxShadow","scale","idle","reloading","active","defineWarnOnce","warned","warnOnceAboutCrossDatasetReference","useDocumentsOnPage","frameStateRef","validateApiPerspective","setPublished","previewDrafts","setPreviewDrafts","urlRef","setDocumentsOnPage","sourceDocuments","documents","sourceDocument","_projectId","setCache","cache","isEqual","uniqueDocuments","forEach","doc","fnOrObj","arg","Function","getQueryFromResult","resolver","resolve","getParamsFromResult","getRouteContext","route","routes","absolute","match","decode","decodeURIComponent","useMainDocument","navigationHistory","resolvers","relativeUrl","setMainDocumentState","mainDocumentIdRef","handleResponse","useEffectEvent","at","base","query","then","catch","lengthyStr$1","pipe","string","minLength","optionalLengthyStr","optional","object","baseUrl","dataset","projectId","tool","workspace","parseId","rawId","segments","split","shift","parsePath","rawPath","studioPath","urlStringToPath","parseRouterState","pruneObject","useParams","initialPreviewUrl","routerNavigate","rev","since","view","pathKey","instruction","comment","changesInspectorTab","routerStateRef","setNavigationHistory","nextState","nextSearchState","forceReplace","routerSearchState","searchState","usePopups","popups","setPopups","Set","open","source","add","unsubs","size","closed","addTarget","unsub","interval","setInterval","POPUP_CHECK_INTERVAL","clearInterval","usePreviewUrl","toolName","studioPreviewPerspective","previewSearchParam","canCreateUrlPreviewSecrets","workspaceName","deps","useSuspendCacheKeys","usePreviewUrlSecret","suspend","resolvedUrl","resultUrl","restoredUrl","definePreviewUrl","studioBasePath","resolveUUID","cachedPreviewSearchParam","setCachedPreviewSearchParam","timeoutRef","secretLastExpiredAt","setSecretLastExpiredAt","createPreviewSecret","startTransition","expiresAt","getTime","Date","now","useStatus","statusMap","setStatusMap","handshaking","memoStatus","connection","hasConnected_0","hasConnected","status_1","setStatusFromEvent","status_0","LiveQueries","PostMessageDocuments","PostMessageRefreshMutations","PostMessagePerspective","PostMessagePreviewSnapshots","PostMessageSchema","PostMessageTelemetry","PresentationTool","components","_previewUrl","DEFAULT_TOOL_NAME","unstable_header","perspectiveStack","selectedPerspectiveName","selectedReleaseId","usePerspective","draftMode","shareAccess","previewMode","option","hostname","setController","visualEditingComlink","setVisualEditingComlink","useReducer","presentationReducer","presentationReducerInit","useProjectId","useDataset","mainDocuments","setOverlaysConnection","setLoadersConnection","previewKitConnection","setPreviewKitConnection","isLoading","target","contentWindow","createController","destroy","handleNavigate","createChannel","heartbeat","connectTo","createConnectionMachine","provide","actors","createCompatibilityActors","urlWithoutSearch","URLSearchParams","ACTION_VISUAL_EDITING_OVERLAYS_TOGGLE","refreshRef","ACTION_IFRAME_REFRESH","onStatus","stop","start","handleFocusPath","nextPath","handlePreviewPath","handleStructureParams","displayedDocument","handleKeyUp","isAltKey","handleKeydown","isHotkey","boundaryElement","setBoundaryElement","PresentationNavigator","fallback","livePreviewEnabled","useWorkspace","COMMENTS_INSPECTOR_NAME","mode","EDIT_INTENT_MODE","BoundaryElementProvider","IS_MAC","test","platform","MODIFIERS","alt","ctrl","mod","keys","every","toUpperCase","useVercelBypassSecret","vercelProtectionBypassReadyState","ready","vercelProtectionBypassSecret","setVercelProtectionBypassSecret","subcribeToVercelProtectionBypass","PresentationToolGrantsCheck","willGeneratePreviewUrlSecret","grantsStore","useGrantsStore","previewAccessSharingCreatePermission","setCreateAccessSharingPermission","previewAccessSharingUpdatePermission","setUpdateAccessSharingPermission","previewAccessSharingReadPermission","setReadAccessSharingPermission","previewUrlSecretPermission","setPreviewUrlSecretPermission","previewCreateAccessSharingPermissionSubscription","checkDocumentPermission","schemaIdSingleton","schemaTypeSingleton","previewUpdateAccessSharingPermissionSubscription","previewReadAccessSharingPermissionSubscription","previewUrlSecretPermissionSubscription","granted","raf","requestAnimationFrame","cancelAnimationFrame"],"mappings":"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","x_google_ignoreList":[32]}